
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-zWLHjG/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `PCIE_trans.v' to AST representation.
Generating RTLIL representation for module `\dual_port_memory'.
Generating RTLIL representation for module `\fifo'.
Generating RTLIL representation for module `\fsmControl'.
Generating RTLIL representation for module `\mux'.
Generating RTLIL representation for module `\Demux_D0_D1'.
Generating RTLIL representation for module `\demux'.
Generating RTLIL representation for module `\PCIE_trans'.
Warning: Identifier `\push_D0' is implicitly declared at PCIE_trans.v:152.
Warning: Identifier `\push_D1' is implicitly declared at PCIE_trans.v:153.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \fsmControl
Used module:     \fifo
Used module:         \dual_port_memory
Used module:     \Demux_D0_D1
Used module:     \mux
Used module:     \demux

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Generating RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 2
Parameter \M = 4
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 2
Parameter \M = 4
Parameter \ADDR_WIDTH = 4
Found cached RTLIL representation for module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 4
Parameter \M = 2
Parameter \ADDR_WIDTH = 16
Generating RTLIL representation for module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.

2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 4
Parameter \M = 2
Parameter \ADDR_WIDTH = 16
Found cached RTLIL representation for module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.

2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 2
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod\fifo\N=2\ADDR_WIDTH=4'.

2.8. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \fsmControl
Used module:     $paramod\fifo\N=2\M=4\ADDR_WIDTH=4
Used module:         \dual_port_memory
Used module:     \Demux_D0_D1
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=2\ADDR_WIDTH=16
Used module:     \demux
Used module:     $paramod\fifo\N=2\ADDR_WIDTH=4

2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Found cached RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Found cached RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Found cached RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.12. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \fsmControl
Used module:     $paramod\fifo\N=2\M=4\ADDR_WIDTH=4
Used module:         $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3
Used module:     \Demux_D0_D1
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=2\ADDR_WIDTH=16
Used module:     \demux
Used module:     $paramod\fifo\N=2\ADDR_WIDTH=4

2.13. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \fsmControl
Used module:     $paramod\fifo\N=2\M=4\ADDR_WIDTH=4
Used module:         $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3
Used module:     \Demux_D0_D1
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=2\ADDR_WIDTH=16
Used module:     \demux
Used module:     $paramod\fifo\N=2\ADDR_WIDTH=4
Removing unused module `\fifo'.
Removing unused module `\dual_port_memory'.
Removed 2 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
Cleaned up 3 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_INIT pass (extract init attributes).

3.4. Executing PROC_ARST pass (detect async resets in processes).

3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
     1/3: $0\num_mem[4:0]
     2/3: $0\rd_ptr[1:0]
     3/3: $0\wr_ptr[1:0]
Creating decoders for process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
     1/7: $0\Error_Fifo[0:0]
     2/7: $0\Fifo_Full[0:0]
     3/7: $0\Fifo_Empty[0:0]
     4/7: $0\Pausa[0:0]
     5/7: $0\Umbral[2:0]
     6/7: $0\Almost_Full[0:0]
     7/7: $0\Almost_Empty[0:0]
Creating decoders for process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
     1/4: $0\Fifo_Data_in_int[5:0]
     2/4: $0\pop_int[0:0]
     3/4: $0\push_int[0:0]
     4/4: $0\valid_out[0:0]
Creating decoders for process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$89'.
     1/2: $1\oDataOut[5:0]
     2/2: $0\oDataOut[5:0]
Creating decoders for process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
     1/3: $0$memwr$\Ram$dual_port_memory.v:18$84_EN[5:0]$88
     2/3: $0$memwr$\Ram$dual_port_memory.v:18$84_DATA[5:0]$87
     3/3: $0$memwr$\Ram$dual_port_memory.v:18$84_ADDR[1:0]$86
Creating decoders for process `\PCIE_trans.$proc$PCIE_trans.v:258$74'.
     1/3: $0\pop_vc1[0:0]
     2/3: $0\pop_vc0[0:0]
     3/3: $0\pausaD0D1[0:0]
Creating decoders for process `\PCIE_trans.$proc$PCIE_trans.v:233$67'.
     1/2: $0\pop_MF[0:0]
     2/2: $0\Pausa_VC_id[0:0]
Creating decoders for process `\PCIE_trans.$proc$PCIE_trans.v:213$65'.
     1/1: $0\pop2[0:0]
Creating decoders for process `\demux.$proc$demux.v:33$59'.
     1/4: $0\valid_1[0:0]
     2/4: $0\valid_0[0:0]
     3/4: $0\dataout1[5:0]
     4/4: $0\dataout0[5:0]
Creating decoders for process `\demux.$proc$demux.v:24$57'.
     1/1: $0\selectorL1[0:0]
Creating decoders for process `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
     1/4: $0\valid_1[0:0]
     2/4: $0\valid_0[0:0]
     3/4: $0\dataout1[5:0]
     4/4: $0\dataout0[5:0]
Creating decoders for process `\Demux_D0_D1.$proc$Demux_D0_D1.v:15$49'.
     1/1: $0\selectorL1[0:0]
Creating decoders for process `\mux.$proc$mux.v:23$44'.
     1/2: $0\dataout[5:0]
     2/2: $0\valid_out[0:0]
Creating decoders for process `\mux.$proc$mux.v:14$41'.
     1/1: $0\selectorL1[0:0]
Creating decoders for process `\fsmControl.$proc$fsm_Control.v:40$31'.
     1/6: $0\nxt_state[4:0]
     2/6: $0\state[4:0]
     3/6: $0\error_out[0:0]
     4/6: $0\idle_out[0:0]
     5/6: $0\active_out[0:0]
     6/6: $0\Umbrales_I[13:0]
Creating decoders for process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
     1/3: $0\num_mem[2:0]
     2/3: $0\rd_ptr[1:0]
     3/3: $0\wr_ptr[1:0]
Creating decoders for process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
     1/7: $0\Error_Fifo[0:0]
     2/7: $0\Fifo_Full[0:0]
     3/7: $0\Fifo_Empty[0:0]
     4/7: $0\Pausa[0:0]
     5/7: $0\Umbral[2:0]
     6/7: $0\Almost_Full[0:0]
     7/7: $0\Almost_Empty[0:0]
Creating decoders for process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
     1/4: $0\Fifo_Data_in_int[5:0]
     2/4: $0\pop_int[0:0]
     3/4: $0\push_int[0:0]
     4/4: $0\valid_out[0:0]
Creating decoders for process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
     1/3: $0\num_mem[2:0]
     2/3: $0\rd_ptr[3:0]
     3/3: $0\wr_ptr[3:0]
Creating decoders for process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
     1/7: $0\Error_Fifo[0:0]
     2/7: $0\Fifo_Full[0:0]
     3/7: $0\Fifo_Empty[0:0]
     4/7: $0\Pausa[0:0]
     5/7: $0\Umbral[4:0]
     6/7: $0\Almost_Full[0:0]
     7/7: $0\Almost_Empty[0:0]
Creating decoders for process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
     1/4: $0\Fifo_Data_in_int[5:0]
     2/4: $0\pop_int[0:0]
     3/4: $0\push_int[0:0]
     4/4: $0\valid_out[0:0]

3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.\oDataOut' from process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$89'.
No latch inferred for signal `\PCIE_trans.\Pausa_VC_id' from process `\PCIE_trans.$proc$PCIE_trans.v:233$67'.
No latch inferred for signal `\PCIE_trans.\pop_MF' from process `\PCIE_trans.$proc$PCIE_trans.v:233$67'.
No latch inferred for signal `\demux.\selectorL1' from process `\demux.$proc$demux.v:24$57'.
No latch inferred for signal `\Demux_D0_D1.\selectorL1' from process `\Demux_D0_D1.$proc$Demux_D0_D1.v:15$49'.
No latch inferred for signal `\mux.\selectorL1' from process `\mux.$proc$mux.v:14$41'.

3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\wr_ptr' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
  created $dff cell `$procdff$1040' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\rd_ptr' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
  created $dff cell `$procdff$1041' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\num_mem' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
  created $dff cell `$procdff$1042' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Almost_Empty' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1043' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Almost_Full' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1044' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Umbral' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1045' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Pausa' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1046' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Fifo_Empty' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1047' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Fifo_Full' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1048' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Error_Fifo' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
  created $dff cell `$procdff$1049' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\valid_out' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
  created $dff cell `$procdff$1050' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\push_int' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
  created $dff cell `$procdff$1051' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\pop_int' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
  created $dff cell `$procdff$1052' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.\Fifo_Data_in_int' using process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
  created $dff cell `$procdff$1053' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$84_ADDR' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
  created $dff cell `$procdff$1054' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$84_DATA' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
  created $dff cell `$procdff$1055' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$84_EN' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
  created $dff cell `$procdff$1056' with positive edge clock.
Creating register for signal `\PCIE_trans.\pausaD0D1' using process `\PCIE_trans.$proc$PCIE_trans.v:258$74'.
  created $dff cell `$procdff$1057' with positive edge clock.
Creating register for signal `\PCIE_trans.\pop_vc0' using process `\PCIE_trans.$proc$PCIE_trans.v:258$74'.
  created $dff cell `$procdff$1058' with positive edge clock.
Creating register for signal `\PCIE_trans.\pop_vc1' using process `\PCIE_trans.$proc$PCIE_trans.v:258$74'.
  created $dff cell `$procdff$1059' with positive edge clock.
Creating register for signal `\PCIE_trans.\pop2' using process `\PCIE_trans.$proc$PCIE_trans.v:213$65'.
  created $dff cell `$procdff$1060' with negative edge clock.
Creating register for signal `\demux.\dataout0' using process `\demux.$proc$demux.v:33$59'.
  created $dff cell `$procdff$1061' with positive edge clock.
Creating register for signal `\demux.\dataout1' using process `\demux.$proc$demux.v:33$59'.
  created $dff cell `$procdff$1062' with positive edge clock.
Creating register for signal `\demux.\valid_0' using process `\demux.$proc$demux.v:33$59'.
  created $dff cell `$procdff$1063' with positive edge clock.
Creating register for signal `\demux.\valid_1' using process `\demux.$proc$demux.v:33$59'.
  created $dff cell `$procdff$1064' with positive edge clock.
Creating register for signal `\Demux_D0_D1.\dataout0' using process `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
  created $dff cell `$procdff$1065' with positive edge clock.
Creating register for signal `\Demux_D0_D1.\dataout1' using process `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
  created $dff cell `$procdff$1066' with positive edge clock.
Creating register for signal `\Demux_D0_D1.\valid_0' using process `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
  created $dff cell `$procdff$1067' with positive edge clock.
Creating register for signal `\Demux_D0_D1.\valid_1' using process `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
  created $dff cell `$procdff$1068' with positive edge clock.
Creating register for signal `\mux.\valid_out' using process `\mux.$proc$mux.v:23$44'.
  created $dff cell `$procdff$1069' with positive edge clock.
Creating register for signal `\mux.\dataout' using process `\mux.$proc$mux.v:23$44'.
  created $dff cell `$procdff$1070' with positive edge clock.
Creating register for signal `\fsmControl.\Umbrales_I' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1071' with positive edge clock.
Creating register for signal `\fsmControl.\active_out' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1072' with positive edge clock.
Creating register for signal `\fsmControl.\idle_out' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1073' with positive edge clock.
Creating register for signal `\fsmControl.\error_out' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1074' with positive edge clock.
Creating register for signal `\fsmControl.\state' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1075' with positive edge clock.
Creating register for signal `\fsmControl.\nxt_state' using process `\fsmControl.$proc$fsm_Control.v:40$31'.
  created $dff cell `$procdff$1076' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\wr_ptr' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
  created $dff cell `$procdff$1077' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\rd_ptr' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
  created $dff cell `$procdff$1078' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\num_mem' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
  created $dff cell `$procdff$1079' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Almost_Empty' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Almost_Full' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Umbral' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Pausa' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Fifo_Empty' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Fifo_Full' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Error_Fifo' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\valid_out' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\push_int' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\pop_int' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\ADDR_WIDTH=4.\Fifo_Data_in_int' using process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\wr_ptr' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
  created $dff cell `$procdff$1091' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\rd_ptr' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
  created $dff cell `$procdff$1092' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\num_mem' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Almost_Empty' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1094' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Almost_Full' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Umbral' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Pausa' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Fifo_Empty' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Fifo_Full' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Error_Fifo' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\valid_out' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\push_int' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\pop_int' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.\Fifo_Data_in_int' using process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
  created $dff cell `$procdff$1104' with positive edge clock.

3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
Removing empty process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:453$96'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
Removing empty process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:66$94'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
Removing empty process `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$proc$fifo.v:49$92'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$89'.
Removing empty process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$89'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
Removing empty process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$85'.
Found and cleaned up 1 empty switch in `\PCIE_trans.$proc$PCIE_trans.v:258$74'.
Removing empty process `PCIE_trans.$proc$PCIE_trans.v:258$74'.
Removing empty process `PCIE_trans.$proc$PCIE_trans.v:233$67'.
Found and cleaned up 3 empty switches in `\PCIE_trans.$proc$PCIE_trans.v:213$65'.
Removing empty process `PCIE_trans.$proc$PCIE_trans.v:213$65'.
Found and cleaned up 7 empty switches in `\demux.$proc$demux.v:33$59'.
Removing empty process `demux.$proc$demux.v:33$59'.
Found and cleaned up 1 empty switch in `\demux.$proc$demux.v:24$57'.
Removing empty process `demux.$proc$demux.v:24$57'.
Found and cleaned up 7 empty switches in `\Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
Removing empty process `Demux_D0_D1.$proc$Demux_D0_D1.v:24$51'.
Found and cleaned up 1 empty switch in `\Demux_D0_D1.$proc$Demux_D0_D1.v:15$49'.
Removing empty process `Demux_D0_D1.$proc$Demux_D0_D1.v:15$49'.
Found and cleaned up 3 empty switches in `\mux.$proc$mux.v:23$44'.
Removing empty process `mux.$proc$mux.v:23$44'.
Found and cleaned up 1 empty switch in `\mux.$proc$mux.v:14$41'.
Removing empty process `mux.$proc$mux.v:14$41'.
Found and cleaned up 11 empty switches in `\fsmControl.$proc$fsm_Control.v:40$31'.
Removing empty process `fsmControl.$proc$fsm_Control.v:40$31'.
Found and cleaned up 4 empty switches in `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
Removing empty process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:453$140'.
Found and cleaned up 12 empty switches in `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
Removing empty process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:66$129'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
Removing empty process `$paramod\fifo\N=2\ADDR_WIDTH=4.$proc$fifo.v:49$127'.
Found and cleaned up 4 empty switches in `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
Removing empty process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:453$118'.
Found and cleaned up 12 empty switches in `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
Removing empty process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:66$107'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
Removing empty process `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$proc$fifo.v:49$105'.
Cleaned up 77 empty switches.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $mux cell `$procmux$158' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$200' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$203' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$197' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$194' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$191' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$170' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$188' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$185' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$182' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$206' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$209' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$212' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$215' in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$ternary$PCIE_trans.v:234$70' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$procmux$230' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$procmux$233' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$procmux$236' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$procmux$240' in module `PCIE_trans'.
Replacing $eq cell `$eq$demux.v:42$62' in module `demux' with inverter.
Replacing $eq cell `$eq$demux.v:48$63' in module `demux' with inverter.
Replacing $eq cell `$eq$demux.v:51$64' (1) in module `\demux' with constant driver `$eq$demux.v:51$64_Y = \valid_1'.
Optimizing away select inverter for $mux cell `$procmux$311' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$260' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$263' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$275' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$278' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$290' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$293' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$305' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$308' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$258' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$273' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$288' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$303' in module `demux'.
Replacing $eq cell `$eq$Demux_D0_D1.v:33$54' in module `Demux_D0_D1' with inverter.
Replacing $eq cell `$eq$Demux_D0_D1.v:39$55' in module `Demux_D0_D1' with inverter.
Replacing $eq cell `$eq$Demux_D0_D1.v:42$56' (1) in module `\Demux_D0_D1' with constant driver `$eq$Demux_D0_D1.v:42$56_Y = \valid_1'.
Optimizing away select inverter for $mux cell `$procmux$377' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$326' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$329' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$341' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$344' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$356' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$359' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$371' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$374' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$324' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$339' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$354' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$369' in module `Demux_D0_D1'.
Optimizing away select inverter for $mux cell `$procmux$386' in module `mux'.
Optimizing away select inverter for $mux cell `$procmux$395' in module `mux'.
Replacing $ne cell `$ne$fsm_Control.v:73$33' in module `fsmControl' with $logic_not.
Replacing $ne cell `$ne$fsm_Control.v:84$34' in module `fsmControl' with $logic_not.
Replacing $eq cell `$eq$fsm_Control.v:87$35' in module `fsmControl' with $logic_not.
Replacing $ne cell `$ne$fsm_Control.v:90$36' in module `fsmControl' with $logic_not.
Replacing $ne cell `$ne$fsm_Control.v:98$37' in module `fsmControl' with $logic_not.
Replacing $eq cell `$eq$fsm_Control.v:101$38' in module `fsmControl' with $logic_not.
Replacing $ne cell `$ne$fsm_Control.v:111$39' in module `fsmControl' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$404' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$408' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$441' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$444' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$455' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$471' in module `fsmControl'.
Optimizing away select inverter for $mux cell `$procmux$487' in module `fsmControl'.
Replacing $eq cell `$eq$fifo.v:79$131' in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with $logic_not.
Replacing $eq cell `$eq$fifo.v:124$136' in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$505' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$517' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$529' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$550' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$586' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$622' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$658' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$685' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$718' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$754' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$757' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$760' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$763' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$766' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Replacing $eq cell `$eq$fifo.v:79$109' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with $logic_not.
Replacing $eq cell `$eq$fifo.v:124$114' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$777' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$789' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$801' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$822' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$858' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$894' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$930' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$957' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$990' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$1026' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$1029' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$1032' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$1035' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$1038' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:465$101' is identical to cell `$add$fifo.v:470$104'.
    Redirecting output \Y: $add$fifo.v:465$101_Y = $add$fifo.v:470$104_Y
    Removing $add cell `$add$fifo.v:465$101' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:461$99' is identical to cell `$add$fifo.v:469$103'.
    Redirecting output \Y: $add$fifo.v:461$99_Y = $add$fifo.v:469$103_Y
    Removing $add cell `$add$fifo.v:461$99' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:67$95' is identical to cell `$logic_not$fifo.v:454$97'.
    Redirecting output \Y: $logic_not$fifo.v:67$95_Y = $logic_not$fifo.v:454$97_Y
    Removing $logic_not cell `$logic_not$fifo.v:67$95' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:50$93' is identical to cell `$logic_not$fifo.v:454$97'.
    Redirecting output \Y: $logic_not$fifo.v:50$93_Y = $logic_not$fifo.v:454$97_Y
    Removing $logic_not cell `$logic_not$fifo.v:50$93' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `\PCIE_trans'.
  Cell `$not$PCIE_trans.v:266$78' is identical to cell `$not$PCIE_trans.v:267$80'.
    Redirecting output \Y: $not$PCIE_trans.v:266$78_Y = $not$PCIE_trans.v:267$80_Y
    Removing $not cell `$not$PCIE_trans.v:266$78' from module `\PCIE_trans'.
Finding identical cells in module `\demux'.
  Cell `$logic_not$demux.v:25$58' is identical to cell `$logic_not$demux.v:34$60'.
    Redirecting output \Y: $logic_not$demux.v:25$58_Y = $logic_not$demux.v:34$60_Y
    Removing $logic_not cell `$logic_not$demux.v:25$58' from module `\demux'.
Finding identical cells in module `\Demux_D0_D1'.
  Cell `$logic_not$Demux_D0_D1.v:16$50' is identical to cell `$logic_not$Demux_D0_D1.v:25$52'.
    Redirecting output \Y: $logic_not$Demux_D0_D1.v:16$50_Y = $logic_not$Demux_D0_D1.v:25$52_Y
    Removing $logic_not cell `$logic_not$Demux_D0_D1.v:16$50' from module `\Demux_D0_D1'.
Finding identical cells in module `\mux'.
Finding identical cells in module `\fsmControl'.
  Cell `$procmux$485_CMP0' is identical to cell `$procmux$495_CMP0'.
    Redirecting output \Y: $procmux$485_CMP = $procmux$495_CMP
    Removing $eq cell `$procmux$485_CMP0' from module `\fsmControl'.
  Cell `$procmux$484_CMP0' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$484_CMP = $procmux$494_CMP
    Removing $eq cell `$procmux$484_CMP0' from module `\fsmControl'.
  Cell `$procmux$469_CMP0' is identical to cell `$procmux$495_CMP0'.
    Redirecting output \Y: $procmux$469_CMP = $procmux$495_CMP
    Removing $eq cell `$procmux$469_CMP0' from module `\fsmControl'.
  Cell `$procmux$468_CMP0' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$468_CMP = $procmux$494_CMP
    Removing $eq cell `$procmux$468_CMP0' from module `\fsmControl'.
  Cell `$procmux$467_CMP0' is identical to cell `$procmux$483_CMP0'.
    Redirecting output \Y: $procmux$467_CMP = $procmux$483_CMP
    Removing $eq cell `$procmux$467_CMP0' from module `\fsmControl'.
  Cell `$procmux$460_CMP0' is identical to cell `$procmux$482_CMP0'.
    Redirecting output \Y: $procmux$460_CMP = $procmux$482_CMP
    Removing $eq cell `$procmux$460_CMP0' from module `\fsmControl'.
  Cell `$procmux$459_CMP0' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$459_CMP = $procmux$475_CMP
    Removing $eq cell `$procmux$459_CMP0' from module `\fsmControl'.
  Cell `$procmux$453_CMP0' is identical to cell `$procmux$495_CMP0'.
    Redirecting output \Y: $procmux$453_CMP = $procmux$495_CMP
    Removing $eq cell `$procmux$453_CMP0' from module `\fsmControl'.
  Cell `$procmux$452_CMP0' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$452_CMP = $procmux$494_CMP
    Removing $eq cell `$procmux$452_CMP0' from module `\fsmControl'.
  Cell `$procmux$451_CMP0' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$451_CMP = $procmux$475_CMP
    Removing $eq cell `$procmux$451_CMP0' from module `\fsmControl'.
  Cell `$procmux$436_CMP0' is identical to cell `$procmux$495_CMP0'.
    Redirecting output \Y: $procmux$436_CMP = $procmux$495_CMP
    Removing $eq cell `$procmux$436_CMP0' from module `\fsmControl'.
  Cell `$procmux$435_CMP0' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$435_CMP = $procmux$494_CMP
    Removing $eq cell `$procmux$435_CMP0' from module `\fsmControl'.
  Cell `$procmux$431_CMP0' is identical to cell `$procmux$483_CMP0'.
    Redirecting output \Y: $procmux$431_CMP = $procmux$483_CMP
    Removing $eq cell `$procmux$431_CMP0' from module `\fsmControl'.
  Cell `$procmux$421_CMP0' is identical to cell `$procmux$482_CMP0'.
    Redirecting output \Y: $procmux$421_CMP = $procmux$482_CMP
    Removing $eq cell `$procmux$421_CMP0' from module `\fsmControl'.
  Cell `$procmux$414_CMP0' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$414_CMP = $procmux$475_CMP
    Removing $eq cell `$procmux$414_CMP0' from module `\fsmControl'.
  Cell `$ne$fsm_Control.v:98$37' is identical to cell `$ne$fsm_Control.v:111$39'.
    Redirecting output \Y: $ne$fsm_Control.v:98$37_Y = $ne$fsm_Control.v:111$39_Y
    Removing $reduce_bool cell `$ne$fsm_Control.v:98$37' from module `\fsmControl'.
  Cell `$eq$fsm_Control.v:87$35' is identical to cell `$eq$fsm_Control.v:101$38'.
    Redirecting output \Y: $eq$fsm_Control.v:87$35_Y = $eq$fsm_Control.v:101$38_Y
    Removing $logic_not cell `$eq$fsm_Control.v:87$35' from module `\fsmControl'.
  Cell `$ne$fsm_Control.v:84$34' is identical to cell `$ne$fsm_Control.v:111$39'.
    Redirecting output \Y: $ne$fsm_Control.v:84$34_Y = $ne$fsm_Control.v:111$39_Y
    Removing $reduce_bool cell `$ne$fsm_Control.v:84$34' from module `\fsmControl'.
  Cell `$ne$fsm_Control.v:73$33' is identical to cell `$ne$fsm_Control.v:111$39'.
    Redirecting output \Y: $ne$fsm_Control.v:73$33_Y = $ne$fsm_Control.v:111$39_Y
    Removing $reduce_bool cell `$ne$fsm_Control.v:73$33' from module `\fsmControl'.
  Cell `$not$fsm_Control.v:41$32' is identical to cell `$not$fsm_Control.v:114$40'.
    Redirecting output \Y: $not$fsm_Control.v:41$32_Y = $not$fsm_Control.v:114$40_Y
    Removing $not cell `$not$fsm_Control.v:41$32' from module `\fsmControl'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:465$145' is identical to cell `$add$fifo.v:470$148'.
    Redirecting output \Y: $add$fifo.v:465$145_Y = $add$fifo.v:470$148_Y
    Removing $add cell `$add$fifo.v:465$145' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:461$143' is identical to cell `$add$fifo.v:469$147'.
    Redirecting output \Y: $add$fifo.v:461$143_Y = $add$fifo.v:469$147_Y
    Removing $add cell `$add$fifo.v:461$143' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:111$135' is identical to cell `$eq$fifo.v:149$139'.
    Redirecting output \Y: $eq$fifo.v:111$135_Y = $eq$fifo.v:149$139_Y
    Removing $eq cell `$eq$fifo.v:111$135' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:103$134' is identical to cell `$eq$fifo.v:141$138'.
    Redirecting output \Y: $eq$fifo.v:103$134_Y = $eq$fifo.v:141$138_Y
    Removing $eq cell `$eq$fifo.v:103$134' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:87$132' is identical to cell `$eq$fifo.v:133$137'.
    Redirecting output \Y: $eq$fifo.v:87$132_Y = $eq$fifo.v:133$137_Y
    Removing $eq cell `$eq$fifo.v:87$132' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:79$131' is identical to cell `$eq$fifo.v:124$136'.
    Redirecting output \Y: $eq$fifo.v:79$131_Y = $eq$fifo.v:124$136_Y
    Removing $logic_not cell `$eq$fifo.v:79$131' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:67$130' is identical to cell `$logic_not$fifo.v:454$141'.
    Redirecting output \Y: $logic_not$fifo.v:67$130_Y = $logic_not$fifo.v:454$141_Y
    Removing $logic_not cell `$logic_not$fifo.v:67$130' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:50$128' is identical to cell `$logic_not$fifo.v:454$141'.
    Redirecting output \Y: $logic_not$fifo.v:50$128_Y = $logic_not$fifo.v:454$141_Y
    Removing $logic_not cell `$logic_not$fifo.v:50$128' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$add$fifo.v:465$123' is identical to cell `$add$fifo.v:470$126'.
    Redirecting output \Y: $add$fifo.v:465$123_Y = $add$fifo.v:470$126_Y
    Removing $add cell `$add$fifo.v:465$123' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$add$fifo.v:461$121' is identical to cell `$add$fifo.v:469$125'.
    Redirecting output \Y: $add$fifo.v:461$121_Y = $add$fifo.v:469$125_Y
    Removing $add cell `$add$fifo.v:461$121' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:111$113' is identical to cell `$eq$fifo.v:149$117'.
    Redirecting output \Y: $eq$fifo.v:111$113_Y = $eq$fifo.v:149$117_Y
    Removing $eq cell `$eq$fifo.v:111$113' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:103$112' is identical to cell `$eq$fifo.v:141$116'.
    Redirecting output \Y: $eq$fifo.v:103$112_Y = $eq$fifo.v:141$116_Y
    Removing $eq cell `$eq$fifo.v:103$112' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:87$110' is identical to cell `$eq$fifo.v:133$115'.
    Redirecting output \Y: $eq$fifo.v:87$110_Y = $eq$fifo.v:133$115_Y
    Removing $eq cell `$eq$fifo.v:87$110' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:79$109' is identical to cell `$eq$fifo.v:124$114'.
    Redirecting output \Y: $eq$fifo.v:79$109_Y = $eq$fifo.v:124$114_Y
    Removing $logic_not cell `$eq$fifo.v:79$109' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$logic_not$fifo.v:67$108' is identical to cell `$logic_not$fifo.v:454$119'.
    Redirecting output \Y: $logic_not$fifo.v:67$108_Y = $logic_not$fifo.v:454$119_Y
    Removing $logic_not cell `$logic_not$fifo.v:67$108' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$logic_not$fifo.v:50$106' is identical to cell `$logic_not$fifo.v:454$119'.
    Redirecting output \Y: $logic_not$fifo.v:50$106_Y = $logic_not$fifo.v:454$119_Y
    Removing $logic_not cell `$logic_not$fifo.v:50$106' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Removed a total of 43 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$215 (pure)
    Root of a mux tree: $procmux$212 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$206 (pure)
    Root of a mux tree: $procmux$203 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$197 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $procmux$191 (pure)
    Root of a mux tree: $procmux$188 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$182 (pure)
    Root of a mux tree: $procmux$170 (pure)
    Root of a mux tree: $procmux$158 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$227 (pure)
    Root of a mux tree: $procmux$224 (pure)
    Root of a mux tree: $procmux$221 (pure)
    Root of a mux tree: $procmux$218 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$245 (pure)
    Root of a mux tree: $procmux$236 (pure)
    Root of a mux tree: $procmux$233 (pure)
    Root of a mux tree: $procmux$230 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:235$73 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:234$70 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$278 (pure)
      Replacing known input bits on port A of cell $procmux$273: \valid_0 -> 1'0
    Root of a mux tree: $procmux$263 (pure)
      Replacing known input bits on port A of cell $procmux$258: \valid_1 -> 1'0
      Replacing known input bits on port A of cell $procmux$255: \valid_1 -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$299.
    dead port 2/2 on $mux $procmux$284.
    dead port 2/2 on $mux $procmux$269.
    dead port 2/2 on $mux $procmux$255.
    dead port 2/2 on $mux $procmux$251.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$359 (pure)
    Root of a mux tree: $procmux$344 (pure)
      Replacing known input bits on port A of cell $procmux$339: \valid_0 -> 1'0
    Root of a mux tree: $procmux$329 (pure)
      Replacing known input bits on port A of cell $procmux$324: \valid_1 -> 1'0
      Replacing known input bits on port A of cell $procmux$321: \valid_1 -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$365.
    dead port 2/2 on $mux $procmux$350.
    dead port 2/2 on $mux $procmux$335.
    dead port 2/2 on $mux $procmux$321.
    dead port 2/2 on $mux $procmux$317.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$398 (pure)
    Root of a mux tree: $procmux$395 (pure)
    Root of a mux tree: $procmux$386 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$458 (pure)
    Root of a mux tree: $procmux$455
    Root of a mux tree: $procmux$493 (pure)
    Root of a mux tree: $procmux$450 (pure)
    Root of a mux tree: $procmux$444
    Root of a mux tree: $procmux$441 (pure)
    Root of a mux tree: $procmux$413 (pure)
    Root of a mux tree: $procmux$404
    Root of a mux tree: $procmux$474 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$766 (pure)
    Root of a mux tree: $procmux$763 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$754 (pure)
    Root of a mux tree: $procmux$718 (pure)
    Root of a mux tree: $procmux$685 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$586 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$517 (pure)
    Root of a mux tree: $procmux$505 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1038 (pure)
    Root of a mux tree: $procmux$1035 (pure)
    Root of a mux tree: $procmux$1032 (pure)
    Root of a mux tree: $procmux$1029 (pure)
    Root of a mux tree: $procmux$1026 (pure)
    Root of a mux tree: $procmux$990 (pure)
    Root of a mux tree: $procmux$957 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$894 (pure)
    Root of a mux tree: $procmux$858 (pure)
    Root of a mux tree: $procmux$822 (pure)
    Root of a mux tree: $procmux$801 (pure)
    Root of a mux tree: $procmux$789 (pure)
    Root of a mux tree: $procmux$777 (pure)
  Analyzing evaluation results.
Removed 10 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
    Consolidated identical input bits for $mux cell $procmux$221:
      Old ports: A=6'000000, B=6'111111, Y=$procmux$221_Y
      New ports: A=1'0, B=1'1, Y=$procmux$221_Y [0]
      New connections: $procmux$221_Y [5:1] = { $procmux$221_Y [0] $procmux$221_Y [0] $procmux$221_Y [0] $procmux$221_Y [0] $procmux$221_Y [0] }
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
    New ctrl vector for $mux cell $procmux$273: { }
    New ctrl vector for $mux cell $procmux$258: { }
  Optimizing cells in module \demux.
  Optimizing cells in module \Demux_D0_D1.
    New ctrl vector for $mux cell $procmux$339: { }
    New ctrl vector for $mux cell $procmux$324: { }
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \mux.
  Optimizing cells in module \fsmControl.
    New ctrl vector for $pmux cell $procmux$458: { $procmux$483_CMP $auto$opt_reduce.cc:132:opt_mux$1106 }
    New ctrl vector for $pmux cell $procmux$450: { $auto$opt_reduce.cc:132:opt_mux$1108 $procmux$475_CMP }
    New ctrl vector for $pmux cell $procmux$474: { $procmux$482_CMP $auto$opt_reduce.cc:132:opt_mux$1110 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1105: { $procmux$475_CMP $procmux$482_CMP $procmux$494_CMP $procmux$495_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1107: { $procmux$494_CMP $procmux$495_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1109: { $procmux$475_CMP $procmux$483_CMP $procmux$494_CMP $procmux$495_CMP }
  Optimizing cells in module \fsmControl.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
Performed a total of 11 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$procmux$209' is identical to cell `$procmux$215'.
    Redirecting output \Y: $procmux$209_Y = $procmux$215_Y
    Removing $mux cell `$procmux$209' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
  Cell `$procdff$1050' is identical to cell `$procdff$1052'.
    Redirecting output \Q: \valid_out = \pop_int
    Removing $dff cell `$procdff$1050' from module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\mux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$760' is identical to cell `$procmux$766'.
    Redirecting output \Y: $procmux$760_Y = $procmux$766_Y
    Removing $mux cell `$procmux$760' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$722' is identical to cell `$procmux$737'.
    Redirecting output \Y: $procmux$722_Y = $procmux$737_Y
    Removing $mux cell `$procmux$722' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$590' is identical to cell `$procmux$605'.
    Redirecting output \Y: $procmux$590_Y = $procmux$605_Y
    Removing $mux cell `$procmux$590' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$554' is identical to cell `$procmux$569'.
    Redirecting output \Y: $procmux$554_Y = $procmux$569_Y
    Removing $mux cell `$procmux$554' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procdff$1087' is identical to cell `$procdff$1089'.
    Redirecting output \Q: \valid_out = \pop_int
    Removing $dff cell `$procdff$1087' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$725' is identical to cell `$procmux$740'.
    Redirecting output \Y: $procmux$725_Y = $procmux$740_Y
    Removing $mux cell `$procmux$725' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$593' is identical to cell `$procmux$608'.
    Redirecting output \Y: $procmux$593_Y = $procmux$608_Y
    Removing $mux cell `$procmux$593' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$procmux$557' is identical to cell `$procmux$572'.
    Redirecting output \Y: $procmux$557_Y = $procmux$572_Y
    Removing $mux cell `$procmux$557' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$1032' is identical to cell `$procmux$1038'.
    Redirecting output \Y: $procmux$1032_Y = $procmux$1038_Y
    Removing $mux cell `$procmux$1032' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$994' is identical to cell `$procmux$1009'.
    Redirecting output \Y: $procmux$994_Y = $procmux$1009_Y
    Removing $mux cell `$procmux$994' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$862' is identical to cell `$procmux$877'.
    Redirecting output \Y: $procmux$862_Y = $procmux$877_Y
    Removing $mux cell `$procmux$862' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$826' is identical to cell `$procmux$841'.
    Redirecting output \Y: $procmux$826_Y = $procmux$841_Y
    Removing $mux cell `$procmux$826' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procdff$1101' is identical to cell `$procdff$1103'.
    Redirecting output \Q: \valid_out = \pop_int
    Removing $dff cell `$procdff$1101' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$997' is identical to cell `$procmux$1012'.
    Redirecting output \Y: $procmux$997_Y = $procmux$1012_Y
    Removing $mux cell `$procmux$997' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$865' is identical to cell `$procmux$880'.
    Redirecting output \Y: $procmux$865_Y = $procmux$880_Y
    Removing $mux cell `$procmux$865' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$procmux$829' is identical to cell `$procmux$844'.
    Redirecting output \Y: $procmux$829_Y = $procmux$844_Y
    Removing $mux cell `$procmux$829' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Removed a total of 18 cells.

4.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1047 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1046 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1045 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1044 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1043 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1049 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Removing $procdff$1048 ($dff) from module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Replaced 7 DFF cells.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  removing unused `$mux' cell `$procmux$155'.
  removing unused `$mux' cell `$procmux$152'.
  removing unused `$mux' cell `$procmux$158'.
  removing unused `$mux' cell `$procmux$200'.
  removing unused `$mux' cell `$procmux$203'.
  removing unused `$mux' cell `$procmux$197'.
  removing unused `$mux' cell `$procmux$194'.
  removing unused `$mux' cell `$procmux$191'.
  removing unused `$mux' cell `$procmux$188'.
  removing unused `$mux' cell `$procmux$185'.
  removing unused `$logic_not' cell `$logic_not$fifo.v:454$97'.
  removing unused `$add' cell `$add$fifo.v:460$98'.
  removing unused `$sub' cell `$sub$fifo.v:464$100'.
  removing unused `$dff' cell `$procdff$1042'.
  removing unused non-port wire \num_mem.
  removed 1 unused temporary wires.
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module \PCIE_trans..
  removing unused `$logic_not' cell `$logic_not$PCIE_trans.v:219$66'.
  removing unused `$not' cell `$not$PCIE_trans.v:234$69'.
  removing unused `$logic_not' cell `$logic_not$PCIE_trans.v:259$75'.
  removing unused `$mux' cell `$procmux$240'.
  removing unused `$mux' cell `$procmux$242'.
  removing unused `$mux' cell `$procmux$245'.
  removing unused `$dff' cell `$procdff$1060'.
  removing unused non-port wire \pop2.
  removing unused non-port wire \FIFO_empty.
  removing unused non-port wire \FIFO_error.
  removing unused non-port wire \pop1.
  removing unused non-port wire \valid_out_D1.
  removing unused non-port wire \valid_out_D0.
  removed 6 unused temporary wires.
Finding unused cells or wires in module \demux..
  removing unused `$logic_not' cell `$logic_not$demux.v:34$60'.
  removing unused `$not' cell `$not$demux.v:41$61'.
  removing unused `$not' cell `$eq$demux.v:42$62'.
  removing unused `$not' cell `$eq$demux.v:48$63'.
Finding unused cells or wires in module \Demux_D0_D1..
  removing unused `$logic_not' cell `$logic_not$Demux_D0_D1.v:25$52'.
  removing unused `$not' cell `$not$Demux_D0_D1.v:32$53'.
  removing unused `$not' cell `$eq$Demux_D0_D1.v:33$54'.
  removing unused `$not' cell `$eq$Demux_D0_D1.v:39$55'.
Finding unused cells or wires in module \mux..
  removing unused `$logic_not' cell `$logic_not$mux.v:24$45'.
Finding unused cells or wires in module \fsmControl..
  removing unused `$not' cell `$not$fsm_Control.v:114$40'.
  removing unused non-port wire \nxt_umbral_VC1.
  removing unused non-port wire \nxt_umbral_VC0.
  removed 2 unused temporary wires.
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
  removing unused `$logic_not' cell `$logic_not$fifo.v:454$141'.
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  removing unused `$logic_not' cell `$logic_not$fifo.v:454$119'.

4.8. Executing OPT_EXPR pass (perform const folding).

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$218 (pure)
    Root of a mux tree: $procmux$221 (pure)
    Root of a mux tree: $procmux$224 (pure)
    Root of a mux tree: $procmux$227 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
    Root of a mux tree: $procmux$517 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$572
    Root of a mux tree: $procmux$586 (pure)
    Root of a mux tree: $procmux$608
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$685 (pure)
    Root of a mux tree: $procmux$718 (pure)
    Root of a mux tree: $procmux$740
    Root of a mux tree: $procmux$754 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$763 (pure)
    Root of a mux tree: $procmux$766 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$170 (pure)
    Root of a mux tree: $procmux$182 (pure)
    Root of a mux tree: $procmux$206 (pure)
    Root of a mux tree: $procmux$212 (pure)
    Root of a mux tree: $procmux$215 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1012
    Root of a mux tree: $procmux$1026 (pure)
    Root of a mux tree: $procmux$1029 (pure)
    Root of a mux tree: $procmux$1035 (pure)
    Root of a mux tree: $procmux$1038 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $procmux$789 (pure)
    Root of a mux tree: $procmux$801 (pure)
    Root of a mux tree: $procmux$822 (pure)
    Root of a mux tree: $procmux$844
    Root of a mux tree: $procmux$858 (pure)
    Root of a mux tree: $procmux$880
    Root of a mux tree: $procmux$894 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$957 (pure)
    Root of a mux tree: $procmux$990 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$359 (pure)
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$230 (pure)
    Root of a mux tree: $procmux$233 (pure)
    Root of a mux tree: $procmux$236 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:234$70 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:235$73 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$263 (pure)
    Root of a mux tree: $procmux$278 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$404
    Root of a mux tree: $procmux$413 (pure)
    Root of a mux tree: $procmux$441 (pure)
    Root of a mux tree: $procmux$444
    Root of a mux tree: $procmux$450 (pure)
    Root of a mux tree: $procmux$455
    Root of a mux tree: $procmux$458 (pure)
    Root of a mux tree: $procmux$474 (pure)
    Root of a mux tree: $procmux$493 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$386 (pure)
    Root of a mux tree: $procmux$395 (pure)
    Root of a mux tree: $procmux$398 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \fsmControl.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

4.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

4.15. Executing OPT_EXPR pass (perform const folding).

4.16. Finished OPT passes. (There is nothing left to do.)

5. Executing FSM pass (extract and optimize FSM).

5.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$84_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking fsmControl.nxt_state as FSM state register:
    Users of register don't seem to benefit from recoding.

5.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

5.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$218 (pure)
    Root of a mux tree: $procmux$221 (pure)
    Root of a mux tree: $procmux$224 (pure)
    Root of a mux tree: $procmux$227 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
    Root of a mux tree: $procmux$517 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$572
    Root of a mux tree: $procmux$586 (pure)
    Root of a mux tree: $procmux$608
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$685 (pure)
    Root of a mux tree: $procmux$718 (pure)
    Root of a mux tree: $procmux$740
    Root of a mux tree: $procmux$754 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$763 (pure)
    Root of a mux tree: $procmux$766 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$170 (pure)
    Root of a mux tree: $procmux$182 (pure)
    Root of a mux tree: $procmux$206 (pure)
    Root of a mux tree: $procmux$212 (pure)
    Root of a mux tree: $procmux$215 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1012
    Root of a mux tree: $procmux$1026 (pure)
    Root of a mux tree: $procmux$1029 (pure)
    Root of a mux tree: $procmux$1035 (pure)
    Root of a mux tree: $procmux$1038 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $procmux$789 (pure)
    Root of a mux tree: $procmux$801 (pure)
    Root of a mux tree: $procmux$822 (pure)
    Root of a mux tree: $procmux$844
    Root of a mux tree: $procmux$858 (pure)
    Root of a mux tree: $procmux$880
    Root of a mux tree: $procmux$894 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$957 (pure)
    Root of a mux tree: $procmux$990 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$359 (pure)
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$230 (pure)
    Root of a mux tree: $procmux$233 (pure)
    Root of a mux tree: $procmux$236 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:234$70 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:235$73 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$263 (pure)
    Root of a mux tree: $procmux$278 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$404
    Root of a mux tree: $procmux$413 (pure)
    Root of a mux tree: $procmux$441 (pure)
    Root of a mux tree: $procmux$444
    Root of a mux tree: $procmux$450 (pure)
    Root of a mux tree: $procmux$455
    Root of a mux tree: $procmux$458 (pure)
    Root of a mux tree: $procmux$474 (pure)
    Root of a mux tree: $procmux$493 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$386 (pure)
    Root of a mux tree: $procmux$395 (pure)
    Root of a mux tree: $procmux$398 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \fsmControl.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

6.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

6.8. Executing OPT_EXPR pass (perform const folding).

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing MEMORY pass.

7.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\Ram$dual_port_memory.v:18$91' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3': merged $dff to cell.
Checking cell `$memrd$\Ram$dual_port_memory.v:24$90' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3': no (compatible) $dff found.

7.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  removing unused `$dff' cell `$procdff$1054'.
  removing unused `$dff' cell `$procdff$1055'.
  removing unused `$dff' cell `$procdff$1056'.
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

7.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

7.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\Ram' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3':
  $memwr$\Ram$dual_port_memory.v:18$91 ($memwr)
  $memrd$\Ram$dual_port_memory.v:24$90 ($memrd)

7.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \Ram in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3:
  created 4 $dff cells and 0 static cells of width 6.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1131' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1129' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1147' (1) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$auto$rtlil.cc:1641:Eq$1148 = $0$memwr$\Ram$dual_port_memory.v:18$84_ADDR[1:0]$86 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1139' (1) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$auto$rtlil.cc:1641:Eq$1140 = $0$memwr$\Ram$dual_port_memory.v:18$84_ADDR[1:0]$86 [0]'.

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $memory\Ram$wrmux[2][0][0]$1153 (pure)
    Root of a mux tree: $memory\Ram$wrmux[1][0][0]$1145 (pure)
    Root of a mux tree: $memory\Ram$wrmux[0][0][0]$1137 (pure)
    Root of a mux tree: $memory\Ram$wrmux[3][0][0]$1159 (pure)
    Root of a mux tree: $procmux$218 (pure)
    Root of a mux tree: $procmux$221 (pure)
    Root of a mux tree: $procmux$224
    Root of a mux tree: $procmux$227 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
    Root of a mux tree: $procmux$517 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$572
    Root of a mux tree: $procmux$586 (pure)
    Root of a mux tree: $procmux$608
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$685 (pure)
    Root of a mux tree: $procmux$718 (pure)
    Root of a mux tree: $procmux$740
    Root of a mux tree: $procmux$754 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$763 (pure)
    Root of a mux tree: $procmux$766 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$170 (pure)
    Root of a mux tree: $procmux$182 (pure)
    Root of a mux tree: $procmux$206 (pure)
    Root of a mux tree: $procmux$212 (pure)
    Root of a mux tree: $procmux$215 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1012
    Root of a mux tree: $procmux$1026 (pure)
    Root of a mux tree: $procmux$1029 (pure)
    Root of a mux tree: $procmux$1035 (pure)
    Root of a mux tree: $procmux$1038 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $procmux$789 (pure)
    Root of a mux tree: $procmux$801 (pure)
    Root of a mux tree: $procmux$822 (pure)
    Root of a mux tree: $procmux$844
    Root of a mux tree: $procmux$858 (pure)
    Root of a mux tree: $procmux$880
    Root of a mux tree: $procmux$894 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$957 (pure)
    Root of a mux tree: $procmux$990 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$359 (pure)
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$230 (pure)
    Root of a mux tree: $procmux$233 (pure)
    Root of a mux tree: $procmux$236 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:234$70 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:235$73 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$263 (pure)
    Root of a mux tree: $procmux$278 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$404
    Root of a mux tree: $procmux$413 (pure)
    Root of a mux tree: $procmux$441 (pure)
    Root of a mux tree: $procmux$444
    Root of a mux tree: $procmux$450 (pure)
    Root of a mux tree: $procmux$455
    Root of a mux tree: $procmux$458 (pure)
    Root of a mux tree: $procmux$474 (pure)
    Root of a mux tree: $procmux$493 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$386 (pure)
    Root of a mux tree: $procmux$395 (pure)
    Root of a mux tree: $procmux$398 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \fsmControl.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

8.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

8.8. Executing OPT_EXPR pass (perform const folding).

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing TECHMAP pass (map to technology primitives).

9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping fsmControl.$ne$fsm_Control.v:90$36 ($reduce_bool) with simplemap.
Mapping fsmControl.$eq$fsm_Control.v:101$38 ($logic_not) with simplemap.
Mapping fsmControl.$ne$fsm_Control.v:111$39 ($reduce_bool) with simplemap.
Mapping fsmControl.$auto$opt_reduce.cc:126:opt_mux$1105 ($reduce_or) with simplemap.
Mapping fsmControl.$auto$opt_reduce.cc:126:opt_mux$1107 ($reduce_or) with simplemap.
Mapping fsmControl.$auto$opt_reduce.cc:126:opt_mux$1109 ($reduce_or) with simplemap.
Mapping fsmControl.$procmux$401 ($mux) with simplemap.
Mapping fsmControl.$procmux$404 ($mux) with simplemap.
Mapping fsmControl.$procmux$408 ($mux) with simplemap.
Mapping fsmControl.$procmux$411 ($mux) with simplemap.

9.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 5
Parameter \S_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=5\S_WIDTH=5'.

9.3. Continuing TECHMAP pass.
Mapping fsmControl.$procmux$413 using $paramod\_90_pmux\WIDTH=5\S_WIDTH=5.
Mapping fsmControl.$procmux$416 ($mux) with simplemap.
Mapping fsmControl.$procmux$419 ($mux) with simplemap.
Mapping fsmControl.$procmux$423 ($mux) with simplemap.
Mapping fsmControl.$procmux$426 ($mux) with simplemap.
Mapping fsmControl.$procmux$429 ($mux) with simplemap.
Mapping fsmControl.$procmux$433 ($mux) with simplemap.
Mapping fsmControl.$procmux$438 ($mux) with simplemap.
Mapping fsmControl.$procmux$441 ($mux) with simplemap.
Mapping fsmControl.$procmux$444 ($mux) with simplemap.
Mapping fsmControl.$procmux$448 ($mux) with simplemap.

9.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

9.5. Continuing TECHMAP pass.
Mapping fsmControl.$procmux$450 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fsmControl.$procmux$455 ($mux) with simplemap.
Mapping fsmControl.$procmux$458 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fsmControl.$procmux$462 ($mux) with simplemap.
Mapping fsmControl.$procmux$465 ($mux) with simplemap.
Mapping fsmControl.$procmux$471 ($mux) with simplemap.
Mapping fsmControl.$procmux$475_CMP0 ($eq) with simplemap.
Mapping fsmControl.$procmux$474 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fsmControl.$procmux$477 ($mux) with simplemap.
Mapping fsmControl.$procmux$480 ($mux) with simplemap.
Mapping fsmControl.$procmux$482_CMP0 ($eq) with simplemap.
Mapping fsmControl.$procmux$483_CMP0 ($eq) with simplemap.
Mapping fsmControl.$procmux$487 ($mux) with simplemap.
Mapping fsmControl.$procmux$494_CMP0 ($eq) with simplemap.

9.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 14
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=14\S_WIDTH=2'.

9.7. Continuing TECHMAP pass.
Mapping fsmControl.$procmux$493 using $paramod\_90_pmux\WIDTH=14\S_WIDTH=2.
Mapping fsmControl.$procmux$495_CMP0 ($eq) with simplemap.
Mapping fsmControl.$procdff$1071 ($dff) with simplemap.
Mapping fsmControl.$procdff$1072 ($dff) with simplemap.
Mapping fsmControl.$procdff$1073 ($dff) with simplemap.
Mapping fsmControl.$procdff$1074 ($dff) with simplemap.
Mapping fsmControl.$procdff$1075 ($dff) with simplemap.
Mapping fsmControl.$procdff$1076 ($dff) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1423 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1422 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1421 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1420 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$450.$reduce_or$<techmap.v>:441$1317 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1419 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$450.$and$<techmap.v>:434$1316 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$450.$reduce_or$<techmap.v>:445$1313 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$450.$ternary$<techmap.v>:445$1314 ($mux) with simplemap.
Mapping fsmControl.$techmap$procmux$450.$and$<techmap.v>:434$1315 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1418 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1417 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1416 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1415 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1414 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$and$<techmap.v>:434$1413 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$and$<techmap.v>:434$1412 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$ternary$<techmap.v>:445$1411 ($mux) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:445$1410 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1426 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1427 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1425 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$493.$reduce_or$<techmap.v>:441$1424 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$474.$ternary$<techmap.v>:445$1314 ($mux) with simplemap.
Mapping fsmControl.$techmap$procmux$474.$reduce_or$<techmap.v>:445$1313 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$474.$reduce_or$<techmap.v>:441$1317 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$474.$and$<techmap.v>:434$1315 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$474.$and$<techmap.v>:434$1316 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$458.$reduce_or$<techmap.v>:445$1313 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$458.$ternary$<techmap.v>:445$1314 ($mux) with simplemap.
Mapping fsmControl.$techmap$procmux$458.$and$<techmap.v>:434$1315 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$458.$reduce_or$<techmap.v>:441$1317 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$458.$and$<techmap.v>:434$1316 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:445$1259 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$ternary$<techmap.v>:445$1260 ($mux) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$and$<techmap.v>:434$1261 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$and$<techmap.v>:434$1262 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$and$<techmap.v>:434$1263 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$and$<techmap.v>:434$1264 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$and$<techmap.v>:434$1265 ($and) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:441$1266 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:441$1267 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:441$1268 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:441$1270 ($reduce_or) with simplemap.
Mapping fsmControl.$techmap$procmux$413.$reduce_or$<techmap.v>:441$1269 ($reduce_or) with simplemap.
Mapping mux.$logic_not$mux.v:15$42 ($logic_not) with simplemap.
Mapping mux.$logic_and$mux.v:15$43 ($logic_and) with simplemap.
Mapping mux.$logic_not$mux.v:28$46 ($logic_not) with simplemap.
Mapping mux.$logic_and$mux.v:28$47 ($logic_and) with simplemap.
Mapping mux.$logic_and$mux.v:32$48 ($logic_and) with simplemap.
Mapping mux.$procmux$380 ($mux) with simplemap.
Mapping mux.$procmux$383 ($mux) with simplemap.
Mapping mux.$procmux$386 ($mux) with simplemap.
Mapping mux.$procmux$389 ($mux) with simplemap.
Mapping mux.$procmux$392 ($mux) with simplemap.
Mapping mux.$procmux$395 ($mux) with simplemap.
Mapping mux.$procmux$398 ($mux) with simplemap.
Mapping mux.$procdff$1069 ($dff) with simplemap.
Mapping mux.$procdff$1070 ($dff) with simplemap.
Mapping Demux_D0_D1.$procmux$315 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$326 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$329 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$333 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$341 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$344 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$348 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$354 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$356 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$359 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$363 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$369 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$371 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$374 ($mux) with simplemap.
Mapping Demux_D0_D1.$procmux$377 ($mux) with simplemap.
Mapping Demux_D0_D1.$procdff$1065 ($dff) with simplemap.
Mapping Demux_D0_D1.$procdff$1066 ($dff) with simplemap.
Mapping Demux_D0_D1.$procdff$1067 ($dff) with simplemap.
Mapping Demux_D0_D1.$procdff$1068 ($dff) with simplemap.
Mapping demux.$procmux$249 ($mux) with simplemap.
Mapping demux.$procmux$260 ($mux) with simplemap.
Mapping demux.$procmux$263 ($mux) with simplemap.
Mapping demux.$procmux$267 ($mux) with simplemap.
Mapping demux.$procmux$275 ($mux) with simplemap.
Mapping demux.$procmux$278 ($mux) with simplemap.
Mapping demux.$procmux$282 ($mux) with simplemap.
Mapping demux.$procmux$288 ($mux) with simplemap.
Mapping demux.$procmux$290 ($mux) with simplemap.
Mapping demux.$procmux$293 ($mux) with simplemap.
Mapping demux.$procmux$297 ($mux) with simplemap.
Mapping demux.$procmux$303 ($mux) with simplemap.
Mapping demux.$procmux$305 ($mux) with simplemap.
Mapping demux.$procmux$308 ($mux) with simplemap.
Mapping demux.$procmux$311 ($mux) with simplemap.
Mapping demux.$procdff$1061 ($dff) with simplemap.
Mapping demux.$procdff$1062 ($dff) with simplemap.
Mapping demux.$procdff$1063 ($dff) with simplemap.
Mapping demux.$procdff$1064 ($dff) with simplemap.
Mapping PCIE_trans.$or$PCIE_trans.v:234$68 ($or) with simplemap.
Mapping PCIE_trans.$ternary$PCIE_trans.v:234$70 ($mux) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:235$71 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:235$72 ($and) with simplemap.
Mapping PCIE_trans.$ternary$PCIE_trans.v:235$73 ($mux) with simplemap.
Mapping PCIE_trans.$or$PCIE_trans.v:265$76 ($or) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:266$77 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:266$79 ($and) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:267$80 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:267$81 ($and) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:267$82 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:267$83 ($and) with simplemap.
Mapping PCIE_trans.$procmux$230 ($mux) with simplemap.
Mapping PCIE_trans.$procmux$233 ($mux) with simplemap.
Mapping PCIE_trans.$procmux$236 ($mux) with simplemap.
Mapping PCIE_trans.$procdff$1057 ($dff) with simplemap.
Mapping PCIE_trans.$procdff$1058 ($dff) with simplemap.
Mapping PCIE_trans.$procdff$1059 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[0]$1112 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[1]$1114 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:65:addr_decode$1131 ($not) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:65:addr_decode$1129 ($not) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][1][1]$1126 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$1133 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$218 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$221 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$224 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$227 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][1][0]$1123 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][0][0]$1120 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[3]$1118 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[3][0][0]$1159 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[3][0][0]$1157 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$1155 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[2][0][0]$1153 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[2][0][0]$1151 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$1149 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[1][0][0]$1145 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[1][0][0]$1143 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$1141 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[0][0][0]$1137 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[0][0][0]$1135 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[2]$1116 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$161 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$179 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$176 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$173 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$170 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$167 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$164 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$182 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$logic_and$fifo.v:467$102 ($logic_and) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$1998
  created 1 $alu and 0 $macc cells.

9.9. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$add$fifo.v:469$103 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$add$fifo.v:470$104 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$206 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$212 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procmux$215 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procdff$1041 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procdff$1040 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procdff$1051 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procdff$1052 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$procdff$1053 ($dff) with simplemap.

9.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 2
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32'.

9.11. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023 ($and) with simplemap.

9.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=32'.

9.13. Executing PROC pass (convert processes to netlists).

9.13.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.13.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

9.13.3. Executing PROC_INIT pass (extract init attributes).

9.13.4. Executing PROC_ARST pass (detect async resets in processes).

9.13.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$2190'.
     1/64: $0\p[31:0] [30]
     2/64: $0\g[31:0] [30]
     3/64: $0\p[31:0] [28]
     4/64: $0\g[31:0] [28]
     5/64: $0\p[31:0] [26]
     6/64: $0\g[31:0] [26]
     7/64: $0\p[31:0] [24]
     8/64: $0\g[31:0] [24]
     9/64: $0\p[31:0] [22]
    10/64: $0\g[31:0] [22]
    11/64: $0\p[31:0] [20]
    12/64: $0\g[31:0] [20]
    13/64: $0\p[31:0] [18]
    14/64: $0\g[31:0] [18]
    15/64: $0\p[31:0] [16]
    16/64: $0\g[31:0] [16]
    17/64: $0\p[31:0] [14]
    18/64: $0\g[31:0] [14]
    19/64: $0\p[31:0] [12]
    20/64: $0\g[31:0] [12]
    21/64: $0\p[31:0] [10]
    22/64: $0\g[31:0] [10]
    23/64: $0\p[31:0] [8]
    24/64: $0\g[31:0] [8]
    25/64: $0\p[31:0] [6]
    26/64: $0\g[31:0] [6]
    27/64: $0\p[31:0] [4]
    28/64: $0\g[31:0] [4]
    29/64: $0\p[31:0] [2]
    30/64: $0\g[31:0] [2]
    31/64: $0\p[31:0] [29]
    32/64: $0\g[31:0] [29]
    33/64: $0\p[31:0] [25]
    34/64: $0\g[31:0] [25]
    35/64: $0\p[31:0] [21]
    36/64: $0\g[31:0] [21]
    37/64: $0\p[31:0] [17]
    38/64: $0\g[31:0] [17]
    39/64: $0\p[31:0] [13]
    40/64: $0\g[31:0] [13]
    41/64: $0\p[31:0] [9]
    42/64: $0\g[31:0] [9]
    43/64: $0\p[31:0] [5]
    44/64: $0\g[31:0] [5]
    45/64: $0\p[31:0] [27]
    46/64: $0\g[31:0] [27]
    47/64: $0\p[31:0] [19]
    48/64: $0\g[31:0] [19]
    49/64: $0\p[31:0] [11]
    50/64: $0\g[31:0] [11]
    51/64: $0\p[31:0] [23]
    52/64: $0\g[31:0] [23]
    53/64: $0\p[31:0] [31]
    54/64: $0\g[31:0] [31]
    55/64: $0\p[31:0] [15]
    56/64: $0\g[31:0] [15]
    57/64: $0\p[31:0] [7]
    58/64: $0\g[31:0] [7]
    59/64: $0\p[31:0] [3]
    60/64: $0\g[31:0] [3]
    61/64: $0\p[31:0] [1]
    62/64: $0\g[31:0] [1]
    63/64: $0\g[31:0] [0]
    64/64: $0\p[31:0] [0]

9.13.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\g' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$2190'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\p' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$2190'.

9.13.7. Executing PROC_DFF pass (convert process syncs to FFs).

9.13.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$2190'.
Cleaned up 0 empty switches.

9.14. Executing OPT pass (performing simple optimizations).

9.14.1. Executing OPT_EXPR pass (perform const folding).

9.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=32'.
Removed a total of 0 cells.

9.14.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=32..
  removing unused `$and' cell `$and$<techmap.v>:222$2195'.
  removing unused `$and' cell `$and$<techmap.v>:222$2243'.
  removing unused `$and' cell `$and$<techmap.v>:222$2267'.
  removing unused `$and' cell `$and$<techmap.v>:222$2279'.
  removing unused `$and' cell `$and$<techmap.v>:222$2285'.
  removing unused `$and' cell `$and$<techmap.v>:230$2288'.
  removing unused `$and' cell `$and$<techmap.v>:230$2291'.
  removing unused `$and' cell `$and$<techmap.v>:230$2294'.
  removing unused `$and' cell `$and$<techmap.v>:230$2297'.
  removing unused `$and' cell `$and$<techmap.v>:230$2300'.
  removing unused `$and' cell `$and$<techmap.v>:230$2303'.
  removing unused `$and' cell `$and$<techmap.v>:230$2306'.
  removing unused `$and' cell `$and$<techmap.v>:230$2309'.
  removing unused `$and' cell `$and$<techmap.v>:230$2312'.
  removing unused `$and' cell `$and$<techmap.v>:230$2315'.
  removing unused `$and' cell `$and$<techmap.v>:230$2318'.
  removing unused `$and' cell `$and$<techmap.v>:230$2321'.
  removing unused `$and' cell `$and$<techmap.v>:230$2324'.
  removing unused `$and' cell `$and$<techmap.v>:230$2327'.
  removing unused `$and' cell `$and$<techmap.v>:230$2330'.
  removing unused `$and' cell `$and$<techmap.v>:230$2333'.
  removing unused `$and' cell `$and$<techmap.v>:230$2336'.
  removing unused `$and' cell `$and$<techmap.v>:230$2339'.
  removing unused `$and' cell `$and$<techmap.v>:230$2342'.
  removing unused `$and' cell `$and$<techmap.v>:230$2345'.
  removing unused `$and' cell `$and$<techmap.v>:230$2348'.
  removing unused `$and' cell `$and$<techmap.v>:230$2351'.
  removing unused `$and' cell `$and$<techmap.v>:230$2354'.
  removing unused `$and' cell `$and$<techmap.v>:230$2357'.
  removing unused `$and' cell `$and$<techmap.v>:230$2360'.
  removing unused `$and' cell `$and$<techmap.v>:230$2363'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

9.14.5. Finished fast OPT passes.

9.15. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$eq$fifo.v:95$111 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$eq$fifo.v:124$114 ($logic_not) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$eq$fifo.v:133$115 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$eq$fifo.v:141$116 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$eq$fifo.v:149$117 ($eq) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.16. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$2930
  created 1 $alu and 0 $macc cells.

9.17. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$add$fifo.v:460$120 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $sub ($sub).
  creating $alu model for $macc $sub.
  creating $alu cell for $sub: $auto$alumacc.cc:470:replace_alu$2933
  created 1 $alu and 0 $macc cells.

9.19. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$sub$fifo.v:464$122 using $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$logic_and$fifo.v:467$124 ($logic_and) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$2937
  created 1 $alu and 0 $macc cells.

9.21. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$add$fifo.v:469$125 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$add$fifo.v:470$126 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$771 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$774 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$777 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$780 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$783 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$786 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$789 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$792 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$795 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$798 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$801 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$805 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$808 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$811 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$814 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$817 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$819 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$822 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$832 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$835 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$837 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$841 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$844 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$847 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$850 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$853 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$855 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$858 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$868 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$871 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$873 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$877 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$880 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$883 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$886 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$889 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$891 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$894 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$898 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$901 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$904 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$907 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$909 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$913 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$916 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$919 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$922 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$925 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$927 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$930 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$941 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$954 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$957 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$961 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$964 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$967 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$970 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$972 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$976 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$979 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$982 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$985 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$987 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$990 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1000 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1003 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1005 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1009 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1012 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1015 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1018 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1021 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1023 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1026 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1029 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1035 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procmux$1038 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1091 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1092 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1093 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1094 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1095 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1096 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1097 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1098 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1099 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1100 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1102 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1103 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$procdff$1104 ($dff) with simplemap.

9.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 3
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32'.

9.23. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.

9.24. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32'.

9.25. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$eq$fifo.v:95$133 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$eq$fifo.v:124$136 ($logic_not) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$eq$fifo.v:133$137 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$eq$fifo.v:141$138 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$eq$fifo.v:149$139 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$add$fifo.v:460$142 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$sub$fifo.v:464$144 using $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$logic_and$fifo.v:467$146 ($logic_and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$add$fifo.v:469$147 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$add$fifo.v:470$148 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$499 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$502 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$505 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$508 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$511 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$514 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$517 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$520 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$523 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$526 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$529 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$533 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$536 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$539 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$542 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$545 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$547 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$550 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$560 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$563 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$565 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$569 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$572 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$575 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$578 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$581 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$583 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$586 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$596 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$599 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$601 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$605 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$608 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$611 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$614 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$617 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$619 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$622 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$626 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$629 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$632 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$635 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$637 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$641 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$644 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$647 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$650 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$653 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$655 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$658 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$669 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$682 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$685 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$689 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$692 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$695 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$698 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$700 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$704 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$707 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$710 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$713 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$715 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$718 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$728 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$731 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$733 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$737 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$740 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$743 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$746 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$749 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$751 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$754 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$757 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$763 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procmux$766 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1077 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1078 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1079 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1080 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1081 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1082 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1083 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1084 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1085 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1086 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1088 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1089 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$procdff$1090 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094 ($not) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094 ($not) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021 ($not) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021 ($not) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361 ($and) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:212$2192 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2194 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2242 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2266 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2278 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2284 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2287 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2290 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2293 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2296 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2299 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2302 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2305 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2308 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2311 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2314 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2317 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2320 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2323 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2326 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2329 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2332 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2335 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2338 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2341 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2344 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2347 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2350 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2353 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2356 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2359 ($or) with simplemap.
Mapping $paramod\fifo\N=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:229$2362 ($or) with simplemap.
No more expansions possible.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1917' (01?) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$0$memwr$\Ram$dual_port_memory.v:18$84_EN[5:0]$88 [5] = \iWriteEnable'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4318' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4316 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4320' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4316 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4337' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4334 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4338' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4334 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4351' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4347 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4362' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4360 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4363' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4360 [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4791' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4759' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4790' (1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4758' (101) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4726' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4694' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5286' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:212$2191_Y = \num_mem [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5370' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [0] = \num_mem [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4792' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4760' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4727' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4630' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4598' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4534' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4629' (1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4597' (100) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4565' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5144' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5228' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4500' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [0] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4631' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4599' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4535' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [2] = \num_mem [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4566' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5229' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [1] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5016' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5048' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5080' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [1] = \rd_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5015' (1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5047' (100) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4983' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [0] = \rd_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5570' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5654' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [0] = \rd_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5111' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [0] = $techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4855' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4887' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4919' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [1] = \wr_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4854' (1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4886' (100) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4822' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [0] = \wr_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5428' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5512' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [0] = \wr_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4950' (?0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [0] = $techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4399' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4400' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4401' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4402' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4403' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4409' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4410' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4406' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4407' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4411' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4412' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4413' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4419' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4420' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4416' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4417' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4421' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4422' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4423' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4426' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4427' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4428' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4429' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4431' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4432' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4433' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4434' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4435' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4447' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4448' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4449' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4450' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4452' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4453' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4454' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4455' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4461' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4462' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4458' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4459' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4463' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4464' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4465' in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4632' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4600' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4536' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4567' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5271' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [2] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4503' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [3] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4633' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4601' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4537' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5176' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5161' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4568' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5146' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5230' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5245' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4504' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4634' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4602' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4538' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4569' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5214' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5272' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4505' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4635' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4603' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4539' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5177' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5206' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4570' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5147' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5231' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5264' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4506' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4636' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4604' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4540' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4571' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5215' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5273' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4507' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4637' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4605' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4541' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5178' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5191' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5169' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5162' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4572' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5148' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5232' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5246' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5253' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4508' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4638' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4606' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4542' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4573' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5216' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5274' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4509' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4639' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4607' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4543' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5179' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5207' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4574' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5149' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5233' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5265' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4510' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4640' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4608' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4544' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4575' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5217' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5275' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4511' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4641' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4609' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4545' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5180' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5192' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5203' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5163' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4576' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5150' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5234' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5247' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5261' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4512' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4642' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4610' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4546' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4577' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5218' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5276' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4513' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4643' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4611' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4547' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5181' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5208' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4578' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5151' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5235' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5266' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4514' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4644' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4612' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4548' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4579' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5219' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5277' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4515' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4645' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4613' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4549' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5182' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5193' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5198' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5173' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5170' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5164' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4580' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5152' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5236' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5248' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5254' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5257' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4516' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4646' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4614' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4550' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4581' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5220' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5278' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4517' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4647' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4615' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4551' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5183' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5209' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4582' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5153' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5237' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5267' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4518' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4648' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4616' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4552' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4583' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5221' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5279' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4519' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4649' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4617' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4553' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5184' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5194' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5204' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5165' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4584' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5154' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5238' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5249' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5262' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4520' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4650' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4618' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4554' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4585' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5222' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5280' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4521' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4651' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4619' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4555' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5185' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5210' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4586' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5155' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5239' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5268' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4522' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4652' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4620' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4556' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4587' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5223' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5281' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4523' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4653' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4621' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4557' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5186' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5195' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5199' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5202' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5171' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5166' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4588' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5156' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5240' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5250' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5255' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5260' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4524' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4654' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4622' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4558' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4589' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5224' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5282' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4525' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4655' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4623' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4559' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5187' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5211' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4590' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5157' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5241' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5269' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4526' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4656' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4624' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4560' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4591' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5225' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5283' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4527' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4657' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4625' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4561' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5188' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5196' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5205' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5167' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4592' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5158' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5242' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5251' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5263' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4528' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4658' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4626' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4562' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4593' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5226' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5284' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4529' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4659' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4627' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4563' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5189' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5212' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4594' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5159' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5243' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5270' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4530' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4660' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4628' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4564' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4595' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5227' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5285' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4531' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5190' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5197' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5200' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5201' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5175' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5174' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5172' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5168' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4596' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5160' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5244' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5252' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5256' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5258' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5259' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:460$142.$auto$alumacc.cc:484:replace_alu$2932 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4532' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4793' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4761' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4697' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4728' (?1) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [2] = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4794' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4762' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [4] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4698' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5318' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2198_Y = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4729' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5288' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2196_Y = \num_mem [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5372' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2197_Y = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4795' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4763' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4699' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4730' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5356' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2322_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5414' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [4] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4796' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4764' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4700' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5319' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2201_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5348' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2298_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4731' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5289' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5373' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5406' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [5] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4797' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4765' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4701' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4732' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5357' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2325_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5415' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [6] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4798' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4766' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4702' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5320' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2204_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5333' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2246_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5311' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2265_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5304' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4733' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5290' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5374' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5388' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5395' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [7] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4799' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4767' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4703' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4734' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5358' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2328_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5416' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [8] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4800' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4768' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4704' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [10] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5321' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2207_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5349' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2301_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4735' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5291' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5375' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5407' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [9] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4801' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4769' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4705' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4736' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5359' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2331_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5417' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [10] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4802' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4770' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4706' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [12] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5322' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2210_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5334' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2249_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5345' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2289_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5305' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4737' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5292' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5376' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5389' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5403' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [11] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4803' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4771' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4707' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4738' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5360' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2334_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5418' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [12] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4804' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4772' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4708' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [14] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5323' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2213_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5350' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2304_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4739' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5293' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5377' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5408' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [13] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4805' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4773' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4709' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4740' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5361' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2337_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5419' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [14] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4806' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4774' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4710' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [16] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5324' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2216_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5335' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2252_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5340' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2270_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5315' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2277_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5312' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5306' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4741' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5294' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5378' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5390' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5396' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5399' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [15] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4807' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4775' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4711' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [17] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4742' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5362' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2340_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5420' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [16] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4808' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4776' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4712' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [18] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5325' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2219_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5351' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2307_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4743' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5295' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5379' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5409' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [17] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4809' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4777' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4713' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [19] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4744' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5363' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2343_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5421' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [18] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4810' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4778' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4714' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [20] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5326' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2222_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5336' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2255_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5346' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2292_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5307' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4745' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5296' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5380' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5391' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5404' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [19] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4811' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4779' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4715' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [21] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4746' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5364' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2346_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5422' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [20] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4812' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4780' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4716' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [22] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5327' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2225_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5352' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2310_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4747' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5297' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5381' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5410' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [21] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4813' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4781' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4717' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [23] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4748' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5365' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2349_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5423' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [22] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4814' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4782' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4718' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [24] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5328' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2228_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5337' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2258_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5341' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2273_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5344' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2286_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5313' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5308' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4749' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5298' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5382' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5392' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5397' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5402' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [23] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4815' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4783' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4719' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [25] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4750' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5366' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2352_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5424' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [24] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4816' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4784' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4720' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [26] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5329' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2231_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5353' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2313_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4751' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5299' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5383' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5411' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [25] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4817' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4785' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4721' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [27] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4752' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5367' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2355_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5425' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [26] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4818' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4786' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [28] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4722' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5330' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2234_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5338' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2261_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5347' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2295_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5309' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4753' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5300' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5384' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5393' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5405' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [27] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4819' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4787' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4723' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [29] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4754' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5368' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2358_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5426' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [28] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4820' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4788' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [30] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4724' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5331' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2237_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5354' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2316_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4755' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5301' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5385' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5412' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [29] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4821' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4789' (011) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4725' (01) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4756' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5369' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2361_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5427' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [30] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5332' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2240_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5339' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2264_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5342' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2276_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5343' (11) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2282_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5317' (1?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2283_Y = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5316' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5314' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5310' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4757' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5302' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5386' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5394' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5398' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5400' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5401' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [31] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4693' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [32] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4823' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4856' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4888' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4824' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4857' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4889' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4825' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4858' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4890' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4826' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4859' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4891' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4827' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4860' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4892' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4828' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4861' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4893' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4829' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4862' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4894' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4830' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4863' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4895' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4831' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4864' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4896' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4832' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4865' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4897' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4833' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4866' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4898' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4834' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4867' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4899' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4835' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4868' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4900' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4836' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4869' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4901' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4837' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4870' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4902' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4838' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4871' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4903' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4839' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4872' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4904' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4840' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4873' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4905' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4841' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4874' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4906' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4842' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4875' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4907' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4843' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4876' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4908' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4844' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4877' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4909' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4845' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4878' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4910' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4846' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4879' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4911' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4847' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4880' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4912' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4848' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4881' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4913' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4849' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4882' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4914' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4850' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4883' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4915' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4851' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4884' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4916' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4852' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4885' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4917' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4853' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4920' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4921' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4922' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4923' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4924' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4925' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4926' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4927' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4928' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4929' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4930' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4931' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4932' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4933' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4934' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4935' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4936' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4937' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4938' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4939' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4940' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4941' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4942' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4943' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4944' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4945' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4946' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4947' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4948' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4949' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [31] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5513' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [1] = $techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4952' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [2] = $techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5497' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5555' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4953' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5460' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5445' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5430' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5514' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5529' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4954' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5498' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5556' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4955' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5461' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5490' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5431' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5515' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5548' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4956' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5499' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5557' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4957' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5462' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5475' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5453' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5446' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5432' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5516' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5530' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5537' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4958' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5500' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5558' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4959' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5463' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5491' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5433' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5517' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5549' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4960' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5501' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5559' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4961' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5464' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5476' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5487' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5447' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5434' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5518' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5531' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5545' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4962' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5502' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5560' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4963' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5465' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5492' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5435' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5519' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5550' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4964' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5503' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5561' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4965' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5466' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5477' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5482' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5457' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5454' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5448' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5436' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5520' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5532' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5538' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5541' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4966' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5504' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5562' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4967' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5467' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5493' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5437' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5521' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5551' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4968' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5505' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5563' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4969' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5468' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5478' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5488' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5449' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5438' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5522' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5533' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5546' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4970' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5506' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5564' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4971' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5469' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5494' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5439' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5523' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5552' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4972' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5507' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5565' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4973' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5470' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5479' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5483' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5486' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5455' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5450' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5440' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5524' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5534' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5539' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5544' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4974' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5508' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5566' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4975' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5471' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5495' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5441' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5525' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5553' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4976' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5509' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5567' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4977' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5472' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5480' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5489' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5451' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5442' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5526' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5535' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5547' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4978' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5510' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5568' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4979' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5473' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5496' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5443' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5527' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5554' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4980' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5511' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5569' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4981' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5474' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5481' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5484' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5485' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5459' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5458' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5456' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5452' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5444' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5528' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5536' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5540' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5542' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5543' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$147.$auto$alumacc.cc:484:replace_alu$2000 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4982' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$147.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [32] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4984' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5017' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5049' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4985' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5018' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5050' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4986' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5019' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5051' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4987' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5020' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5052' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4988' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5021' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5053' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4989' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5022' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5054' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4990' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5023' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5055' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4991' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5024' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5056' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4992' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5025' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5057' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4993' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5026' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5058' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4994' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5027' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5059' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4995' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5028' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5060' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4996' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5029' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5061' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4997' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5030' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5062' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4998' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5031' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5063' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4999' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5032' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5064' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5000' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5033' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5065' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5001' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5034' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5066' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5002' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5035' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5067' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5003' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5036' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5068' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5004' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5037' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5069' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5005' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5038' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5070' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5006' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5039' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5071' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5007' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5040' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5072' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5008' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5041' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5073' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5009' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5042' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5074' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5010' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5043' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5075' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5011' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5044' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5076' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5012' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5045' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5077' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5013' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5046' (0) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5078' (010) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5014' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5081' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5082' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5083' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5084' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5085' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5086' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5087' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5088' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5089' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5090' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5091' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5092' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5093' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5094' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5095' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5096' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5097' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5098' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5099' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5100' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5101' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5102' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5103' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5104' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5105' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5106' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5107' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5108' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5109' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5110' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [31] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5655' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [1] = $techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5113' (0?) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [2] = $techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5639' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5697' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5114' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5602' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5587' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5572' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5656' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5671' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5115' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5640' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5698' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5116' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5603' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5632' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5573' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5657' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5690' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5117' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5641' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5699' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5118' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5604' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5617' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5595' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5588' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5574' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5658' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5672' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5679' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5119' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5642' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5700' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5120' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5605' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5633' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5575' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5659' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5691' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5121' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5643' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5701' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5122' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5606' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5618' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5629' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5589' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5576' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5660' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5673' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5687' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5123' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5644' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5702' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5124' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5607' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5634' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5577' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5661' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5692' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5125' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5645' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5703' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5126' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5608' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5619' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5624' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5599' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5596' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5590' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5578' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5662' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5674' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5680' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5683' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5127' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5646' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5704' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5128' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5609' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5635' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5579' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5663' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5693' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5129' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5647' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5705' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5130' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5610' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5620' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5630' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5591' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5580' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5664' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5675' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5688' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5131' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5648' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5706' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5132' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5611' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5636' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5581' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5665' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5694' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5133' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5649' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5707' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5134' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5612' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5621' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5625' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5628' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5597' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5592' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5582' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5666' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5676' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5681' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5686' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5135' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5650' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5708' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5136' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5613' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5637' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5583' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5667' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5695' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5137' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5651' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5709' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5138' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5614' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5622' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5631' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5593' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5584' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5668' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5677' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5689' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5139' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5652' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5710' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5140' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5615' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5638' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5585' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5669' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5696' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5141' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5653' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5711' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5142' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5616' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5623' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5626' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5627' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5601' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5600' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5598' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5594' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5586' (const_and) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5670' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5678' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5682' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5684' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5685' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$148.$auto$alumacc.cc:484:replace_alu$2000 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5143' (00) in module `$paramod\fifo\N=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$148.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2397' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2365' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2396' (1) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2364' (100) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [0] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2398' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2366' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2407' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [11] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2406' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [10] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2405' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [9] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2404' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2399' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2367' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2403' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2402' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2401' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [5] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2400' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [4] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2427' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2395' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [31] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2426' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2394' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2425' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2393' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2424' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2392' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2423' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2391' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2422' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2390' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2421' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2389' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2420' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2388' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2419' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2387' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2418' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2386' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2417' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2385' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2416' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2384' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2415' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2383' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2414' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2382' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2413' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2381' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2412' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2380' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2411' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2379' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2410' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2378' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2409' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2377' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2408' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2376' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2375' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2374' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2373' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2372' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2371' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2370' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2369' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2368' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2558' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2526' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2429' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [1] = \rd_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2557' (1) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2525' (100) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2493' (?1) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [0] = \rd_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2731' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2815' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [0] = \rd_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2460' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [0] = $techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2027' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [1] = \wr_ptr [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2091' (?1) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [0] = \wr_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2714' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2688' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [0] = \wr_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2058' (?0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [0] = $techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2028' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2029' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2030' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2031' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2032' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2033' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2034' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2035' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2036' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2037' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2038' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2039' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2040' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2041' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2042' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2043' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2044' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2045' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2046' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2047' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2048' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2049' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2050' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2051' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2052' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2053' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2054' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2055' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2056' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2057' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2092' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2687' (0?) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [1] = $techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2060' (0?) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [2] = $techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2679' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2610' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2061' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2623' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2635' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2712' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2686' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2695' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2062' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2095' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2678' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2609' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2063' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2096' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2711' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2685' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2622' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2724' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2629' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2064' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2097' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2677' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2608' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2065' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2621' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2634' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2098' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2710' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2684' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2694' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2666' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2716' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2655' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2066' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2099' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2676' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2607' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2067' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2100' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2709' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2601' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2620' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2723' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2628' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2068' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2101' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2675' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2606' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2069' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2619' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2665' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2648' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2593' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2102' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2708' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2600' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2693' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2632' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2070' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2103' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2674' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2605' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2071' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2104' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2707' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2599' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2617' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2722' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2627' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2072' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2105' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2673' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2604' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2073' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2616' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2664' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2656' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2639' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2592' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2106' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2706' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2597' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2692' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2715' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2653' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2644' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2074' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2107' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2671' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2603' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2075' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2108' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2705' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2596' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2615' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2683' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2626' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2076' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2109' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2670' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2602' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2077' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2614' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2663' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2647' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2591' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2110' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2704' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2702' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2691' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2631' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2078' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2111' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2669' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2598' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2079' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2613' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2682' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2112' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2703' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2701' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2618' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2080' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2668' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2595' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2081' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2721' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2662' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2643' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2590' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2672' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2700' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2659' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2646' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2654' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2649' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2633' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2082' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2727' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2594' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2083' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2720' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2681' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2651' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2699' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2612' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2084' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2117' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2726' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2730' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2085' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2719' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2589' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2118' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2638' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2698' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2658' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2661' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2725' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2630' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2086' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2119' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2690' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2729' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2087' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2718' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2680' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2120' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2637' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2697' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2611' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2088' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2121' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2689' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2728' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2089' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2667' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2660' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2652' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2650' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2624' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2625' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2640' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2122' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2636' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2696' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2717' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2657' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2645' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2642' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2641' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:469$103.$auto$alumacc.cc:484:replace_alu$2000 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2090' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:469$103.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2559' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2527' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2430' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2560' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2528' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2431' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2561' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2529' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2432' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2562' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2530' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2433' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2563' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2531' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2434' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2564' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2532' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2435' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2565' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2533' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2436' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2566' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2534' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2437' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2567' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2535' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2438' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2568' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2536' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2439' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2569' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2537' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2440' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2570' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2538' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2441' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2571' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2539' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2442' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2572' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2540' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2443' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2573' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2541' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2444' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2574' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2542' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2445' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2575' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2543' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2446' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2576' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2544' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2447' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2577' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2545' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2448' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2578' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2546' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2449' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2579' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2547' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2450' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2580' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2548' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2451' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2581' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2549' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2452' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2582' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2550' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2453' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2583' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2551' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2584' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2552' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2585' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2553' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2586' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2554' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2457' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2587' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2555' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2458' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2588' (0) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$not$<techmap.v>:258$2021_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2556' (010) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$ternary$<techmap.v>:258$2022_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2459' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:262$2024_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2494' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2816' (0?) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [1] = $techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2462' (0?) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [2] = $techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2495' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2800' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2319_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2858' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2463' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2763' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2748' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2496' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2733' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2817' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2832' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2464' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2497' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2801' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2859' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2465' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2764' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2793' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2498' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2734' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2818' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2851' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2466' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2499' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2802' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2860' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2467' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2765' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2778' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2756' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2749' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2500' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2735' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2819' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2833' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2840' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2468' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2501' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2803' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2861' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2469' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2766' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2794' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2502' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2736' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2820' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2852' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2503' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2804' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2862' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2767' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2779' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2790' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2750' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2504' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2737' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2821' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2834' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2848' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2472' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2505' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2805' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2863' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2768' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2795' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2506' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2738' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2822' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2853' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2474' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2507' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2806' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2864' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2475' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2769' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2780' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2785' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2760' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2757' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2751' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2508' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2739' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2823' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2835' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2841' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2844' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2476' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2509' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2807' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2865' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2477' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2770' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2796' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2510' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2740' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2824' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2854' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2478' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2511' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2808' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2866' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2479' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2771' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2781' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2791' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2752' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2512' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2741' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2825' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2836' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2849' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2480' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2513' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2809' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2867' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2481' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2772' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2797' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2514' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2742' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2826' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2855' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2482' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2515' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2810' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2868' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2483' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2773' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2782' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2786' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2789' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2758' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2753' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2516' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2743' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2827' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2837' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2842' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2847' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2484' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2517' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2811' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2869' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2485' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2774' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2798' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2518' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2744' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2828' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2856' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2486' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2519' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2812' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2870' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2487' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2775' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2783' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2792' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2754' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2520' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2745' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2829' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2838' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2850' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2488' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2521' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2813' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2871' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2489' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2776' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2799' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2522' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2746' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2830' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2857' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2490' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2523' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2814' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2872' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2491' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2777' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2784' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2787' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2788' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2762' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2761' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2759' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2755' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2524' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$and$<techmap.v>:260$2023_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2747' (const_and) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2831' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2839' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2843' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2845' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2846' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:470$104.$auto$alumacc.cc:484:replace_alu$2000 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2492' (00) in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:470$104.$auto$alumacc.cc:470:replace_alu$1998.$xor$<techmap.v>:263$2025_Y [32] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2875' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2873 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2877' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2873 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2894' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2891 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2895' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2891 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2908' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2904 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2919' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2917 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2920' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2917 [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3395' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3363' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3394' (1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3362' (101) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3330' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3298' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3890' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:212$2191_Y = \num_mem [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3974' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [0] = \num_mem [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3396' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3364' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3331' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3234' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3202' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3138' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3233' (1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3201' (100) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3169' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3748' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3832' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3104' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [0] = $techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3235' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3203' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3139' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [2] = \num_mem [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3170' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3833' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [1] = $techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3717' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3685' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3621' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [1] = \rd_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3716' (1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3684' (100) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3652' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [0] = \rd_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4174' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4258' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [0] = \rd_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3587' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [0] = $techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3718' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3686' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3622' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [2] = \rd_ptr [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3653' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4259' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [1] = $techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3719' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3687' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3623' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [3] = \rd_ptr [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3654' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4301' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [2] = $techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2319_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3556' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3524' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3460' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [1] = \wr_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3555' (1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3523' (100) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3491' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [0] = \wr_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4032' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:212$2191_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4116' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [0] = \wr_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3426' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [0] = $techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3557' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3525' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3461' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [2] = \wr_ptr [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3492' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4117' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [1] = $techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2193_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3558' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3526' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3462' (?0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [3] = \wr_ptr [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3493' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4159' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [2] = $techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2319_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2981' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2982' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2983' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2984' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2985' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2991' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2992' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2988' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2989' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2993' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2994' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2995' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3001' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3002' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2998' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2999' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3003' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3004' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3005' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3008' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3009' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3010' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3011' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3013' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3014' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3015' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3016' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3017' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3035' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3036' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3037' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3038' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3040' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3041' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3042' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3043' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3049' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3050' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3046' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3047' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3051' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3052' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3053' in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3236' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3204' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3140' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3171' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3875' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [2] = $techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3107' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [3] = $techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2319_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3237' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3205' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3141' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3780' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2198_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3765' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2241_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3172' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3750' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3834' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3849' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3108' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3238' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3206' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3142' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3173' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3818' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3876' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3109' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3239' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3207' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3143' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3781' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3810' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3174' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3751' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3835' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3868' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3110' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3240' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3208' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3144' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3175' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3819' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3877' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3111' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3241' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3209' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3145' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3782' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3795' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3773' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3766' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3176' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3752' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3836' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3850' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3857' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3112' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3242' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3210' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3146' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3177' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3820' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3878' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3113' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3243' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3211' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3147' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3783' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3811' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3178' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3753' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3837' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3869' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3114' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3244' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3212' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3148' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3179' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3821' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3879' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3115' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3245' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3213' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3149' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3784' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3796' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3807' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3767' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3180' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3754' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3838' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3851' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3865' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3116' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3246' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3214' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3150' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3181' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3822' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3880' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3117' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3247' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3215' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3151' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3785' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3812' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3182' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3755' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3839' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3870' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3118' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3248' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3216' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3152' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3183' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3823' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3881' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3119' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3249' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3217' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3153' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3786' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3797' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3802' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3777' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3774' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3768' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3184' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3756' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3840' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3852' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3858' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3861' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3120' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3250' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3218' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3154' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3185' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3824' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3882' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3121' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3251' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3219' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3155' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3787' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3813' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3186' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3757' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3841' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3871' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3122' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3252' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3220' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3156' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3187' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3825' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3883' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3123' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3253' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3221' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3157' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3788' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3798' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3808' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3769' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3188' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3758' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3842' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3853' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3866' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3124' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3254' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3222' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3158' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3189' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3826' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3884' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3125' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3255' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3223' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3159' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3789' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3814' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3190' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3759' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3843' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3872' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3126' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3256' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3224' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3160' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3191' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3827' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3885' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3127' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3257' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3225' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3161' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3790' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3799' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3803' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3806' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3775' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3770' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3192' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3760' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3844' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3854' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3859' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3864' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3128' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3258' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3226' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3162' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3193' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3828' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3886' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3129' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3259' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3227' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3163' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3791' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3815' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3194' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3761' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3845' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3873' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3130' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3260' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3228' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3164' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3195' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3829' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3887' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3131' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3261' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3229' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3165' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3792' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3800' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3809' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3771' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3196' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3762' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3846' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3855' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3867' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3132' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3262' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3230' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3166' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3197' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3830' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3888' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3133' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3263' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3231' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3167' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3793' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3816' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3198' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3763' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3847' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3874' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3134' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3264' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$not$<techmap.v>:258$3094_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3232' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$ternary$<techmap.v>:258$3095_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3168' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3199' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3831' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3889' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3135' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3794' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3801' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3804' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3805' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3779' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3778' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3776' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3772' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3200' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$and$<techmap.v>:260$3096_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3764' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3848' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3856' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3860' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3862' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3863' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:460$120.$auto$alumacc.cc:484:replace_alu$2932 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3136' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:263$3098_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3397' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3365' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3301' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3332' (?1) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [2] = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3398' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3366' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [4] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3302' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3922' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2198_Y = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3333' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3892' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2196_Y = \num_mem [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3976' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2197_Y = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3399' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3367' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3303' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3334' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3960' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2322_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4018' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [4] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3400' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3368' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3304' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3923' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2201_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3952' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2298_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3335' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3893' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3977' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4010' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [5] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3401' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3369' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3305' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3336' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3961' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2325_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4019' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [6] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3402' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3370' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3306' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3924' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2204_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3937' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2246_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3915' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2265_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3908' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3337' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3894' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3978' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3992' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3999' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [7] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3403' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3371' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3307' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3338' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3962' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2328_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4020' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [8] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3404' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3372' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3308' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [10] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3925' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2207_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3953' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2301_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3339' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3895' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3979' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4011' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [9] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3405' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3373' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3309' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3340' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3963' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2331_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4021' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [10] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3406' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3374' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3310' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [12] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3926' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2210_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3938' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2249_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3949' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2289_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3909' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3341' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3896' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3980' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3993' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4007' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [11] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3407' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3375' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3311' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3342' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3964' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2334_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4022' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [12] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3408' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3376' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3312' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [14] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3927' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2213_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3954' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2304_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3343' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3897' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3981' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4012' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [13] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3409' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3377' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3313' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3344' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3965' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2337_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4023' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [14] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3410' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3378' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3314' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [16] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3928' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2216_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3939' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2252_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3944' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2270_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3919' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2277_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3916' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3910' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3345' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3898' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3982' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3994' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4000' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4003' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [15] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3411' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3379' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3315' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [17] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3346' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3966' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2340_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4024' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [16] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3412' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3380' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3316' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [18] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3929' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2219_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3955' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2307_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3347' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3899' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3983' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4013' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [17] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3413' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3381' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3317' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [19] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3348' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3967' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2343_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4025' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [18] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3414' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3382' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3318' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [20] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3930' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2222_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3940' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2255_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3950' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2292_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3911' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3349' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3900' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3984' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3995' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4008' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [19] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3415' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3383' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3319' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [21] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3350' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3968' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2346_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4026' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [20] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3416' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3384' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3320' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [22] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3931' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2225_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3956' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2310_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3351' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3901' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3985' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4014' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [21] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3417' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3385' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3321' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [23] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3352' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3969' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2349_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4027' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [22] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3418' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3386' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3322' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [24] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3932' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2228_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3941' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2258_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3945' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2273_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3948' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2286_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3917' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3912' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3353' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3902' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3986' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3996' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4001' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4006' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [23] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3419' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3387' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3323' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [25] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3354' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3970' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2352_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4028' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [24] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3420' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3388' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3324' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [26] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3933' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2231_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3957' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2313_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3355' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3903' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3987' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4015' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [25] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3421' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3389' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3325' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [27] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3356' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3971' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2355_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4029' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [26] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3422' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3390' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [28] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3326' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3934' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2234_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3942' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2261_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3951' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2295_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3913' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3357' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3904' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3988' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3997' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4009' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [27] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3423' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3391' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3327' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [29] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3358' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3972' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2358_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4030' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [28] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3424' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3392' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [30] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3328' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3935' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2237_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3958' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2316_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3359' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3905' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3989' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4016' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [29] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3425' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$not$<techmap.v>:258$3094_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3393' (011) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$ternary$<techmap.v>:258$3095_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3329' (01) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3360' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3973' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2361_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4031' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [30] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3936' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2240_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3943' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2264_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3946' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2276_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3947' (11) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:222$2282_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3921' (1?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2283_Y = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3920' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3918' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3914' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3361' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$and$<techmap.v>:260$3096_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3906' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3990' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3998' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4002' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4004' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4005' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [31] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3297' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [32] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3559' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3527' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3463' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3494' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4034' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4118' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4133' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [3] = $techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3430' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [4] = $techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3560' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3528' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3464' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3495' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4102' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4160' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3431' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3561' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3529' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3465' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4065' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4094' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3496' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4035' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4119' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4152' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3432' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3562' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3530' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3466' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3497' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4103' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4161' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3433' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3563' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3531' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3467' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4066' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4079' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4057' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4050' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3498' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4036' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4120' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4134' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4141' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3434' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3564' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3532' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3468' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3499' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4104' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4162' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3435' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3565' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3533' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3469' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4067' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4095' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3500' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4037' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4121' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4153' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3436' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3566' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3534' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3470' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3501' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4105' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4163' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3437' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3567' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3535' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3471' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4068' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4080' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4091' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4051' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3502' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4038' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4122' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4135' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4149' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3438' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3568' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3536' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3472' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3503' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4106' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4164' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3439' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3569' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3537' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3473' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4069' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4096' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3504' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4039' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4123' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4154' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3440' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3570' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3538' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3474' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3505' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4107' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4165' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3441' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3571' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3539' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3475' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4070' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4081' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4086' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4061' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4058' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4052' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3506' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4040' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4124' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4136' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4142' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4145' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3442' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3572' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3540' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3476' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3507' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4108' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4166' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3443' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3573' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3541' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3477' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4071' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4097' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3508' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4041' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4125' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4155' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3444' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3574' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3542' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3478' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3509' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4109' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4167' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3445' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3575' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3543' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3479' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4072' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4082' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4092' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4053' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3510' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4042' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4126' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4137' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4150' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3446' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3576' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3544' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3480' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3511' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4110' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4168' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3447' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3577' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3545' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3481' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4073' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4098' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3512' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4043' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4127' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4156' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3448' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3578' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3546' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3482' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3513' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4111' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4169' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3449' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3579' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3547' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3483' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4074' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4083' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4087' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4090' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4059' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4054' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3514' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4044' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4128' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4138' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4143' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4148' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3450' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3580' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3548' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3484' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3515' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4112' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4170' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3451' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3581' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3549' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3485' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4075' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4099' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3516' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4045' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4129' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4157' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3452' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3582' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3550' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3486' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3517' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4113' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4171' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3453' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3583' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3551' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3487' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4076' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4084' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4093' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4055' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3518' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4046' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4130' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4139' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4151' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3454' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3584' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3552' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3488' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3519' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4114' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4172' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3455' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3585' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3553' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3489' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4077' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4100' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3520' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4047' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4131' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4158' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3456' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3586' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3554' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3490' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3521' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4115' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4173' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3457' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4078' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4085' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4088' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4089' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4063' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4062' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4060' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4056' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3522' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4048' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4132' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4140' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4144' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4146' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4147' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:469$125.$auto$alumacc.cc:484:replace_alu$2939 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3458' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:469$125.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3720' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3688' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3624' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3655' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4176' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2196_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4260' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2197_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4275' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [3] = $techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3591' (0?) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [4] = $techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2241_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3721' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3689' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3625' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3656' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4244' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2322_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4302' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3592' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3722' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3690' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3626' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4207' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2201_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4236' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2298_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3657' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4177' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2199_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4261' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2200_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4294' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3593' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3723' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3691' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3627' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3658' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4245' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2325_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4303' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3594' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3724' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3692' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3628' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4208' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2204_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4221' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2246_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4199' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2265_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4192' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2244_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3659' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4178' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2202_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4262' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2203_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4276' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2245_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4283' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3595' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3725' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3693' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3629' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3660' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4246' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2328_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4304' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3596' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3726' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3694' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3630' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4209' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4237' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2301_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3661' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4179' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2205_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4263' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2206_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4295' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3597' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3727' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3695' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3631' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3662' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4247' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2331_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4305' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3598' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3728' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3696' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3632' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4210' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2210_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4222' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2249_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4233' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2289_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4193' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2247_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3663' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4180' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2208_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4264' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2209_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4277' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2248_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4291' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3599' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3729' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3697' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3633' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3664' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4248' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2334_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4306' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3600' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3730' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3698' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3634' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4211' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2213_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4238' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2304_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3665' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4181' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2211_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4265' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2212_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4296' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3601' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3731' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3699' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3635' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3666' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4249' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2337_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4307' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3602' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3732' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3700' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3636' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4212' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2216_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4223' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2252_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4228' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2270_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4203' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2277_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4200' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2268_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4194' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2250_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3667' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4182' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2214_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4266' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2215_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4278' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2251_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4284' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2269_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4287' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3603' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3733' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3701' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3637' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3668' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4250' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2340_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4308' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3604' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3734' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3702' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3638' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4213' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2219_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4239' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2307_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3669' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4183' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2217_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4267' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2218_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4297' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3605' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3735' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3703' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3639' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3670' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4251' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2343_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4309' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3606' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3736' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3704' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3640' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4214' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2222_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4224' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2255_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4234' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2292_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4195' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2253_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3671' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4184' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2220_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4268' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2221_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4279' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2254_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4292' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3607' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3737' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3705' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3641' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3672' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4252' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2346_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4310' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3608' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3738' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3706' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3642' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4215' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2225_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4240' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2310_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3673' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4185' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2223_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4269' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2224_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4298' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3609' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3739' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3707' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3643' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3674' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4253' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2349_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4311' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3610' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3740' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3708' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3644' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4216' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2228_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4225' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2258_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4229' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2273_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4232' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2286_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4201' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2271_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4196' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2256_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3675' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4186' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2226_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4270' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2227_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4280' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2257_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4285' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2272_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4290' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3611' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3741' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3709' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3645' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3676' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4254' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2352_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4312' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3612' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3742' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3710' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3646' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4217' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2231_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4241' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2313_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3677' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4187' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2229_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4271' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2230_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4299' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3613' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3743' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3711' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3647' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3678' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4255' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2355_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4313' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3614' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3744' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3712' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3648' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4218' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2234_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4226' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2261_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4235' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2295_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4197' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2259_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3679' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4188' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2232_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4272' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2233_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4281' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2260_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4293' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3615' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3745' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3713' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3649' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3680' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4256' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2358_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4314' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3616' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3746' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3714' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3650' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4219' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2237_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4242' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2316_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3681' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4189' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2235_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4273' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2236_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4300' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3617' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3747' (0) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$not$<techmap.v>:258$3099_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3715' (010) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$ternary$<techmap.v>:258$3100_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3651' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:262$3102_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3682' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4257' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:229$2361_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4315' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3618' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4220' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2240_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4227' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2264_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4230' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2276_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4231' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:222$2282_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4205' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2283_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4204' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2280_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4202' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2274_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4198' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2262_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3683' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$and$<techmap.v>:260$3101_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4190' (const_and) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$and$<techmap.v>:221$2238_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4274' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2239_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4282' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2263_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4286' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2275_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4288' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.lcu.$or$<techmap.v>:221$2281_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4289' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:470$126.$auto$alumacc.cc:484:replace_alu$2939 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3619' (00) in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:470$126.$auto$alumacc.cc:470:replace_alu$2937.$xor$<techmap.v>:263$3103_Y [32] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1672' (01?) in module `\Demux_D0_D1' with constant driver `$procmux$315_Y = \selectorL1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1812' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1813' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1814' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1815' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1816' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1817' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1818' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1819' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1820' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1821' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1822' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1823' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1824' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1825' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1826' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1827' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1828' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1829' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1830' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1831' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1832' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1833' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1834' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1835' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1836' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1837' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1838' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1839' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1840' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1841' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1842' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:234$70_Y [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1846' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1845' (01?) in module `\PCIE_trans' with constant driver `\pop_MF = $and$PCIE_trans.v:235$72_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1847' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1848' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1849' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1850' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1851' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1852' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1853' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1854' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1855' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1856' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1857' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1858' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1859' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1860' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1861' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1862' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1863' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1864' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1865' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1866' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1867' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1868' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1869' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1870' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1871' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1872' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1873' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1874' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1875' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1876' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:235$73_Y [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1741' (01?) in module `\demux' with constant driver `$procmux$249_Y = \selectorL1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1366' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1360 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1363' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1360 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1362' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1360 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1365' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1360 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1396' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1392 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1397' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1392 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1394' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1392 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1398' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1392 [4] = \state [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1286' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1287' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1288' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1275' in module `fsmControl'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1300' (01?) in module `\fsmControl' with constant driver `$procmux$433_Y [4] = $ne$fsm_Control.v:111$39_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1299' (00?) in module `\fsmControl' with constant driver `$procmux$433_Y [3] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1340' in module `fsmControl'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1346' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1342 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1344' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1342 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1345' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1342 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1348' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1342 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1432' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1428 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1431' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1428 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1327' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1322 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1326' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1322 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1325' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1322 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1324' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1322 [0] = \state [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1319' in module `fsmControl'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1296' (00?) in module `\fsmControl' with constant driver `$procmux$433_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1297' (00?) in module `\fsmControl' with constant driver `$procmux$433_Y [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1290' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1289' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1274' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1273' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1271' in module `fsmControl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1272' in module `fsmControl'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1253' (01?) in module `\fsmControl' with constant driver `$procmux$408_Y [4] = \reset_L'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1252' (00?) in module `\fsmControl' with constant driver `$procmux$408_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1257' (00?) in module `\fsmControl' with constant driver `$procmux$411_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1251' (00?) in module `\fsmControl' with constant driver `$procmux$408_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1256' (00?) in module `\fsmControl' with constant driver `$procmux$411_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1250' (00?) in module `\fsmControl' with constant driver `$procmux$408_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1255' (00?) in module `\fsmControl' with constant driver `$procmux$411_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1434' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1428 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1433' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1428 [3] = \state [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1509' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1474' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1423_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1508' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1476' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1422_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1507' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1478' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1421_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1506' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1480' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1420_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1485' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$450.$and$<techmap.v>:434$1316_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1482' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$450.$reduce_or$<techmap.v>:441$1317_Y = $techmap$procmux$450.$and$<techmap.v>:434$1315_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1505' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1484' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1419_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1504' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1491' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1418_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1503' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1493' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1417_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1502' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1495' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1416_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1501' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1497' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1415_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1500' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1499' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1414_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1510' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1511' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1512' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1513' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$493.$and$<techmap.v>:434$1413_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1551' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1424_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [10]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1549' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1425_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1545' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1426_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [12]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1547' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$493.$reduce_or$<techmap.v>:441$1427_Y = $techmap$procmux$493.$and$<techmap.v>:434$1412_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1557' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$474.$and$<techmap.v>:434$1315_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1556' (0?) in module `\fsmControl' with constant driver `$techmap$procmux$474.$reduce_or$<techmap.v>:441$1317_Y = $techmap$procmux$474.$and$<techmap.v>:434$1316_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1562' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$458.$and$<techmap.v>:434$1315_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1564' (0?) in module `\fsmControl' with constant driver `$techmap$procmux$458.$reduce_or$<techmap.v>:441$1317_Y = $techmap$procmux$458.$and$<techmap.v>:434$1316_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1599' (1?) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1265_Y [1] = $procmux$436_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1579' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1261_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1611' (0?) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1610 [0] = $techmap$procmux$413.$and$<techmap.v>:434$1262_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1594' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1264_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1612' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1610 [1] = $techmap$procmux$413.$and$<techmap.v>:434$1263_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1598' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1265_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1593' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1264_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1605' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1603 [1] = $techmap$procmux$413.$and$<techmap.v>:434$1263_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1609' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$413.$reduce_or$<techmap.v>:441$1266_Y = $auto$simplemap.cc:127:simplemap_reduce$1606'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1600' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1265_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1580' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1261_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1618' (0?) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1617 [0] = $techmap$procmux$413.$and$<techmap.v>:434$1262_Y [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1623' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$413.$reduce_or$<techmap.v>:441$1268_Y = $auto$simplemap.cc:127:simplemap_reduce$1620'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1601' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1265_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1581' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1261_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1632' (0?) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1631 [0] = $techmap$procmux$413.$and$<techmap.v>:434$1262_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1596' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1264_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1633' (?0) in module `\fsmControl' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$1631 [1] = $techmap$procmux$413.$and$<techmap.v>:434$1263_Y [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1637' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$413.$reduce_or$<techmap.v>:441$1269_Y = $auto$simplemap.cc:127:simplemap_reduce$1634'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1602' (const_and) in module `\fsmControl' with constant driver `$techmap$procmux$413.$and$<techmap.v>:434$1265_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1630' (?0) in module `\fsmControl' with constant driver `$techmap$procmux$413.$reduce_or$<techmap.v>:441$1270_Y = $auto$simplemap.cc:127:simplemap_reduce$1627'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1340' (01?) in module `\fsmControl' with constant driver `$procmux$477_Y = $auto$simplemap.cc:168:logic_reduce$1217'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1664' (01?) in module `\mux' with constant driver `\selectorL1 = $logic_and$mux.v:15$43_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1661' (01?) in module `\mux' with constant driver `$procmux$389_Y = $logic_and$mux.v:32$48_Y'.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4670' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [9] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4670' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4671' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [10] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4671' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4673' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [12] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4673' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4666' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [5] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4666' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4691' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [30] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4691' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4665' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4665' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4688' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [27] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4688' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4687' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [26] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4687' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4684' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [23] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4684' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4669' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [8] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4669' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4674' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [13] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4674' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4679' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [18] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4679' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4677' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [16] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4677' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4680' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [19] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4680' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4686' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [25] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4686' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4681' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [20] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4681' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4692' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [31] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4692' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4683' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [22] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4683' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4678' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [17] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4678' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4676' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [15] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4676' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4689' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [28] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4689' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4667' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [6] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4667' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4364' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4696'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4360 [2] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4364' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4349' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4533'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4347 [0] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4349' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4690' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [29] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4690' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5303' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5355'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2241_Y = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2319_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5303' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4336' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4533'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4334 [0] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4336' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4675' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [14] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4675' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:177:logic_reduce$4330' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4368'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$4329 = $auto$simplemap.cc:127:simplemap_reduce$4367
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$4330' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4319' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4350'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4316 [1] = $auto$simplemap.cc:250:simplemap_eqne$4347 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4319' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4695' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4350'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [1] = $auto$simplemap.cc:250:simplemap_eqne$4347 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4695' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4682' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [21] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4682' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4685' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [24] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4685' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4668' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [7] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4668' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4661' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4533'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [0] = $techmap$techmap$add$fifo.v:460$142.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4661' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5387' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5413'.
    Redirecting output \Y: $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [3] = $techmap$sub$fifo.v:464$144.$auto$alumacc.cc:484:replace_alu$2935 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5387' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4664' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [3] = $techmap$techmap$sub$fifo.v:464$144.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4664' from module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3272' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [7] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3272' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3274' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [9] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3274' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3279' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [14] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3279' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3280' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [15] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3280' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3287' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [22] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3287' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3277' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [12] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3277' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3286' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [21] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3286' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3291' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [26] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3291' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3276' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [11] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3276' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3270' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [5] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3270' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3290' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [25] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3290' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [24] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3289' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3285' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [20] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3285' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3275' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [10] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3275' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3288' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [23] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3288' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3281' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [16] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3281' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3292' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [27] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3292' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3907' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3959'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:221$2241_Y = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.lcu.$and$<techmap.v>:229$2319_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3907' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3273' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [8] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3273' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3137' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3265'.
    Redirecting output \Y: $techmap$techmap$add$fifo.v:460$120.$auto$alumacc.cc:470:replace_alu$2930.$xor$<techmap.v>:262$3097_Y [0] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3137' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2921' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3300'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2917 [2] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2921' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2907' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3299'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2904 [1] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2907' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2906' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3265'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2904 [0] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2906' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3278' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [13] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3278' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3284' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [19] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3284' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2893' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3265'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2891 [0] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2893' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3293' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [28] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3293' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:177:logic_reduce$2887' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2925'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$2886 = $auto$simplemap.cc:127:simplemap_reduce$2924
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$2887' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2876' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3299'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2873 [1] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:262$3097_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2876' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3283' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [18] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3283' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3294' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [29] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3294' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3295' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [30] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3295' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3296' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [31] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3296' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3282' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [17] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3282' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3271' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [6] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3271' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3991'.
    Redirecting output \Y: $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [2] = $techmap$sub$fifo.v:464$122.$auto$alumacc.cc:484:replace_alu$2935 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4017' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3268' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [3] = $techmap$techmap$sub$fifo.v:464$122.$auto$alumacc.cc:470:replace_alu$2933.$xor$<techmap.v>:263$3098_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3268' from module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1403' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1439'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1401 [1] = $auto$simplemap.cc:127:simplemap_reduce$1437 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1403' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1352' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1370'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1351 [0] = $auto$simplemap.cc:127:simplemap_reduce$1369 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1352' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1333' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1439'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1331 [1] = $auto$simplemap.cc:127:simplemap_reduce$1437 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1333' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1332' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1370'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1331 [0] = $auto$simplemap.cc:127:simplemap_reduce$1369 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1332' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1242' is identical to cell `$auto$simplemap.cc:277:simplemap_mux$1304'.
    Redirecting output \Y: $procmux$401_Y [3] = $procmux$438_Y [3]
    Removing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1242' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1239' is identical to cell `$auto$simplemap.cc:277:simplemap_mux$1301'.
    Redirecting output \Y: $procmux$401_Y [0] = $procmux$438_Y [0]
    Removing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1239' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1229' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1567'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1227 [1] = $auto$simplemap.cc:127:simplemap_reduce$1566 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1229' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1228' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1235'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1227 [0] = $auto$simplemap.cc:127:simplemap_reduce$1234 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1228' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1207' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1214'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1205 [1] = $auto$simplemap.cc:168:logic_reduce$1212 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1207' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1206' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1213'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1205 [0] = $auto$simplemap.cc:168:logic_reduce$1212 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1206' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1233' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1235'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$1108 = $auto$simplemap.cc:127:simplemap_reduce$1234 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1233' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1305' is identical to cell `$auto$simplemap.cc:277:simplemap_mux$1243'.
    Redirecting output \Y: $procmux$438_Y [4] = $procmux$401_Y [4]
    Removing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1305' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1543' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1235'.
    Redirecting output \Y: $techmap$procmux$493.$reduce_or$<techmap.v>:445$1410_Y = $auto$simplemap.cc:127:simplemap_reduce$1234 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1543' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1209' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1216'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1208 = $auto$simplemap.cc:168:logic_reduce$1215
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1209' from module `\fsmControl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1211' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1218'.
    Redirecting output \Y: $ne$fsm_Control.v:90$36_Y = $auto$simplemap.cc:168:logic_reduce$1217
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1211' from module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 89 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \fsmControl.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$4328'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$4333'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$4346'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$4359'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$4372'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$4672'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5213'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5355'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5413'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5429'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5571'.
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2713'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2732'.
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$2885'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$2890'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$2903'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$2916'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$2929'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3269'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3817'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3959'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3991'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4049'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4064'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4191'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4206'.
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1219'.
Finding unused cells or wires in module \mux..

10.8. Executing OPT_EXPR pass (perform const folding).

10.9. Rerunning OPT passes. (Maybe there is more to do..)

10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Demux_D0_D1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fsmControl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\fifo\N=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
  Optimizing cells in module \Demux_D0_D1.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \fsmControl.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\fifo\N=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=2\M=4\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=2\ADDR_WIDTH=16'.
Finding identical cells in module `\Demux_D0_D1'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\fsmControl'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

10.13. Executing OPT_RMDFF pass (remove dff with constant values).

10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\fifo\N=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16..
Finding unused cells or wires in module \Demux_D0_D1..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \fsmControl..
Finding unused cells or wires in module \mux..

10.15. Executing OPT_EXPR pass (perform const folding).

10.16. Finished OPT passes. (There is nothing left to do.)

11. Executing FLATTEN pass (flatten design).
Mapping PCIE_trans.MainFifo using $paramod\fifo\N=2\ADDR_WIDTH=4.
Mapping PCIE_trans.demux1 using demux.
Mapping PCIE_trans.VC0Fifo using $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
Mapping PCIE_trans.VC1Fifo using $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
Mapping PCIE_trans.mux1 using mux.
Mapping PCIE_trans.Demux_D0_D1 using Demux_D0_D1.
Mapping PCIE_trans.D0Fifo using $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Mapping PCIE_trans.D1Fifo using $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Mapping PCIE_trans.fsm_Control1 using fsmControl.
Mapping PCIE_trans.VC1Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.VC0Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.MainFifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.D1Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.D0Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
No more expansions possible.
Deleting now unused module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Deleting now unused module $paramod\fifo\N=2\ADDR_WIDTH=4.
Deleting now unused module $paramod\fifo\N=2\M=4\ADDR_WIDTH=4.
Deleting now unused module $paramod\fifo\N=4\M=2\ADDR_WIDTH=16.
Deleting now unused module Demux_D0_D1.
Deleting now unused module demux.
Deleting now unused module fsmControl.
Deleting now unused module mux.

12. Executing OPT pass (performing simple optimizations).

12.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:177:logic_reduce$1213' (const_or) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1205 [0] = 1'1'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:177:logic_reduce$1216' (const_or) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1208 = 1'1'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:177:logic_reduce$1218' (const_or) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:168:logic_reduce$1217 = 1'1'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1273' (1?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$416_Y [2] = $techmap\fsm_Control1.$procmux$404_Y [2]'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:136:simplemap_reduce$1221' (00) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1220 [0] = 1'0'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:136:simplemap_reduce$1224' (0?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1223 = $techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1220 [1]'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1282' (?01) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$423_Y [1] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1287' (001) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$426_Y [1] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1292' (00?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$429_Y [1] = 1'0'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1589' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1610 [1] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1283' (?01) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$423_Y [2] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1288' (101) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$426_Y [2] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1293' (00?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$429_Y [2] = 1'0'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1590' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$413.B_AND_S [12] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1274' (0?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$416_Y [3] = $techmap\fsm_Control1.$procmux$404_Y [3]'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1275' (0?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$416_Y [4] = $techmap\fsm_Control1.$procmux$404_Y [4]'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1285' (?01) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$423_Y [4] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1290' (001) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$426_Y [4] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1295' (01?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$429_Y [4] = $techmap\fsm_Control1.$ne$fsm_Control.v:111$39_Y'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1284' (?11) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$423_Y [3] = 1'1'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1289' (011) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$426_Y [3] = 1'1'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1281' (?01) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$423_Y [0] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1286' (001) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$426_Y [0] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1291' (00?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$429_Y [0] = 1'0'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1588' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1603 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1877' (00) in module `\PCIE_trans' with constant driver `$or$PCIE_trans.v:265$76_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1886' (00?) in module `\PCIE_trans' with constant driver `$0\pausaD0D1[0:0] = 1'0'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1517' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$493.B_AND_S [3] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1272' (0?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$416_Y [1] = $techmap\fsm_Control1.$procmux$404_Y [1]'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1516' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$493.B_AND_S [2] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1271' (0?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$416_Y [0] = $techmap\fsm_Control1.$procmux$404_Y [0]'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1515' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$493.B_AND_S [1] = 1'0'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1514' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$493.B_AND_S [0] = 1'0'.
Replacing $_MUX_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1319' (1?1) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$462_Y = $techmap\fsm_Control1.$procmux$455_Y'.
Replacing $_AND_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1527' (const_and) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$procmux$493.B_AND_S [13] = 1'0'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:136:simplemap_reduce$1619' (0?) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1617 [1] = $techmap\fsm_Control1.$procmux$413.B_AND_S [17]'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:136:simplemap_reduce$1614' (?0) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1613 = $techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1610 [0]'.
Replacing $_OR_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:136:simplemap_reduce$1607' (?0) in module `\PCIE_trans' with constant driver `$techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1606 = $techmap\fsm_Control1.$auto$simplemap.cc:127:simplemap_reduce$1603 [0]'.

12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
  Cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1298' is identical to cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1341'.
    Redirecting output \Y: $techmap\fsm_Control1.$procmux$433_Y [2] = $techmap\fsm_Control1.$procmux$480_Y
    Removing $_NOT_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1298' from module `\PCIE_trans'.
  Cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1294' is identical to cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1341'.
    Redirecting output \Y: $techmap\fsm_Control1.$procmux$429_Y [3] = $techmap\fsm_Control1.$procmux$480_Y
    Removing $_NOT_ cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1294' from module `\PCIE_trans'.
  Cell `$techmap\D1Fifo.$auto$simplemap.cc:277:simplemap_mux$2007' is identical to cell `$techmap\D1Fifo.$auto$simplemap.cc:277:simplemap_mux$2008'.
    Redirecting output \Y: $techmap\D1Fifo.$0\push_int[0:0] = $techmap\D1Fifo.$0\pop_int[0:0]
    Removing $_MUX_ cell `$techmap\D1Fifo.$auto$simplemap.cc:277:simplemap_mux$2007' from module `\PCIE_trans'.
  Cell `$techmap\D0Fifo.$auto$simplemap.cc:277:simplemap_mux$2007' is identical to cell `$techmap\D0Fifo.$auto$simplemap.cc:277:simplemap_mux$2008'.
    Redirecting output \Y: $techmap\D0Fifo.$0\push_int[0:0] = $techmap\D0Fifo.$0\pop_int[0:0]
    Removing $_MUX_ cell `$techmap\D0Fifo.$auto$simplemap.cc:277:simplemap_mux$2007' from module `\PCIE_trans'.
  Cell `$techmap\D1Fifo.$auto$simplemap.cc:420:simplemap_dff$2013' is identical to cell `$techmap\D1Fifo.$auto$simplemap.cc:420:simplemap_dff$2014'.
    Redirecting output \Q: \D1Fifo.push_int = \D1Fifo.pop_int
    Removing $_DFF_P_ cell `$techmap\D1Fifo.$auto$simplemap.cc:420:simplemap_dff$2013' from module `\PCIE_trans'.
  Cell `$techmap\D0Fifo.$auto$simplemap.cc:420:simplemap_dff$2013' is identical to cell `$techmap\D0Fifo.$auto$simplemap.cc:420:simplemap_dff$2014'.
    Redirecting output \Q: \D0Fifo.push_int = \D0Fifo.pop_int
    Removing $_DFF_P_ cell `$techmap\D0Fifo.$auto$simplemap.cc:420:simplemap_dff$2013' from module `\PCIE_trans'.
Removed a total of 6 cells.

12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PCIE_trans.
Performed a total of 0 changes.

12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
Removed a total of 0 cells.

12.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$1887 ($_DFF_P_) from module PCIE_trans.
Replaced 1 DFF cells.

12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1454'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2967'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2968'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2971'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1522'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1518'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1519'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1520'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1521'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2972'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2975'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2976'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2964'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2979'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$4243'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2980'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$4175'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$4101'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$3429'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$4033'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$3590'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$3589'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$3428'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3084'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3081'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3020'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3021'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3022'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3023'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3024'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3025'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2988'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3026'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3027'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2989'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3028'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3029'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2990'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3030'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3031'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2991'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3032'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3033'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2992'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3034'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3035'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2993'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3036'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3037'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2994'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3038'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3039'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2995'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3040'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3041'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2996'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3042'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3043'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2997'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3044'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3045'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3046'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3047'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3048'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3049'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3050'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3051'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3052'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3053'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3054'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$3055'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3066'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3067'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3070'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3071'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3075'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3076'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3077'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3078'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3079'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$3080'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2963'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2960'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2959'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2956'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2955'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2952'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$2951'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$4243'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$4175'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$4101'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$4033'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$3590'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$3589'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$3429'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$3428'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3084'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3081'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3080'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3079'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3078'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3077'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3076'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3075'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3071'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3070'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3067'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$3066'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3055'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3054'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3053'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3052'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3051'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3050'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3049'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3048'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3047'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3046'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3045'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3044'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3043'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3041'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3042'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3040'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3039'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3038'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3037'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3036'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3035'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3034'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3033'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3032'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3031'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3030'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3029'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3028'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3027'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3026'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3025'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3024'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3023'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3022'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3021'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$3020'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2997'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2996'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2995'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2994'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2993'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2992'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2991'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2990'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2989'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2988'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2980'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2979'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2976'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2975'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2972'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2971'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2968'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2967'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2964'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2963'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2960'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2959'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2956'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2955'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2952'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$2951'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4490'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4487'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4486'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4485'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4484'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$4483'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4467'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4466'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4465'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4464'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4463'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4462'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4461'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4460'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4459'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4458'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4457'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4456'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4455'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4454'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4453'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4452'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4451'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4450'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4449'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4448'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4447'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4446'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4445'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4444'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4443'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4442'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4441'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4440'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4439'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4438'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4415'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4414'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4413'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4412'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4411'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4410'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4409'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4408'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4407'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$4406'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1459'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1458'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1457'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1456'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1455'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1453'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1452'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1451'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1450'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1449'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1448'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1447'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1541'.
  removing unused `$_DFF_P_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:420:simplemap_dff$1446'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1540'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1539'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1538'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1537'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1536'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1535'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1534'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1390'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1533'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1391'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1532'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1389'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1531'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1388'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1530'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1387'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1529'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1528'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1386'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1385'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1384'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1383'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1382'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1381'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1380'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1379'.
  removing unused `$_MUX_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:277:simplemap_mux$1378'.
  removing unused `$_OR_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:177:logic_reduce$1214'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1526'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1525'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1524'.
  removing unused `$_AND_' cell `$techmap\fsm_Control1.$auto$simplemap.cc:85:simplemap_bitop$1523'.
  removing unused non-port wire \fsm_Control1.Umbrales_I.
  removing unused non-port wire \fsm_Control1.Umbral_VC1.
  removing unused non-port wire \fsm_Control1.Umbral_VC0.
  removing unused non-port wire \fsm_Control1.Umbral_MF.
  removing unused non-port wire \fsm_Control1.Umbral_D1.
  removing unused non-port wire \fsm_Control1.Umbral_D0.
  removing unused non-port wire \D1Fifo.Umbral.
  removing unused non-port wire \D1Fifo.Pausa.
  removing unused non-port wire \D1Fifo.Fifo_Full.
  removing unused non-port wire \D1Fifo.Fifo_Empty.
  removing unused non-port wire \D1Fifo.Error_Fifo.
  removing unused non-port wire \D1Fifo.Almost_Full.
  removing unused non-port wire \D1Fifo.Almost_Empty.
  removing unused non-port wire \D0Fifo.Umbral.
  removing unused non-port wire \D0Fifo.Pausa.
  removing unused non-port wire \D0Fifo.Fifo_Full.
  removing unused non-port wire \D0Fifo.Fifo_Empty.
  removing unused non-port wire \D0Fifo.Error_Fifo.
  removing unused non-port wire \D0Fifo.Almost_Full.
  removing unused non-port wire \D0Fifo.Almost_Empty.
  removing unused non-port wire \VC1Fifo.Umbral.
  removing unused non-port wire \VC1Fifo.Fifo_Full.
  removing unused non-port wire \VC1Fifo.Almost_Full.
  removing unused non-port wire \VC1Fifo.Almost_Empty.
  removing unused non-port wire \VC0Fifo.Umbral.
  removing unused non-port wire \VC0Fifo.Fifo_Full.
  removing unused non-port wire \VC0Fifo.Almost_Full.
  removing unused non-port wire \VC0Fifo.Almost_Empty.
  removing unused non-port wire \MainFifo.Umbral.
  removing unused non-port wire \MainFifo.Fifo_Full.
  removing unused non-port wire \MainFifo.Almost_Full.
  removing unused non-port wire \MainFifo.Almost_Empty.
  removing unused non-port wire \Almost_Empty_D0.
  removing unused non-port wire \Almost_Empty_D1.
  removing unused non-port wire \Almost_Empty_MF.
  removing unused non-port wire \Almost_Empty_VC0.
  removing unused non-port wire \Almost_Empty_VC1.
  removing unused non-port wire \Almost_Full_D0.
  removing unused non-port wire \Almost_Full_D1.
  removing unused non-port wire \Almost_Full_MF.
  removing unused non-port wire \Almost_Full_VC0.
  removing unused non-port wire \Almost_Full_VC1.
  removing unused non-port wire \Error_Fifo_D0.
  removing unused non-port wire \Error_Fifo_D1.
  removing unused non-port wire \Fifo_Empty_D0.
  removing unused non-port wire \Fifo_Empty_D1.
  removing unused non-port wire \Fifo_Full_D0.
  removing unused non-port wire \Fifo_Full_D1.
  removing unused non-port wire \Fifo_Full_MF.
  removing unused non-port wire \Fifo_Full_VC0.
  removing unused non-port wire \Fifo_Full_VC1.
  removing unused non-port wire \Pausa_D0.
  removing unused non-port wire \Pausa_D1.
  removing unused non-port wire \Umbral_D0.
  removing unused non-port wire \Umbral_D1.
  removing unused non-port wire \Umbral_MF.
  removing unused non-port wire \Umbral_VC0.
  removing unused non-port wire \Umbral_VC1.
  removing unused non-port wire \Umbrales_I.
  removing unused non-port wire \pausaD0D1.
  removed 60 unused temporary wires.

12.8. Executing OPT_EXPR pass (perform const folding).
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1880' (0) in module `\PCIE_trans' with constant driver `$not$PCIE_trans.v:266$78_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1879' (?1) in module `\PCIE_trans' with constant driver `$and$PCIE_trans.v:266$79_Y = $not$PCIE_trans.v:266$77_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1881' (?1) in module `\PCIE_trans' with constant driver `$and$PCIE_trans.v:267$81_Y = \VC0Fifo.Fifo_Empty'.

12.9. Rerunning OPT passes. (Maybe there is more to do..)

12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PCIE_trans.
Performed a total of 0 changes.

12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
Removed a total of 0 cells.

12.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..

12.15. Executing OPT_EXPR pass (perform const folding).

12.16. Finished OPT passes. (There is nothing left to do.)

13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..
  removing unused non-port wire \D0Fifo.Fifo_Data_out.
  removing unused non-port wire \D0Fifo.clk.
  removing unused non-port wire \D0Fifo.memoria.Clock.
  removing unused non-port wire \D0Fifo.memoria.iDataIn.
  removing unused non-port wire \D0Fifo.memoria.iWriteEnable.
  removing unused non-port wire \D0Fifo.memoria.oDataOut.
  removing unused non-port wire \D0Fifo.pop_int.
  removing unused non-port wire \D0Fifo.push.
  removing unused non-port wire \D0Fifo.push_int.
  removing unused non-port wire \D0Fifo.rd_ptr.
  removing unused non-port wire \D0Fifo.reset_L.
  removing unused non-port wire \D0Fifo.valid_out.
  removing unused non-port wire \D0Fifo.wr_ptr.
  removing unused non-port wire \D1Fifo.Fifo_Data_out.
  removing unused non-port wire \D1Fifo.clk.
  removing unused non-port wire \D1Fifo.memoria.Clock.
  removing unused non-port wire \D1Fifo.memoria.iDataIn.
  removing unused non-port wire \D1Fifo.memoria.iWriteEnable.
  removing unused non-port wire \D1Fifo.memoria.oDataOut.
  removing unused non-port wire \D1Fifo.pop_int.
  removing unused non-port wire \D1Fifo.push.
  removing unused non-port wire \D1Fifo.push_int.
  removing unused non-port wire \D1Fifo.rd_ptr.
  removing unused non-port wire \D1Fifo.reset_L.
  removing unused non-port wire \D1Fifo.valid_out.
  removing unused non-port wire \D1Fifo.wr_ptr.
  removing unused non-port wire \Demux_D0_D1.clk.
  removing unused non-port wire \Demux_D0_D1.dataout0.
  removing unused non-port wire \Demux_D0_D1.dataout1.
  removing unused non-port wire \Demux_D0_D1.reset_L.
  removing unused non-port wire \Demux_D0_D1.valid_0.
  removing unused non-port wire \Demux_D0_D1.valid_1.
  removing unused non-port wire \MainFifo.Error_Fifo.
  removing unused non-port wire \MainFifo.Fifo_Data_in.
  removing unused non-port wire \MainFifo.Fifo_Data_out.
  removing unused non-port wire \MainFifo.Fifo_Empty.
  removing unused non-port wire \MainFifo.Pausa.
  removing unused non-port wire \MainFifo.clk.
  removing unused non-port wire \MainFifo.memoria.Clock.
  removing unused non-port wire \MainFifo.memoria.iDataIn.
  removing unused non-port wire \MainFifo.memoria.oDataOut.
  removing unused non-port wire \MainFifo.pop_int.
  removing unused non-port wire \MainFifo.push.
  removing unused non-port wire \MainFifo.push_int.
  removing unused non-port wire \MainFifo.rd_ptr.
  removing unused non-port wire \MainFifo.reset_L.
  removing unused non-port wire \MainFifo.valid_out.
  removing unused non-port wire \MainFifo.wr_ptr.
  removing unused non-port wire \VC0Fifo.Error_Fifo.
  removing unused non-port wire \VC0Fifo.Fifo_Data_out.
  removing unused non-port wire \VC0Fifo.Fifo_Empty.
  removing unused non-port wire \VC0Fifo.Pausa.
  removing unused non-port wire \VC0Fifo.clk.
  removing unused non-port wire \VC0Fifo.memoria.Clock.
  removing unused non-port wire \VC0Fifo.memoria.iDataIn.
  removing unused non-port wire \VC0Fifo.memoria.oDataOut.
  removing unused non-port wire \VC0Fifo.pop_int.
  removing unused non-port wire \VC0Fifo.push_int.
  removing unused non-port wire \VC0Fifo.rd_ptr.
  removing unused non-port wire \VC0Fifo.reset_L.
  removing unused non-port wire \VC0Fifo.valid_out.
  removing unused non-port wire \VC0Fifo.wr_ptr.
  removing unused non-port wire \VC1Fifo.Error_Fifo.
  removing unused non-port wire \VC1Fifo.Fifo_Data_out.
  removing unused non-port wire \VC1Fifo.Fifo_Empty.
  removing unused non-port wire \VC1Fifo.Pausa.
  removing unused non-port wire \VC1Fifo.clk.
  removing unused non-port wire \VC1Fifo.memoria.Clock.
  removing unused non-port wire \VC1Fifo.memoria.iDataIn.
  removing unused non-port wire \VC1Fifo.memoria.oDataOut.
  removing unused non-port wire \VC1Fifo.pop_int.
  removing unused non-port wire \VC1Fifo.push_int.
  removing unused non-port wire \VC1Fifo.rd_ptr.
  removing unused non-port wire \VC1Fifo.reset_L.
  removing unused non-port wire \VC1Fifo.valid_out.
  removing unused non-port wire \VC1Fifo.wr_ptr.
  removing unused non-port wire \data_in_D0.
  removing unused non-port wire \data_in_D1.
  removing unused non-port wire \data_in_VC0.
  removing unused non-port wire \data_in_VC1.
  removing unused non-port wire \dataout_VCs.
  removing unused non-port wire \demux1.clk.
  removing unused non-port wire \demux1.data_in.
  removing unused non-port wire \demux1.dataout0.
  removing unused non-port wire \demux1.dataout1.
  removing unused non-port wire \demux1.reset_L.
  removing unused non-port wire \demux1.valid_0.
  removing unused non-port wire \demux1.valid_1.
  removing unused non-port wire \demux1.valid_in.
  removing unused non-port wire \fsm_Control1.FIFO_empty.
  removing unused non-port wire \fsm_Control1.FIFO_error.
  removing unused non-port wire \fsm_Control1.active_out.
  removing unused non-port wire \fsm_Control1.clk.
  removing unused non-port wire \fsm_Control1.error_out.
  removing unused non-port wire \fsm_Control1.idle_out.
  removing unused non-port wire \fsm_Control1.init.
  removing unused non-port wire \fsm_Control1.reset_L.
  removing unused non-port wire \mux1.clk.
  removing unused non-port wire \mux1.data_in_VC0.
  removing unused non-port wire \mux1.data_in_VC1.
  removing unused non-port wire \mux1.dataout.
  removing unused non-port wire \mux1.reset_L.
  removing unused non-port wire \mux1.valid_in_VC0.
  removing unused non-port wire \mux1.valid_in_VC1.
  removing unused non-port wire \mux1.valid_out.
  removing unused non-port wire \pop_MF.
  removing unused non-port wire \pop_vc0.
  removing unused non-port wire \pop_vc1.
  removing unused non-port wire \push_D0.
  removing unused non-port wire \push_D1.
  removing unused non-port wire \push_Demux.
  removing unused non-port wire \push_vc0.
  removing unused non-port wire \push_vc1.
  removing unused non-port wire \valid_out_MF.
  removing unused non-port wire \valid_out_VC0.
  removing unused non-port wire \valid_out_VC1.
  removed 116 unused temporary wires.

14. Executing ABC pass (technology mapping using ABC).

14.1. Extracting gate netlist of module `\PCIE_trans' to `<abc-temp-dir>/input.blif'..
Extracted 885 gates and 1143 wires to a netlist network with 255 inputs and 258 outputs.

14.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/cesar/Desktop/DigitalesII/Proyecto2/Proyecto2/LogicaMasterPrueba3-Inestable/cmos_cells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Library "demo" from "/home/cesar/Desktop/DigitalesII/Proyecto2/Proyecto2/LogicaMasterPrueba3-Inestable/cmos_cells.lib" has 4 cells (2 skipped: 2 seq; 0 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.00 MB. Time =     0.00 sec
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o 
ABC: + strash 
ABC: + dch -f 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:      629
ABC RESULTS:               NOR cells:      514
ABC RESULTS:               NOT cells:      242
ABC RESULTS:        internal signals:      630
ABC RESULTS:           input signals:      255
ABC RESULTS:          output signals:      258
Removing temp directory.

15. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF (noninv, pins=3, area=18.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=18.00) is a direct match for cell type $_DFFSR_PPP_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFFSR_PNN_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_N_ from mapping for $_DFF_P_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFF _DFF_N_ (.C(~C), .D( D), .Q( Q));
    DFF _DFF_P_ (.C( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.C(~C), .D( D), .Q( Q), .R(~R), .S( 0));
    DFFSR _DFF_NN1_ (.C(~C), .D( D), .Q( Q), .R( 0), .S(~R));
    DFFSR _DFF_NP0_ (.C(~C), .D( D), .Q( Q), .R( R), .S( 0));
    DFFSR _DFF_NP1_ (.C(~C), .D( D), .Q( Q), .R( 0), .S( R));
    DFFSR _DFF_PN0_ (.C( C), .D( D), .Q( Q), .R(~R), .S( 0));
    DFFSR _DFF_PN1_ (.C( C), .D( D), .Q( Q), .R( 0), .S(~R));
    DFFSR _DFF_PP0_ (.C( C), .D( D), .Q( Q), .R( R), .S( 0));
    DFFSR _DFF_PP1_ (.C( C), .D( D), .Q( Q), .R( 0), .S( R));
    DFFSR _DFFSR_NNN_ (.C(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_NNP_ (.C(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPN_ (.C(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPP_ (.C(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNN_ (.C( C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNP_ (.C( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPN_ (.C( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPP_ (.C( C), .D( D), .Q( Q), .R( R), .S( S));
Mapping DFF cells in module `\PCIE_trans':
  mapped 246 $_DFF_P_ cells to \DFF cells.
Removed 0 unused cells and 691 unused wires.

16. Executing Verilog backend.
Dumping module `\PCIE_trans'.

End of script. Logfile hash: 837be28289
CPU: user 3.43s system 0.04s, MEM: 21.66 MB total, 16.61 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-zWLHjG/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 21% 14x opt_expr (0 sec), 21% 14x opt_merge (0 sec), ...
