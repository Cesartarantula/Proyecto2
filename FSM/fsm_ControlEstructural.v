/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-zWLHjG/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "fsm_Control.v:10" *)
module fsmControlEstructural(clk, reset, init, umbral_VCFC, FIFO_error, FIFO_empty, umbrales_VCFC, active_out, idle_out, error_out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  (* src = "fsm_Control.v:15" *)
  input FIFO_empty;
  (* src = "fsm_Control.v:14" *)
  input FIFO_error;
  (* src = "fsm_Control.v:17" *)
  output active_out;
  (* src = "fsm_Control.v:10" *)
  input clk;
  (* src = "fsm_Control.v:19" *)
  output error_out;
  (* src = "fsm_Control.v:18" *)
  output idle_out;
  (* src = "fsm_Control.v:12" *)
  input init;
  (* src = "fsm_Control.v:11" *)
  input reset;
  (* onehot = 32'd1 *)
  wire [4:0] state;
  (* src = "fsm_Control.v:13" *)
  input [7:0] umbral_VCFC;
  (* src = "fsm_Control.v:16" *)
  output [7:0] umbrales_VCFC;
  NOT _33_ (
    .A(init),
    .Y(_03_)
  );
  NAND _34_ (
    .A(state[0]),
    .B(_03_),
    .Y(_04_)
  );
  NOT _35_ (
    .A(reset),
    .Y(_05_)
  );
  NOR _36_ (
    .A(_05_),
    .B(state[1]),
    .Y(_06_)
  );
  NAND _37_ (
    .A(_06_),
    .B(_04_),
    .Y(_00_)
  );
  NOT _38_ (
    .A(FIFO_error),
    .Y(_07_)
  );
  NAND _39_ (
    .A(reset),
    .B(_07_),
    .Y(_08_)
  );
  NOT _40_ (
    .A(FIFO_empty),
    .Y(_09_)
  );
  NOT _41_ (
    .A(state[3]),
    .Y(_10_)
  );
  NOR _42_ (
    .A(_10_),
    .B(_09_),
    .Y(_11_)
  );
  NOR _43_ (
    .A(_11_),
    .B(state[4]),
    .Y(_12_)
  );
  NOR _44_ (
    .A(_12_),
    .B(_08_),
    .Y(_01_)
  );
  NOR _45_ (
    .A(state[3]),
    .B(state[2]),
    .Y(_13_)
  );
  NOR _46_ (
    .A(_05_),
    .B(FIFO_error),
    .Y(_14_)
  );
  NOT _47_ (
    .A(state[2]),
    .Y(_15_)
  );
  NAND _48_ (
    .A(FIFO_empty),
    .B(_15_),
    .Y(_16_)
  );
  NAND _49_ (
    .A(_16_),
    .B(_14_),
    .Y(_17_)
  );
  NOR _50_ (
    .A(_17_),
    .B(_13_),
    .Y(_02_)
  );
  NAND _51_ (
    .A(state[3]),
    .B(FIFO_empty),
    .Y(_18_)
  );
  NOR _52_ (
    .A(_18_),
    .B(FIFO_error),
    .Y(idle_out)
  );
  NOR _53_ (
    .A(FIFO_error),
    .B(_15_),
    .Y(active_out)
  );
  NOT _54_ (
    .A(umbral_VCFC[0]),
    .Y(_19_)
  );
  NAND _55_ (
    .A(_10_),
    .B(_15_),
    .Y(_20_)
  );
  NOR _56_ (
    .A(_20_),
    .B(state[4]),
    .Y(_21_)
  );
  NOR _57_ (
    .A(_21_),
    .B(_19_),
    .Y(umbrales_VCFC[0])
  );
  NOT _58_ (
    .A(umbral_VCFC[1]),
    .Y(_23_)
  );
  NOR _59_ (
    .A(_21_),
    .B(_23_),
    .Y(umbrales_VCFC[1])
  );
  NOT _60_ (
    .A(umbral_VCFC[2]),
    .Y(_25_)
  );
  NOR _61_ (
    .A(_21_),
    .B(_25_),
    .Y(umbrales_VCFC[2])
  );
  NOT _62_ (
    .A(umbral_VCFC[3]),
    .Y(_26_)
  );
  NOR _63_ (
    .A(_21_),
    .B(_26_),
    .Y(umbrales_VCFC[3])
  );
  NOT _64_ (
    .A(umbral_VCFC[4]),
    .Y(_27_)
  );
  NOR _65_ (
    .A(_21_),
    .B(_27_),
    .Y(umbrales_VCFC[4])
  );
  NOT _66_ (
    .A(umbral_VCFC[5]),
    .Y(_28_)
  );
  NOR _67_ (
    .A(_21_),
    .B(_28_),
    .Y(umbrales_VCFC[5])
  );
  NOT _68_ (
    .A(umbral_VCFC[6]),
    .Y(_29_)
  );
  NOR _69_ (
    .A(_21_),
    .B(_29_),
    .Y(umbrales_VCFC[6])
  );
  NOT _70_ (
    .A(umbral_VCFC[7]),
    .Y(_30_)
  );
  NOR _71_ (
    .A(_21_),
    .B(_30_),
    .Y(umbrales_VCFC[7])
  );
  NAND _72_ (
    .A(reset),
    .B(FIFO_error),
    .Y(_31_)
  );
  NOR _73_ (
    .A(_31_),
    .B(_21_),
    .Y(_22_)
  );
  NAND _74_ (
    .A(state[0]),
    .B(init),
    .Y(_32_)
  );
  NOR _75_ (
    .A(_32_),
    .B(_05_),
    .Y(_24_)
  );
  DFF _76_ (
    .C(clk),
    .D(_00_),
    .Q(state[0])
  );
  DFF _77_ (
    .C(clk),
    .D(_22_),
    .Q(state[1])
  );
  DFF _78_ (
    .C(clk),
    .D(_02_),
    .Q(state[2])
  );
  DFF _79_ (
    .C(clk),
    .D(_01_),
    .Q(state[3])
  );
  DFF _80_ (
    .C(clk),
    .D(_24_),
    .Q(state[4])
  );
  assign error_out = state[1];
endmodule
