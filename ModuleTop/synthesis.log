
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-zWLHjG/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `sintetizador.ys' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `PCIE_trans.v' to AST representation.
Generating RTLIL representation for module `\dual_port_memory'.
Generating RTLIL representation for module `\fifo'.
Generating RTLIL representation for module `\fsmControl'.
Generating RTLIL representation for module `\mux'.
Generating RTLIL representation for module `\Demux_D0_D1'.
Generating RTLIL representation for module `\demux'.
Generating RTLIL representation for module `\ff_d'.
Generating RTLIL representation for module `\PCIE_trans'.
Warning: Identifier `\Fifo_Data_out_VCO' is implicitly declared at PCIE_trans.v:96.
Warning: Identifier `\Almost_Empty_VCO' is implicitly declared at PCIE_trans.v:97.
Warning: Identifier `\Almost_Full_VCO' is implicitly declared at PCIE_trans.v:98.
Warning: Identifier `\Umbral_VC0' is implicitly declared at PCIE_trans.v:99.
Warning: Identifier `\Pausa_VC0' is implicitly declared at PCIE_trans.v:100.
Warning: Identifier `\Fifo_Empty_VC0' is implicitly declared at PCIE_trans.v:101.
Warning: Identifier `\Fifo_Full_VC0' is implicitly declared at PCIE_trans.v:102.
Warning: Identifier `\Error_Fifo_VC0' is implicitly declared at PCIE_trans.v:103.
Warning: Identifier `\Fifo_Data_out_VC1' is implicitly declared at PCIE_trans.v:111.
Warning: Identifier `\Almost_Empty_VC1' is implicitly declared at PCIE_trans.v:112.
Warning: Identifier `\Almost_Full_VC1' is implicitly declared at PCIE_trans.v:113.
Warning: Identifier `\Umbral_VC1' is implicitly declared at PCIE_trans.v:114.
Warning: Identifier `\Pausa_VC1' is implicitly declared at PCIE_trans.v:115.
Warning: Identifier `\Fifo_Empty_VC1' is implicitly declared at PCIE_trans.v:116.
Warning: Identifier `\Fifo_Full_VC1' is implicitly declared at PCIE_trans.v:117.
Warning: Identifier `\Error_Fifo_VC1' is implicitly declared at PCIE_trans.v:118.
Warning: Identifier `\push_Demux' is implicitly declared at PCIE_trans.v:130.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \mux
Used module:     \fifo
Used module:         \dual_port_memory
Used module:     \demux
Used module:     \ff_d

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Generating RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 4
Parameter \M = 4
Parameter \ADDR_WIDTH = 16
Generating RTLIL representation for module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 4
Parameter \M = 4
Parameter \ADDR_WIDTH = 16
Found cached RTLIL representation for module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ff_d'.
Parameter \N = 6
Generating RTLIL representation for module `$paramod\ff_d\N=6'.

2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ff_d'.
Parameter \N = 1
Generating RTLIL representation for module `$paramod\ff_d\N=1'.

2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo'.
Parameter \N = 2
Parameter \M = 2
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.

2.8. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=4\ADDR_WIDTH=16
Used module:         \dual_port_memory
Used module:     \demux
Used module:     $paramod\ff_d\N=6
Used module:     $paramod\ff_d\N=1
Used module:     $paramod\fifo\N=2\M=2\ADDR_WIDTH=4

2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Found cached RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_memory'.
Parameter \DATA_WIDTH = 6
Parameter \ADDR_WIDTH = 2
Parameter \MEM_SIZE = 3
Found cached RTLIL representation for module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.

2.11. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=4\ADDR_WIDTH=16
Used module:         $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3
Used module:     \demux
Used module:     $paramod\ff_d\N=6
Used module:     $paramod\ff_d\N=1
Used module:     $paramod\fifo\N=2\M=2\ADDR_WIDTH=4

2.12. Analyzing design hierarchy..
Top module:  \PCIE_trans
Used module:     \mux
Used module:     $paramod\fifo\N=4\M=4\ADDR_WIDTH=16
Used module:         $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3
Used module:     \demux
Used module:     $paramod\ff_d\N=6
Used module:     $paramod\ff_d\N=1
Used module:     $paramod\fifo\N=2\M=2\ADDR_WIDTH=4
Removing unused module `\ff_d'.
Removing unused module `\Demux_D0_D1'.
Removing unused module `\fsmControl'.
Removing unused module `\fifo'.
Removing unused module `\dual_port_memory'.
Removed 5 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:331$157'.
Found and cleaned up 2 empty switches in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
Found and cleaned up 2 empty switches in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:331$126'.
Found and cleaned up 4 empty switches in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
Cleaned up 9 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_INIT pass (extract init attributes).

3.4. Executing PROC_ARST pass (detect async resets in processes).

3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\PCIE_trans.$proc$PCIE_trans.v:156$81'.
     1/3: $0\pop_vc1[0:0]
     2/3: $0\pop_vc0[0:0]
     3/3: $0\pausaD0D1[0:0]
Creating decoders for process `\PCIE_trans.$proc$PCIE_trans.v:147$74'.
     1/2: $0\pop_MF[0:0]
     2/2: $0\Pausa_VC_id[0:0]
Creating decoders for process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:331$157'.
     1/1: $0\Error_Fifo[0:0]
Creating decoders for process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
     1/3: $1\num_mem[2:0]
     2/3: $0\rd_ptr[1:0]
     3/3: $0\wr_ptr[1:0]
Creating decoders for process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
     1/7: $0\num_mem[2:0]
     2/7: $0\Fifo_Full[0:0]
     3/7: $0\Fifo_Empty[0:0]
     4/7: $0\Pausa[0:0]
     5/7: $0\Umbral[1:0]
     6/7: $0\Almost_Full[0:0]
     7/7: $0\Almost_Empty[0:0]
Creating decoders for process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
     1/4: $0\Fifo_Data_in_int[5:0]
     2/4: $0\pop_int[0:0]
     3/4: $0\push_int[0:0]
     4/4: $0\wr_ptr_int[1:0]
Creating decoders for process `\demux.$proc$demux.v:33$66'.
     1/4: $0\valid_1[0:0]
     2/4: $0\valid_0[0:0]
     3/4: $0\dataout1[5:0]
     4/4: $0\dataout0[5:0]
Creating decoders for process `\demux.$proc$demux.v:24$64'.
     1/1: $0\selectorL1[0:0]
Creating decoders for process `$paramod\ff_d\N=1.$proc$ff_d.v:6$133'.
     1/1: $0\Data_Out[0:0]
Creating decoders for process `\mux.$proc$mux.v:23$51'.
     1/2: $0\valid_out[0:0]
     2/2: $0\dataout[5:0]
Creating decoders for process `\mux.$proc$mux.v:14$48'.
     1/1: $0\selectorL1[0:0]
Creating decoders for process `$paramod\ff_d\N=6.$proc$ff_d.v:6$131'.
     1/1: $0\Data_Out[5:0]
Creating decoders for process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:331$126'.
     1/1: $0\Error_Fifo[0:0]
Creating decoders for process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
     1/3: $1\num_mem[4:0]
     2/3: $0\rd_ptr[3:0]
     3/3: $0\wr_ptr[3:0]
Creating decoders for process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
     1/7: $0\num_mem[4:0]
     2/7: $0\Fifo_Full[0:0]
     3/7: $0\Fifo_Empty[0:0]
     4/7: $0\Pausa[0:0]
     5/7: $0\Umbral[3:0]
     6/7: $0\Almost_Full[0:0]
     7/7: $0\Almost_Empty[0:0]
Creating decoders for process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
     1/4: $0\Fifo_Data_in_int[5:0]
     2/4: $0\pop_int[0:0]
     3/4: $0\push_int[0:0]
     4/4: $0\wr_ptr_int[3:0]
Creating decoders for process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$95'.
     1/2: $1\oDataOut[5:0]
     2/2: $0\oDataOut[5:0]
Creating decoders for process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
     1/3: $0$memwr$\Ram$dual_port_memory.v:18$90_EN[5:0]$94
     2/3: $0$memwr$\Ram$dual_port_memory.v:18$90_DATA[5:0]$93
     3/3: $0$memwr$\Ram$dual_port_memory.v:18$90_ADDR[1:0]$92

3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\PCIE_trans.\pop_MF' from process `\PCIE_trans.$proc$PCIE_trans.v:147$74'.
No latch inferred for signal `\PCIE_trans.\Pausa_VC_id' from process `\PCIE_trans.$proc$PCIE_trans.v:147$74'.
No latch inferred for signal `\demux.\selectorL1' from process `\demux.$proc$demux.v:24$64'.
No latch inferred for signal `\mux.\selectorL1' from process `\mux.$proc$mux.v:14$48'.
No latch inferred for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.\oDataOut' from process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$95'.

3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\PCIE_trans.\pausaD0D1' using process `\PCIE_trans.$proc$PCIE_trans.v:156$81'.
  created $dff cell `$procdff$851' with positive edge clock.
Creating register for signal `\PCIE_trans.\pop_vc0' using process `\PCIE_trans.$proc$PCIE_trans.v:156$81'.
  created $dff cell `$procdff$852' with positive edge clock.
Creating register for signal `\PCIE_trans.\pop_vc1' using process `\PCIE_trans.$proc$PCIE_trans.v:156$81'.
  created $dff cell `$procdff$853' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Error_Fifo' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:331$157'.
  created $dff cell `$procdff$854' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\wr_ptr' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
  created $dff cell `$procdff$855' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\rd_ptr' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
  created $dff cell `$procdff$856' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\num_mem' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
  created $dff cell `$procdff$857' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Almost_Empty' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$858' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Almost_Full' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$859' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Umbral' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$860' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Pausa' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$861' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Fifo_Empty' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$862' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Fifo_Full' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$863' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\num_mem' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\wr_ptr_int' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\push_int' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\pop_int' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.\Fifo_Data_in_int' using process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `\demux.\dataout0' using process `\demux.$proc$demux.v:33$66'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\demux.\dataout1' using process `\demux.$proc$demux.v:33$66'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\demux.\valid_0' using process `\demux.$proc$demux.v:33$66'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\demux.\valid_1' using process `\demux.$proc$demux.v:33$66'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `$paramod\ff_d\N=1.\Data_Out' using process `$paramod\ff_d\N=1.$proc$ff_d.v:6$133'.
  created $dff cell `$procdff$873' with positive edge clock.
Creating register for signal `\mux.\dataout' using process `\mux.$proc$mux.v:23$51'.
  created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `\mux.\valid_out' using process `\mux.$proc$mux.v:23$51'.
  created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `$paramod\ff_d\N=6.\Data_Out' using process `$paramod\ff_d\N=6.$proc$ff_d.v:6$131'.
  created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Error_Fifo' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:331$126'.
  created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\wr_ptr' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
  created $dff cell `$procdff$878' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\rd_ptr' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
  created $dff cell `$procdff$879' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\num_mem' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
  created $dff cell `$procdff$880' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Almost_Empty' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$881' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Almost_Full' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$882' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Umbral' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Pausa' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$884' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Fifo_Empty' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Fifo_Full' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$886' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\num_mem' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
  created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\wr_ptr_int' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
  created $dff cell `$procdff$888' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\push_int' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
  created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\pop_int' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
  created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.\Fifo_Data_in_int' using process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
  created $dff cell `$procdff$891' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$90_ADDR' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
  created $dff cell `$procdff$892' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$90_DATA' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
  created $dff cell `$procdff$893' with positive edge clock.
Creating register for signal `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$90_EN' using process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
  created $dff cell `$procdff$894' with positive edge clock.

3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\PCIE_trans.$proc$PCIE_trans.v:156$81'.
Removing empty process `PCIE_trans.$proc$PCIE_trans.v:156$81'.
Removing empty process `PCIE_trans.$proc$PCIE_trans.v:147$74'.
Found and cleaned up 2 empty switches in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:331$157'.
Removing empty process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:331$157'.
Found and cleaned up 4 empty switches in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
Removing empty process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:304$148'.
Found and cleaned up 12 empty switches in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
Removing empty process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:63$137'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
Removing empty process `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$proc$fifo.v:46$135'.
Found and cleaned up 7 empty switches in `\demux.$proc$demux.v:33$66'.
Removing empty process `demux.$proc$demux.v:33$66'.
Found and cleaned up 1 empty switch in `\demux.$proc$demux.v:24$64'.
Removing empty process `demux.$proc$demux.v:24$64'.
Found and cleaned up 1 empty switch in `$paramod\ff_d\N=1.$proc$ff_d.v:6$133'.
Removing empty process `$paramod\ff_d\N=1.$proc$ff_d.v:6$133'.
Found and cleaned up 3 empty switches in `\mux.$proc$mux.v:23$51'.
Removing empty process `mux.$proc$mux.v:23$51'.
Found and cleaned up 1 empty switch in `\mux.$proc$mux.v:14$48'.
Removing empty process `mux.$proc$mux.v:14$48'.
Found and cleaned up 1 empty switch in `$paramod\ff_d\N=6.$proc$ff_d.v:6$131'.
Removing empty process `$paramod\ff_d\N=6.$proc$ff_d.v:6$131'.
Found and cleaned up 2 empty switches in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:331$126'.
Removing empty process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:331$126'.
Found and cleaned up 4 empty switches in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
Removing empty process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:304$117'.
Found and cleaned up 18 empty switches in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
Removing empty process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:63$100'.
Found and cleaned up 1 empty switch in `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
Removing empty process `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$proc$fifo.v:46$98'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$95'.
Removing empty process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:22$95'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
Removing empty process `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$proc$dual_port_memory.v:14$91'.
Cleaned up 61 empty switches.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $mux cell `$procmux$168' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$procmux$165' in module `PCIE_trans'.
Optimizing away select inverter for $mux cell `$ternary$PCIE_trans.v:148$77' in module `PCIE_trans'.
Replacing $eq cell `$eq$fifo.v:336$159' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$eq$fifo.v:336$159_Y = \Almost_Empty'.
Replacing $eq cell `$eq$fifo.v:336$160' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$eq$fifo.v:336$160_Y = \pop'.
Replacing $eq cell `$eq$fifo.v:336$162' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with inverter.
Replacing $eq cell `$eq$fifo.v:184$143' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$199' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$187' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$211' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $eq cell `$eq$fifo.v:75$139' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$252' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$279' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$311' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$339' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$371' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$400' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$403' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$406' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$409' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $mux cell `$procmux$412' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $eq cell `$eq$demux.v:42$69' in module `demux' with inverter.
Replacing $eq cell `$eq$demux.v:48$70' in module `demux' with inverter.
Replacing $eq cell `$eq$demux.v:51$71' (1) in module `\demux' with constant driver `$eq$demux.v:51$71_Y = \valid_1'.
Optimizing away select inverter for $mux cell `$procmux$478' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$427' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$430' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$442' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$445' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$457' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$460' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$472' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$475' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$425' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$440' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$455' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$470' in module `demux'.
Optimizing away select inverter for $mux cell `$procmux$481' in module `$paramod\ff_d\N=1'.
Optimizing away select inverter for $mux cell `$procmux$490' in module `mux'.
Optimizing away select inverter for $mux cell `$procmux$499' in module `mux'.
Optimizing away select inverter for $mux cell `$procmux$505' in module `$paramod\ff_d\N=6'.
Replacing $eq cell `$eq$fifo.v:116$102' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with $logic_not.
Replacing $eq cell `$eq$fifo.v:226$109' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with $logic_not.
Replacing $eq cell `$eq$fifo.v:347$128' (1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$eq$fifo.v:347$128_Y = \pop'.
Replacing $eq cell `$eq$fifo.v:347$129' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$522' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$534' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$546' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$605' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$644' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$695' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$735' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$784' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$825' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$828' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$831' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$834' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $mux cell `$procmux$837' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
  Cell `$not$PCIE_trans.v:164$84' is identical to cell `$not$PCIE_trans.v:165$86'.
    Redirecting output \Y: $not$PCIE_trans.v:164$84_Y = $not$PCIE_trans.v:165$86_Y
    Removing $not cell `$not$PCIE_trans.v:164$84' from module `\PCIE_trans'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:316$153' is identical to cell `$add$fifo.v:321$156'.
    Redirecting output \Y: $add$fifo.v:316$153_Y = $add$fifo.v:321$156_Y
    Removing $add cell `$add$fifo.v:316$153' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$add$fifo.v:312$151' is identical to cell `$add$fifo.v:320$155'.
    Redirecting output \Y: $add$fifo.v:312$151_Y = $add$fifo.v:320$155_Y
    Removing $add cell `$add$fifo.v:312$151' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$logic_and$fifo.v:292$147' is identical to cell `$logic_and$fifo.v:318$154'.
    Redirecting output \Y: $logic_and$fifo.v:292$147_Y = $logic_and$fifo.v:318$154_Y
    Removing $logic_and cell `$logic_and$fifo.v:292$147' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:99$142' is identical to cell `$eq$fifo.v:209$146'.
    Redirecting output \Y: $eq$fifo.v:99$142_Y = $eq$fifo.v:209$146_Y
    Removing $eq cell `$eq$fifo.v:99$142' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:91$141' is identical to cell `$eq$fifo.v:201$145'.
    Redirecting output \Y: $eq$fifo.v:91$141_Y = $eq$fifo.v:201$145_Y
    Removing $eq cell `$eq$fifo.v:91$141' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:83$140' is identical to cell `$eq$fifo.v:193$144'.
    Redirecting output \Y: $eq$fifo.v:83$140_Y = $eq$fifo.v:193$144_Y
    Removing $eq cell `$eq$fifo.v:83$140' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$eq$fifo.v:75$139' is identical to cell `$eq$fifo.v:184$143'.
    Redirecting output \Y: $eq$fifo.v:75$139_Y = $eq$fifo.v:184$143_Y
    Removing $logic_not cell `$eq$fifo.v:75$139' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:64$138' is identical to cell `$logic_not$fifo.v:305$149'.
    Redirecting output \Y: $logic_not$fifo.v:64$138_Y = $logic_not$fifo.v:305$149_Y
    Removing $logic_not cell `$logic_not$fifo.v:64$138' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$logic_not$fifo.v:47$136' is identical to cell `$logic_not$fifo.v:305$149'.
    Redirecting output \Y: $logic_not$fifo.v:47$136_Y = $logic_not$fifo.v:305$149_Y
    Removing $logic_not cell `$logic_not$fifo.v:47$136' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `\demux'.
  Cell `$logic_not$demux.v:25$65' is identical to cell `$logic_not$demux.v:34$67'.
    Redirecting output \Y: $logic_not$demux.v:25$65_Y = $logic_not$demux.v:34$67_Y
    Removing $logic_not cell `$logic_not$demux.v:25$65' from module `\demux'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `\mux'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$add$fifo.v:316$122' is identical to cell `$add$fifo.v:321$125'.
    Redirecting output \Y: $add$fifo.v:316$122_Y = $add$fifo.v:321$125_Y
    Removing $add cell `$add$fifo.v:316$122' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$add$fifo.v:312$120' is identical to cell `$add$fifo.v:320$124'.
    Redirecting output \Y: $add$fifo.v:312$120_Y = $add$fifo.v:320$124_Y
    Removing $add cell `$add$fifo.v:312$120' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$logic_and$fifo.v:292$116' is identical to cell `$logic_and$fifo.v:318$123'.
    Redirecting output \Y: $logic_and$fifo.v:292$116_Y = $logic_and$fifo.v:318$123_Y
    Removing $logic_and cell `$logic_and$fifo.v:292$116' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:226$109' is identical to cell `$eq$fifo.v:347$129'.
    Redirecting output \Y: $eq$fifo.v:226$109_Y = $eq$fifo.v:347$129_Y
    Removing $logic_not cell `$eq$fifo.v:226$109' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:164$108' is identical to cell `$eq$fifo.v:274$115'.
    Redirecting output \Y: $eq$fifo.v:164$108_Y = $eq$fifo.v:274$115_Y
    Removing $eq cell `$eq$fifo.v:164$108' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:156$107' is identical to cell `$eq$fifo.v:266$114'.
    Redirecting output \Y: $eq$fifo.v:156$107_Y = $eq$fifo.v:266$114_Y
    Removing $eq cell `$eq$fifo.v:156$107' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:148$106' is identical to cell `$eq$fifo.v:258$113'.
    Redirecting output \Y: $eq$fifo.v:148$106_Y = $eq$fifo.v:258$113_Y
    Removing $eq cell `$eq$fifo.v:148$106' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:140$105' is identical to cell `$eq$fifo.v:250$112'.
    Redirecting output \Y: $eq$fifo.v:140$105_Y = $eq$fifo.v:250$112_Y
    Removing $eq cell `$eq$fifo.v:140$105' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:132$104' is identical to cell `$eq$fifo.v:242$111'.
    Redirecting output \Y: $eq$fifo.v:132$104_Y = $eq$fifo.v:242$111_Y
    Removing $eq cell `$eq$fifo.v:132$104' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:124$103' is identical to cell `$eq$fifo.v:234$110'.
    Redirecting output \Y: $eq$fifo.v:124$103_Y = $eq$fifo.v:234$110_Y
    Removing $eq cell `$eq$fifo.v:124$103' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$eq$fifo.v:116$102' is identical to cell `$eq$fifo.v:347$129'.
    Redirecting output \Y: $eq$fifo.v:116$102_Y = $eq$fifo.v:347$129_Y
    Removing $logic_not cell `$eq$fifo.v:116$102' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$logic_not$fifo.v:64$101' is identical to cell `$logic_not$fifo.v:305$118'.
    Redirecting output \Y: $logic_not$fifo.v:64$101_Y = $logic_not$fifo.v:305$118_Y
    Removing $logic_not cell `$logic_not$fifo.v:64$101' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$logic_not$fifo.v:47$99' is identical to cell `$logic_not$fifo.v:305$118'.
    Redirecting output \Y: $logic_not$fifo.v:47$99_Y = $logic_not$fifo.v:305$118_Y
    Removing $logic_not cell `$logic_not$fifo.v:47$99' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Removed a total of 24 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$168 (pure)
    Root of a mux tree: $procmux$165 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:149$80 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:148$77 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$412 (pure)
    Root of a mux tree: $procmux$409 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$403 (pure)
    Root of a mux tree: $procmux$400 (pure)
    Root of a mux tree: $procmux$371 (pure)
    Root of a mux tree: $procmux$339 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$279 (pure)
    Root of a mux tree: $procmux$252 (pure)
    Root of a mux tree: $procmux$211 (pure)
    Root of a mux tree: $procmux$199 (pure)
    Root of a mux tree: $procmux$187 (pure)
    Root of a mux tree: $procmux$176 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$478 (pure)
    Root of a mux tree: $procmux$475 (pure)
    Root of a mux tree: $procmux$460 (pure)
    Root of a mux tree: $procmux$445 (pure)
      Replacing known input bits on port A of cell $procmux$440: \valid_0 -> 1'0
    Root of a mux tree: $procmux$430 (pure)
      Replacing known input bits on port A of cell $procmux$425: \valid_1 -> 1'0
      Replacing known input bits on port A of cell $procmux$422: \valid_1 -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$466.
    dead port 2/2 on $mux $procmux$451.
    dead port 2/2 on $mux $procmux$436.
    dead port 2/2 on $mux $procmux$422.
    dead port 2/2 on $mux $procmux$418.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$481 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$502 (pure)
    Root of a mux tree: $procmux$499 (pure)
    Root of a mux tree: $procmux$490 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$837 (pure)
    Root of a mux tree: $procmux$834 (pure)
    Root of a mux tree: $procmux$831 (pure)
    Root of a mux tree: $procmux$828 (pure)
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$784 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$695 (pure)
    Root of a mux tree: $procmux$644 (pure)
    Root of a mux tree: $procmux$605 (pure)
    Root of a mux tree: $procmux$546 (pure)
    Root of a mux tree: $procmux$534 (pure)
    Root of a mux tree: $procmux$522 (pure)
    Root of a mux tree: $procmux$511 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$849 (pure)
    Root of a mux tree: $procmux$846 (pure)
    Root of a mux tree: $procmux$843 (pure)
    Root of a mux tree: $procmux$840 (pure)
  Analyzing evaluation results.
Removed 5 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module \demux.
    New ctrl vector for $mux cell $procmux$440: { }
    New ctrl vector for $mux cell $procmux$425: { }
  Optimizing cells in module \demux.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module \mux.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
    Consolidated identical input bits for $mux cell $procmux$843:
      Old ports: A=6'000000, B=6'111111, Y=$procmux$843_Y
      New ports: A=1'0, B=1'1, Y=$procmux$843_Y [0]
      New connections: $procmux$843_Y [5:1] = { $procmux$843_Y [0] $procmux$843_Y [0] $procmux$843_Y [0] $procmux$843_Y [0] $procmux$843_Y [0] }
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Performed a total of 3 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$379' is identical to cell `$procmux$392'.
    Redirecting output \Y: $procmux$379_Y = $procmux$392_Y
    Removing $mux cell `$procmux$379' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$285' is identical to cell `$procmux$345'.
    Redirecting output \Y: $procmux$285_Y = $procmux$345_Y
    Removing $mux cell `$procmux$285' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$262' is identical to cell `$procmux$274'.
    Redirecting output \Y: $procmux$262_Y = $procmux$274_Y
    Removing $mux cell `$procmux$262' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$238' is identical to cell `$procmux$297'.
    Redirecting output \Y: $procmux$238_Y = $procmux$297_Y
    Removing $mux cell `$procmux$238' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$223' is identical to cell `$procmux$297'.
    Redirecting output \Y: $procmux$223_Y = $procmux$297_Y
    Removing $mux cell `$procmux$223' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$382' is identical to cell `$procmux$395'.
    Redirecting output \Y: $procmux$382_Y = $procmux$395_Y
    Removing $mux cell `$procmux$382' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$288' is identical to cell `$procmux$348'.
    Redirecting output \Y: $procmux$288_Y = $procmux$348_Y
    Removing $mux cell `$procmux$288' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$226' is identical to cell `$procmux$241'.
    Redirecting output \Y: $procmux$226_Y = $procmux$241_Y
    Removing $mux cell `$procmux$226' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$291' is identical to cell `$procmux$351'.
    Redirecting output \Y: $procmux$291_Y = $procmux$351_Y
    Removing $mux cell `$procmux$291' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$229' is identical to cell `$procmux$244'.
    Redirecting output \Y: $procmux$229_Y = $procmux$244_Y
    Removing $mux cell `$procmux$229' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$procmux$232' is identical to cell `$procmux$247'.
    Redirecting output \Y: $procmux$232_Y = $procmux$247_Y
    Removing $mux cell `$procmux$232' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `\demux'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `\mux'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$798' is identical to cell `$procmux$817'.
    Redirecting output \Y: $procmux$798_Y = $procmux$817_Y
    Removing $mux cell `$procmux$798' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$741' is identical to cell `$procmux$764'.
    Redirecting output \Y: $procmux$741_Y = $procmux$764_Y
    Removing $mux cell `$procmux$741' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$648' is identical to cell `$procmux$672'.
    Redirecting output \Y: $procmux$648_Y = $procmux$672_Y
    Removing $mux cell `$procmux$648' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$621' is identical to cell `$procmux$639'.
    Redirecting output \Y: $procmux$621_Y = $procmux$639_Y
    Removing $mux cell `$procmux$621' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$582' is identical to cell `$procmux$672'.
    Redirecting output \Y: $procmux$582_Y = $procmux$672_Y
    Removing $mux cell `$procmux$582' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$558' is identical to cell `$procmux$672'.
    Redirecting output \Y: $procmux$558_Y = $procmux$672_Y
    Removing $mux cell `$procmux$558' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$801' is identical to cell `$procmux$820'.
    Redirecting output \Y: $procmux$801_Y = $procmux$820_Y
    Removing $mux cell `$procmux$801' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$744' is identical to cell `$procmux$767'.
    Redirecting output \Y: $procmux$744_Y = $procmux$767_Y
    Removing $mux cell `$procmux$744' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$651' is identical to cell `$procmux$675'.
    Redirecting output \Y: $procmux$651_Y = $procmux$675_Y
    Removing $mux cell `$procmux$651' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$561' is identical to cell `$procmux$585'.
    Redirecting output \Y: $procmux$561_Y = $procmux$585_Y
    Removing $mux cell `$procmux$561' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$747' is identical to cell `$procmux$770'.
    Redirecting output \Y: $procmux$747_Y = $procmux$770_Y
    Removing $mux cell `$procmux$747' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$654' is identical to cell `$procmux$678'.
    Redirecting output \Y: $procmux$654_Y = $procmux$678_Y
    Removing $mux cell `$procmux$654' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$564' is identical to cell `$procmux$588'.
    Redirecting output \Y: $procmux$564_Y = $procmux$588_Y
    Removing $mux cell `$procmux$564' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$750' is identical to cell `$procmux$773'.
    Redirecting output \Y: $procmux$750_Y = $procmux$773_Y
    Removing $mux cell `$procmux$750' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$657' is identical to cell `$procmux$681'.
    Redirecting output \Y: $procmux$657_Y = $procmux$681_Y
    Removing $mux cell `$procmux$657' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$567' is identical to cell `$procmux$591'.
    Redirecting output \Y: $procmux$567_Y = $procmux$591_Y
    Removing $mux cell `$procmux$567' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$660' is identical to cell `$procmux$684'.
    Redirecting output \Y: $procmux$660_Y = $procmux$684_Y
    Removing $mux cell `$procmux$660' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$570' is identical to cell `$procmux$594'.
    Redirecting output \Y: $procmux$570_Y = $procmux$594_Y
    Removing $mux cell `$procmux$570' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$776' is identical to cell `$procmux$753'.
    Redirecting output \Y: $procmux$776_Y = $procmux$753_Y
    Removing $mux cell `$procmux$776' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$663' is identical to cell `$procmux$687'.
    Redirecting output \Y: $procmux$663_Y = $procmux$687_Y
    Removing $mux cell `$procmux$663' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$779' is identical to cell `$procmux$756'.
    Redirecting output \Y: $procmux$779_Y = $procmux$756_Y
    Removing $mux cell `$procmux$779' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$573' is identical to cell `$procmux$597'.
    Redirecting output \Y: $procmux$573_Y = $procmux$597_Y
    Removing $mux cell `$procmux$573' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$666' is identical to cell `$procmux$690'.
    Redirecting output \Y: $procmux$666_Y = $procmux$690_Y
    Removing $mux cell `$procmux$666' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$procmux$576' is identical to cell `$procmux$600'.
    Redirecting output \Y: $procmux$576_Y = $procmux$600_Y
    Removing $mux cell `$procmux$576' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Removed a total of 35 cells.

4.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$851 ($dff) from module PCIE_trans.
Removing $procdff$864 ($dff) from module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
Removing $procdff$887 ($dff) from module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
Replaced 3 DFF cells.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..
  removing unused `$paramod\ff_d\N=6' cell `\ff_d_MF_DVCID2'.
  removing unused `\mux' cell `\mux1'.
  removing unused `$not' cell `$not$PCIE_trans.v:148$76'.
  removing unused `$logic_not' cell `$logic_not$PCIE_trans.v:157$82'.
  removing unused non-port wire \push_Demux.
  removing unused non-port wire \pausaD0D1.
  removing unused non-port wire \dataout_VCs.
  removing unused non-port wire \out_Fifo_Data_out_MF.
  removed 4 unused temporary wires.
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  removing unused `$logic_not' cell `$logic_not$fifo.v:305$149'.
Finding unused cells or wires in module \demux..
  removing unused `$logic_not' cell `$logic_not$demux.v:34$67'.
  removing unused `$not' cell `$not$demux.v:41$68'.
  removing unused `$not' cell `$eq$demux.v:42$69'.
  removing unused `$not' cell `$eq$demux.v:48$70'.
Finding unused cells or wires in module $paramod\ff_d\N=1..
  removing unused `$logic_not' cell `$logic_not$ff_d.v:7$134'.
Finding unused cells or wires in module \mux..
  removing unused `$logic_not' cell `$logic_not$mux.v:24$52'.
Finding unused cells or wires in module $paramod\ff_d\N=6..
  removing unused `$logic_not' cell `$logic_not$ff_d.v:7$132'.
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  removing unused `$logic_not' cell `$logic_not$fifo.v:305$118'.
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..

4.8. Executing OPT_EXPR pass (perform const folding).
Replacing $not cell `$not$PCIE_trans.v:165$86' (1'0) in module `\PCIE_trans' with constant driver `$not$PCIE_trans.v:164$84_Y = 1'1'.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$840 (pure)
    Root of a mux tree: $procmux$843 (pure)
    Root of a mux tree: $procmux$846 (pure)
    Root of a mux tree: $procmux$849 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$481 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$176 (pure)
    Root of a mux tree: $procmux$187 (pure)
    Root of a mux tree: $procmux$199 (pure)
    Root of a mux tree: $procmux$211 (pure)
    Root of a mux tree: $procmux$247
    Root of a mux tree: $procmux$252 (pure)
    Root of a mux tree: $procmux$274
    Root of a mux tree: $procmux$279 (pure)
    Root of a mux tree: $procmux$297
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$339 (pure)
    Root of a mux tree: $procmux$351
    Root of a mux tree: $procmux$371 (pure)
    Root of a mux tree: $procmux$395
    Root of a mux tree: $procmux$400 (pure)
    Root of a mux tree: $procmux$403 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$409 (pure)
    Root of a mux tree: $procmux$412 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$511 (pure)
    Root of a mux tree: $procmux$522 (pure)
    Root of a mux tree: $procmux$534 (pure)
    Root of a mux tree: $procmux$546 (pure)
    Root of a mux tree: $procmux$600
    Root of a mux tree: $procmux$605 (pure)
    Root of a mux tree: $procmux$639
    Root of a mux tree: $procmux$644 (pure)
    Root of a mux tree: $procmux$672
    Root of a mux tree: $procmux$690
    Root of a mux tree: $procmux$695 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$756
    Root of a mux tree: $procmux$784 (pure)
    Root of a mux tree: $procmux$820
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$828 (pure)
    Root of a mux tree: $procmux$831 (pure)
    Root of a mux tree: $procmux$834 (pure)
    Root of a mux tree: $procmux$837 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$165 (pure)
    Root of a mux tree: $procmux$168 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:148$77 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:149$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$430 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$460 (pure)
    Root of a mux tree: $procmux$475 (pure)
    Root of a mux tree: $procmux$478 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$490 (pure)
    Root of a mux tree: $procmux$499 (pure)
    Root of a mux tree: $procmux$502 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

4.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

4.15. Executing OPT_EXPR pass (perform const folding).

4.16. Finished OPT passes. (There is nothing left to do.)

5. Executing FSM pass (extract and optimize FSM).

5.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memwr$\Ram$dual_port_memory.v:18$90_EN as FSM state register:
    Users of register don't seem to benefit from recoding.

5.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

5.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$840 (pure)
    Root of a mux tree: $procmux$843 (pure)
    Root of a mux tree: $procmux$846 (pure)
    Root of a mux tree: $procmux$849 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$481 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$176 (pure)
    Root of a mux tree: $procmux$187 (pure)
    Root of a mux tree: $procmux$199 (pure)
    Root of a mux tree: $procmux$211 (pure)
    Root of a mux tree: $procmux$247
    Root of a mux tree: $procmux$252 (pure)
    Root of a mux tree: $procmux$274
    Root of a mux tree: $procmux$279 (pure)
    Root of a mux tree: $procmux$297
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$339 (pure)
    Root of a mux tree: $procmux$351
    Root of a mux tree: $procmux$371 (pure)
    Root of a mux tree: $procmux$395
    Root of a mux tree: $procmux$400 (pure)
    Root of a mux tree: $procmux$403 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$409 (pure)
    Root of a mux tree: $procmux$412 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$511 (pure)
    Root of a mux tree: $procmux$522 (pure)
    Root of a mux tree: $procmux$534 (pure)
    Root of a mux tree: $procmux$546 (pure)
    Root of a mux tree: $procmux$600
    Root of a mux tree: $procmux$605 (pure)
    Root of a mux tree: $procmux$639
    Root of a mux tree: $procmux$644 (pure)
    Root of a mux tree: $procmux$672
    Root of a mux tree: $procmux$690
    Root of a mux tree: $procmux$695 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$756
    Root of a mux tree: $procmux$784 (pure)
    Root of a mux tree: $procmux$820
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$828 (pure)
    Root of a mux tree: $procmux$831 (pure)
    Root of a mux tree: $procmux$834 (pure)
    Root of a mux tree: $procmux$837 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$165 (pure)
    Root of a mux tree: $procmux$168 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:148$77 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:149$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$430 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$460 (pure)
    Root of a mux tree: $procmux$475 (pure)
    Root of a mux tree: $procmux$478 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$490 (pure)
    Root of a mux tree: $procmux$499 (pure)
    Root of a mux tree: $procmux$502 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

6.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

6.8. Executing OPT_EXPR pass (perform const folding).

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing MEMORY pass.

7.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\Ram$dual_port_memory.v:18$97' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3': merged $dff to cell.
Checking cell `$memrd$\Ram$dual_port_memory.v:24$96' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3': no (compatible) $dff found.

7.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  removing unused `$dff' cell `$procdff$892'.
  removing unused `$dff' cell `$procdff$893'.
  removing unused `$dff' cell `$procdff$894'.
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

7.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

7.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\Ram' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3':
  $memwr$\Ram$dual_port_memory.v:18$97 ($memwr)
  $memrd$\Ram$dual_port_memory.v:24$96 ($memrd)

7.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \Ram in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3:
  created 4 $dff cells and 0 static cells of width 6.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$931' (1) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$auto$rtlil.cc:1641:Eq$932 = $0$memwr$\Ram$dual_port_memory.v:18$90_ADDR[1:0]$92 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$923' (1) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$auto$rtlil.cc:1641:Eq$924 = $0$memwr$\Ram$dual_port_memory.v:18$90_ADDR[1:0]$92 [0]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$913' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$915' in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with inverter.

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $memory\Ram$wrmux[2][0][0]$937 (pure)
    Root of a mux tree: $memory\Ram$wrmux[1][0][0]$929 (pure)
    Root of a mux tree: $memory\Ram$wrmux[0][0][0]$921 (pure)
    Root of a mux tree: $memory\Ram$wrmux[3][0][0]$943 (pure)
    Root of a mux tree: $procmux$840 (pure)
    Root of a mux tree: $procmux$843 (pure)
    Root of a mux tree: $procmux$846
    Root of a mux tree: $procmux$849 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$481 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$505 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$176 (pure)
    Root of a mux tree: $procmux$187 (pure)
    Root of a mux tree: $procmux$199 (pure)
    Root of a mux tree: $procmux$211 (pure)
    Root of a mux tree: $procmux$247
    Root of a mux tree: $procmux$252 (pure)
    Root of a mux tree: $procmux$274
    Root of a mux tree: $procmux$279 (pure)
    Root of a mux tree: $procmux$297
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$339 (pure)
    Root of a mux tree: $procmux$351
    Root of a mux tree: $procmux$371 (pure)
    Root of a mux tree: $procmux$395
    Root of a mux tree: $procmux$400 (pure)
    Root of a mux tree: $procmux$403 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$409 (pure)
    Root of a mux tree: $procmux$412 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$511 (pure)
    Root of a mux tree: $procmux$522 (pure)
    Root of a mux tree: $procmux$534 (pure)
    Root of a mux tree: $procmux$546 (pure)
    Root of a mux tree: $procmux$600
    Root of a mux tree: $procmux$605 (pure)
    Root of a mux tree: $procmux$639
    Root of a mux tree: $procmux$644 (pure)
    Root of a mux tree: $procmux$672
    Root of a mux tree: $procmux$690
    Root of a mux tree: $procmux$695 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$756
    Root of a mux tree: $procmux$784 (pure)
    Root of a mux tree: $procmux$820
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$828 (pure)
    Root of a mux tree: $procmux$831 (pure)
    Root of a mux tree: $procmux$834 (pure)
    Root of a mux tree: $procmux$837 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$165 (pure)
    Root of a mux tree: $procmux$168 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:148$77 (pure)
    Root of a mux tree: $ternary$PCIE_trans.v:149$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$430 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$460 (pure)
    Root of a mux tree: $procmux$475 (pure)
    Root of a mux tree: $procmux$478 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$490 (pure)
    Root of a mux tree: $procmux$499 (pure)
    Root of a mux tree: $procmux$502 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

8.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

8.8. Executing OPT_EXPR pass (perform const folding).

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing TECHMAP pass (map to technology primitives).

9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping mux.$logic_not$mux.v:15$49 ($logic_not) with simplemap.
Mapping mux.$logic_and$mux.v:15$50 ($logic_and) with simplemap.
Mapping mux.$logic_not$mux.v:28$53 ($logic_not) with simplemap.
Mapping mux.$logic_and$mux.v:28$54 ($logic_and) with simplemap.
Mapping mux.$logic_and$mux.v:32$55 ($logic_and) with simplemap.
Mapping mux.$procmux$484 ($mux) with simplemap.
Mapping mux.$procmux$487 ($mux) with simplemap.
Mapping mux.$procmux$490 ($mux) with simplemap.
Mapping mux.$procmux$493 ($mux) with simplemap.
Mapping mux.$procmux$496 ($mux) with simplemap.
Mapping mux.$procmux$499 ($mux) with simplemap.
Mapping mux.$procmux$502 ($mux) with simplemap.
Mapping mux.$procdff$874 ($dff) with simplemap.
Mapping mux.$procdff$875 ($dff) with simplemap.
Mapping demux.$procmux$416 ($mux) with simplemap.
Mapping demux.$procmux$427 ($mux) with simplemap.
Mapping demux.$procmux$430 ($mux) with simplemap.
Mapping demux.$procmux$434 ($mux) with simplemap.
Mapping demux.$procmux$442 ($mux) with simplemap.
Mapping demux.$procmux$445 ($mux) with simplemap.
Mapping demux.$procmux$449 ($mux) with simplemap.
Mapping demux.$procmux$455 ($mux) with simplemap.
Mapping demux.$procmux$457 ($mux) with simplemap.
Mapping demux.$procmux$460 ($mux) with simplemap.
Mapping demux.$procmux$464 ($mux) with simplemap.
Mapping demux.$procmux$470 ($mux) with simplemap.
Mapping demux.$procmux$472 ($mux) with simplemap.
Mapping demux.$procmux$475 ($mux) with simplemap.
Mapping demux.$procmux$478 ($mux) with simplemap.
Mapping demux.$procdff$869 ($dff) with simplemap.
Mapping demux.$procdff$870 ($dff) with simplemap.
Mapping demux.$procdff$871 ($dff) with simplemap.
Mapping demux.$procdff$872 ($dff) with simplemap.
Mapping PCIE_trans.$procmux$168 ($mux) with simplemap.
Mapping PCIE_trans.$procmux$165 ($mux) with simplemap.
Mapping PCIE_trans.$or$PCIE_trans.v:148$75 ($or) with simplemap.
Mapping PCIE_trans.$ternary$PCIE_trans.v:148$77 ($mux) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:149$78 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:149$79 ($and) with simplemap.
Mapping PCIE_trans.$ternary$PCIE_trans.v:149$80 ($mux) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:164$83 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:164$85 ($and) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:165$87 ($and) with simplemap.
Mapping PCIE_trans.$not$PCIE_trans.v:165$88 ($not) with simplemap.
Mapping PCIE_trans.$and$PCIE_trans.v:165$89 ($and) with simplemap.
Mapping PCIE_trans.$procdff$852 ($dff) with simplemap.
Mapping PCIE_trans.$procdff$853 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[0]$896 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[1]$898 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[2]$900 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[3][0][0]$943 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[3][0][0]$941 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$939 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[2][0][0]$937 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[2][0][0]$935 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$933 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[1][0][0]$929 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[1][0][0]$927 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$925 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wrmux[0][0][0]$921 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$wren[0][0][0]$919 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:70:addr_decode$917 ($and) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:65:addr_decode$915 ($not) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$auto$memory_map.cc:65:addr_decode$913 ($not) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][1][1]$910 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][1][0]$907 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$840 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram$rdmux[0][0][0]$904 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$843 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$846 ($mux) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$memory\Ram[3]$902 ($dff) with simplemap.
Mapping $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.$procmux$849 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:234$110 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:242$111 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:250$112 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:258$113 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:266$114 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:274$115 ($eq) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.2. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$1367
  created 1 $alu and 0 $macc cells.

9.3. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$add$fifo.v:311$119 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.4. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $sub ($sub).
  creating $alu model for $macc $sub.
  creating $alu cell for $sub: $auto$alumacc.cc:470:replace_alu$1370
  created 1 $alu and 0 $macc cells.

9.5. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$sub$fifo.v:315$121 using $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$logic_and$fifo.v:318$123 ($logic_and) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.6. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$1374
  created 1 $alu and 0 $macc cells.

9.7. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$add$fifo.v:320$124 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$add$fifo.v:321$125 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:344$127 ($eq) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$eq$fifo.v:347$129 ($logic_not) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$logic_and$fifo.v:347$130 ($logic_and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$508 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$511 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$516 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$519 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$522 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$525 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$528 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$531 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$534 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$537 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$540 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$543 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$546 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$578 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$585 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$588 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$591 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$594 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$597 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$600 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$602 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$605 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$623 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$639 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$641 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$644 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$668 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$672 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$675 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$678 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$681 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$684 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$687 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$690 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$692 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$695 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$698 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$715 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$732 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$735 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$753 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$756 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$758 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$764 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$767 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$770 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$773 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$781 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$784 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$803 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$817 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$820 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$822 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$825 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$828 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$831 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$834 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procmux$837 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$877 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$878 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$879 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$880 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$881 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$882 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$883 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$884 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$885 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$886 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$888 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$889 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$890 ($dff) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$procdff$891 ($dff) with simplemap.

9.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 5
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32'.

9.9. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32.

9.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32'.

9.11. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555 ($and) with simplemap.

9.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=32'.

9.13. Executing PROC pass (convert processes to netlists).

9.13.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.13.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

9.13.3. Executing PROC_INIT pass (extract init attributes).

9.13.4. Executing PROC_ARST pass (detect async resets in processes).

9.13.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1727'.
     1/64: $0\p[31:0] [30]
     2/64: $0\g[31:0] [30]
     3/64: $0\p[31:0] [28]
     4/64: $0\g[31:0] [28]
     5/64: $0\p[31:0] [26]
     6/64: $0\g[31:0] [26]
     7/64: $0\p[31:0] [24]
     8/64: $0\g[31:0] [24]
     9/64: $0\p[31:0] [22]
    10/64: $0\g[31:0] [22]
    11/64: $0\p[31:0] [20]
    12/64: $0\g[31:0] [20]
    13/64: $0\p[31:0] [18]
    14/64: $0\g[31:0] [18]
    15/64: $0\p[31:0] [16]
    16/64: $0\g[31:0] [16]
    17/64: $0\p[31:0] [14]
    18/64: $0\g[31:0] [14]
    19/64: $0\p[31:0] [12]
    20/64: $0\g[31:0] [12]
    21/64: $0\p[31:0] [10]
    22/64: $0\g[31:0] [10]
    23/64: $0\p[31:0] [8]
    24/64: $0\g[31:0] [8]
    25/64: $0\p[31:0] [6]
    26/64: $0\g[31:0] [6]
    27/64: $0\p[31:0] [4]
    28/64: $0\g[31:0] [4]
    29/64: $0\p[31:0] [2]
    30/64: $0\g[31:0] [2]
    31/64: $0\p[31:0] [29]
    32/64: $0\g[31:0] [29]
    33/64: $0\p[31:0] [25]
    34/64: $0\g[31:0] [25]
    35/64: $0\p[31:0] [21]
    36/64: $0\g[31:0] [21]
    37/64: $0\p[31:0] [17]
    38/64: $0\g[31:0] [17]
    39/64: $0\p[31:0] [13]
    40/64: $0\g[31:0] [13]
    41/64: $0\p[31:0] [9]
    42/64: $0\g[31:0] [9]
    43/64: $0\p[31:0] [5]
    44/64: $0\g[31:0] [5]
    45/64: $0\p[31:0] [27]
    46/64: $0\g[31:0] [27]
    47/64: $0\p[31:0] [19]
    48/64: $0\g[31:0] [19]
    49/64: $0\p[31:0] [11]
    50/64: $0\g[31:0] [11]
    51/64: $0\p[31:0] [23]
    52/64: $0\g[31:0] [23]
    53/64: $0\p[31:0] [31]
    54/64: $0\g[31:0] [31]
    55/64: $0\p[31:0] [15]
    56/64: $0\g[31:0] [15]
    57/64: $0\p[31:0] [7]
    58/64: $0\g[31:0] [7]
    59/64: $0\p[31:0] [3]
    60/64: $0\g[31:0] [3]
    61/64: $0\p[31:0] [1]
    62/64: $0\g[31:0] [1]
    63/64: $0\g[31:0] [0]
    64/64: $0\p[31:0] [0]

9.13.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\g' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1727'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\p' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1727'.

9.13.7. Executing PROC_DFF pass (convert process syncs to FFs).

9.13.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1727'.
Cleaned up 0 empty switches.

9.14. Executing OPT pass (performing simple optimizations).

9.14.1. Executing OPT_EXPR pass (perform const folding).

9.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=32'.
Removed a total of 0 cells.

9.14.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=32..
  removing unused `$and' cell `$and$<techmap.v>:222$1732'.
  removing unused `$and' cell `$and$<techmap.v>:222$1780'.
  removing unused `$and' cell `$and$<techmap.v>:222$1804'.
  removing unused `$and' cell `$and$<techmap.v>:222$1816'.
  removing unused `$and' cell `$and$<techmap.v>:222$1822'.
  removing unused `$and' cell `$and$<techmap.v>:230$1825'.
  removing unused `$and' cell `$and$<techmap.v>:230$1828'.
  removing unused `$and' cell `$and$<techmap.v>:230$1831'.
  removing unused `$and' cell `$and$<techmap.v>:230$1834'.
  removing unused `$and' cell `$and$<techmap.v>:230$1837'.
  removing unused `$and' cell `$and$<techmap.v>:230$1840'.
  removing unused `$and' cell `$and$<techmap.v>:230$1843'.
  removing unused `$and' cell `$and$<techmap.v>:230$1846'.
  removing unused `$and' cell `$and$<techmap.v>:230$1849'.
  removing unused `$and' cell `$and$<techmap.v>:230$1852'.
  removing unused `$and' cell `$and$<techmap.v>:230$1855'.
  removing unused `$and' cell `$and$<techmap.v>:230$1858'.
  removing unused `$and' cell `$and$<techmap.v>:230$1861'.
  removing unused `$and' cell `$and$<techmap.v>:230$1864'.
  removing unused `$and' cell `$and$<techmap.v>:230$1867'.
  removing unused `$and' cell `$and$<techmap.v>:230$1870'.
  removing unused `$and' cell `$and$<techmap.v>:230$1873'.
  removing unused `$and' cell `$and$<techmap.v>:230$1876'.
  removing unused `$and' cell `$and$<techmap.v>:230$1879'.
  removing unused `$and' cell `$and$<techmap.v>:230$1882'.
  removing unused `$and' cell `$and$<techmap.v>:230$1885'.
  removing unused `$and' cell `$and$<techmap.v>:230$1888'.
  removing unused `$and' cell `$and$<techmap.v>:230$1891'.
  removing unused `$and' cell `$and$<techmap.v>:230$1894'.
  removing unused `$and' cell `$and$<techmap.v>:230$1897'.
  removing unused `$and' cell `$and$<techmap.v>:230$1900'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

9.14.5. Finished fast OPT passes.

9.15. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562 ($xor) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559 ($mux) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558 ($not) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\ff_d\N=6.$procmux$505 ($mux) with simplemap.
Mapping $paramod\ff_d\N=6.$procdff$876 ($dff) with simplemap.
Mapping $paramod\ff_d\N=1.$procmux$481 ($mux) with simplemap.
Mapping $paramod\ff_d\N=1.$procdff$873 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$176 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$173 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$241 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$202 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$234 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$199 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$196 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$193 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$190 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$187 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$211 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$184 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$208 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$181 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$205 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$276 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$274 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$264 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$293 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$252 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$249 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$247 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$244 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$279 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$308 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$306 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$300 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$303 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$297 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$314 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$311 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:184$143 ($logic_not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:193$144 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:201$145 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:209$146 ($eq) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.16. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$3120
  created 1 $alu and 0 $macc cells.

9.17. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$add$fifo.v:311$150 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $sub ($sub).
  creating $alu model for $macc $sub.
  creating $alu cell for $sub: $auto$alumacc.cc:470:replace_alu$3123
  created 1 $alu and 0 $macc cells.

9.19. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$sub$fifo.v:315$152 using $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$logic_and$fifo.v:318$154 ($logic_and) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.

9.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $add ($add).
  creating $alu model for $macc $add.
  creating $alu cell for $add: $auto$alumacc.cc:470:replace_alu$3127
  created 1 $alu and 0 $macc cells.

9.21. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$add$fifo.v:320$155 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$add$fifo.v:321$156 using $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:333$158 ($eq) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$logic_and$fifo.v:336$161 ($logic_and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$eq$fifo.v:336$162 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$logic_and$fifo.v:336$163 ($logic_and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$325 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$336 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$339 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$345 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$348 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$351 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$353 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$357 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$360 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$363 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$366 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$368 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$371 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$384 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$392 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$395 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$397 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$400 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$403 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$406 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$409 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procmux$412 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$854 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$855 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$856 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$857 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$858 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$859 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$860 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$861 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$862 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$863 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$865 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$866 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$867 ($dff) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$procdff$868 ($dff) with simplemap.

9.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 3
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32'.

9.23. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32.

9.24. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 2
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32'.

9.25. Continuing TECHMAP pass.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210 ($xor) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208 ($mux) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207 ($not) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.B_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.A_conv ($pos) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:212$1728 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1733 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1736 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1739 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1742 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1745 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1748 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1751 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1754 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1757 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1760 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1763 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1766 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1769 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1772 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1775 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1778 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1781 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1784 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1787 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1790 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1793 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1796 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1799 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1802 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1805 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1808 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1811 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1814 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1817 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1820 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1735 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1738 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1741 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1744 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1747 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1750 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1753 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1756 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1759 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1762 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1765 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1768 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1771 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1774 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1777 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1783 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1786 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1789 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1792 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1795 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1798 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1801 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1807 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1810 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1813 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1819 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1823 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1826 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1829 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1832 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1835 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1838 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1841 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1844 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1847 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1850 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1853 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1856 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1859 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1862 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1865 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1868 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1871 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1874 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1877 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1880 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1883 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1886 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1889 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1892 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1895 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1898 ($and) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:212$1729 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1731 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1734 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1737 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1740 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1743 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1746 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1749 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1752 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1755 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1758 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1761 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1764 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1767 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1770 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1773 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1776 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1779 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1782 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1785 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1788 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1791 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1794 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1797 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1800 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1803 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1806 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1809 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1812 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1815 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1818 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1821 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1824 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1827 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1830 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1833 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1836 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1839 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1842 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1845 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1848 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1851 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1854 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1857 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1860 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1863 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1866 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1869 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1872 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1875 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1878 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1881 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1884 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1887 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1890 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1893 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1896 ($or) with simplemap.
Mapping $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:229$1899 ($or) with simplemap.
No more expansions possible.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1244' (01?) in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3' with constant driver `$0$memwr$\Ram$dual_port_memory.v:18$90_EN[5:0]$94 [5] = \iWriteEnable'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3664' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3632' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3568' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [1] = \wr_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3663' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3631' (100) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3599' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [0] = \wr_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4140' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4224' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [0] = \wr_ptr [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3031' (01?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$procmux$173_Y = $logic_and$fifo.v:336$163_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3133' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3130 [1] = \num_mem [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3030' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3109' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3107 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3110' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3107 [1] = \num_mem [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3072' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3098' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3094 [2] = \num_mem [2]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3032' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3534' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [0] = $techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3825' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3793' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3729' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [1] = \rd_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3824' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3792' (100) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3760' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [0] = \rd_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4282' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4366' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [0] = \rd_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3085' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3081 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3084' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3081 [1] = \num_mem [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3066' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3065' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3695' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [0] = $techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3503' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3471' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3502' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3470' (101) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3438' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3406' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3998' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:212$1728_Y = \num_mem [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4082' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [0] = \num_mem [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3342' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3310' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3246' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3341' (1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3309' (100) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3277' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3856' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3940' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3212' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [0] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3504' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3472' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3439' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3343' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3311' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3247' (?0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [2] = \num_mem [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3278' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3941' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [1] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1730_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3060' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3152' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3153' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3154' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3070' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3071' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3069' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3156' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3157' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3158' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3159' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3163' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3164' in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3344' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3312' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3248' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3279' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3983' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [2] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1856_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3215' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [3] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1856_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3345' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3313' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3249' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3888' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1735_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3873' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1778_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3280' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3858' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3942' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3957' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3216' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3346' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3314' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3250' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3281' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3926' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1859_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3984' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3217' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3347' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3315' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3251' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3889' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3918' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3282' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3859' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3943' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3976' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3218' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3348' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3316' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3252' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3283' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3927' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3985' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3219' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3349' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3317' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3253' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3890' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3903' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3881' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3874' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3284' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3860' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3944' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3958' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3965' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3220' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3350' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3318' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3254' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3285' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3928' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3986' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3221' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3351' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3319' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3255' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3891' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3919' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3286' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3861' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3945' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3977' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3222' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3352' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3320' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3256' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3287' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3929' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3987' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3223' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3353' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3321' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3257' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3892' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3904' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3915' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3875' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3288' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3862' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3946' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3959' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3973' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3224' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3354' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3322' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3258' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3289' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3930' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3988' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3225' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3355' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3323' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3259' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3893' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3920' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3290' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3863' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3947' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3978' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3226' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3356' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3324' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3260' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3291' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3931' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3989' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3227' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3357' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3325' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3261' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3894' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3905' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3910' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3885' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3882' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3876' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3292' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3864' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3948' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3960' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3966' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3969' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3228' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3358' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3326' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3262' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3293' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3932' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3990' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3229' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3359' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3327' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3263' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3895' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3921' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3294' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3865' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3949' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3979' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3230' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3360' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3328' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3264' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3295' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3933' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3991' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3231' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3361' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3329' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3265' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3896' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3906' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3916' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3877' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3296' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3866' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3950' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3961' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3974' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3232' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3362' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3330' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3266' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3297' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3934' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3992' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3233' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3363' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3331' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3267' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3897' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3922' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3298' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3867' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3951' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3980' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3234' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3364' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3332' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3268' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3299' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3935' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3993' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3235' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3365' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3333' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3269' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3898' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3907' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3911' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3914' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3883' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3878' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3300' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3868' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3952' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3962' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3967' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3972' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3236' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3366' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3334' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3270' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3301' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3936' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3994' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3237' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3367' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3335' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3271' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3899' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3923' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3302' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3869' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3953' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3981' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3238' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3368' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3336' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3272' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3303' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3937' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3995' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3239' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3369' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3337' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3273' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3900' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3908' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3917' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3879' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3304' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3870' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3954' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3963' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3975' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3240' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3370' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3338' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3274' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3305' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3938' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3996' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3241' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3371' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3339' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3275' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3901' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3924' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3306' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3871' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3955' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3982' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3242' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3372' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$not$<techmap.v>:258$3202_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3340' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$ternary$<techmap.v>:258$3203_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3276' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3307' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3939' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3997' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3243' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3902' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3909' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3912' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3913' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3887' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3886' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3884' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3880' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3308' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$and$<techmap.v>:260$3204_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3872' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3956' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3964' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3968' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3970' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3971' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:311$150.$auto$alumacc.cc:484:replace_alu$3122 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3244' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:263$3206_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3505' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3473' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3409' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3440' (?1) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [2] = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3506' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3474' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [4] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3410' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4030' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1735_Y = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3441' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4000' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1733_Y = \num_mem [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4084' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1734_Y = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3507' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3475' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3411' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3442' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4068' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1859_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4126' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [4] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3508' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3476' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3412' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4031' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1738_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4060' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1835_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3443' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4001' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4085' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4118' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [5] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3509' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3477' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3413' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3444' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4069' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1862_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4127' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [6] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3510' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3478' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3414' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4032' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1741_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4045' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1783_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4023' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1802_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4016' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3445' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4002' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4086' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4100' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4107' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [7] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3511' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3479' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3415' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3446' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4070' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1865_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4128' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [8] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3512' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3480' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3416' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [10] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4033' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1744_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4061' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1838_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3447' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4003' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4087' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4119' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [9] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3513' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3481' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3417' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3448' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4071' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1868_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4129' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [10] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3514' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3482' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3418' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [12] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4034' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1747_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4046' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1786_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4057' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1826_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4017' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3449' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4004' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4088' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4101' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4115' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [11] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3515' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3483' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3419' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3450' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4072' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1871_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4130' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [12] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3516' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3484' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3420' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [14] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4035' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1750_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4062' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1841_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3451' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4005' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4089' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4120' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [13] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3517' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3485' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3421' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3452' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4073' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1874_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4131' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [14] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3518' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3486' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3422' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [16] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4036' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1753_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4047' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1789_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4052' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1807_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4027' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1814_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4024' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4018' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3453' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4006' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4090' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4102' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4108' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4111' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [15] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3519' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3487' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3423' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [17] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3454' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4074' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1877_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4132' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [16] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3520' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3488' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3424' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [18] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4037' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1756_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4063' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1844_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3455' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4007' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4091' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4121' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [17] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3521' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3489' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3425' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [19] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3456' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4075' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1880_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4133' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [18] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3522' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3490' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3426' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [20] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4038' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1759_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4048' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1792_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4058' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1829_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4019' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3457' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4008' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4092' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4103' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4116' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [19] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3523' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3491' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3427' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [21] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3458' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4076' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1883_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4134' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [20] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3524' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3492' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3428' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [22] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4039' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1762_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4064' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1847_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3459' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4009' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4093' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4122' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [21] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3525' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3493' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3429' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [23] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3460' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4077' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1886_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4135' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [22] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3526' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3494' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3430' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [24] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4040' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1765_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4049' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1795_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4053' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1810_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4056' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1823_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4025' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4020' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3461' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4010' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4094' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4104' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4109' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4114' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [23] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3527' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3495' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3431' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [25] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3462' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4078' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1889_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4136' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [24] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3528' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3496' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3432' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [26] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4041' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1768_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4065' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1850_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3463' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4011' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4095' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4123' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [25] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3529' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3497' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3433' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [27] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3464' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4079' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1892_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4137' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [26] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3530' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3498' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [28] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3434' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4042' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1771_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4050' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1798_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4059' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1832_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4021' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3465' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4012' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4096' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4105' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4117' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [27] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3531' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3499' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3435' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [29] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3466' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4080' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1895_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4138' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [28] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3532' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3500' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [30] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3436' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4043' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1774_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4066' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1853_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3467' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4013' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4097' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4124' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [29] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3533' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$not$<techmap.v>:258$3202_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3501' (011) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$ternary$<techmap.v>:258$3203_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3437' (01) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3468' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4081' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1898_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4139' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [30] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4044' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1777_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4051' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1801_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4054' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1813_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4055' (11) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:222$1819_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4029' (1?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1820_Y = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4028' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4026' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4022' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3469' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$and$<techmap.v>:260$3204_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4014' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4098' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4106' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4110' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4112' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4113' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [31] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3405' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [32] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3665' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3633' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3569' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3600' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4225' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [1] = $techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3536' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [2] = $techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3666' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3634' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3570' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3601' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4209' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1856_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4267' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3537' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3667' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3635' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3571' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4172' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1735_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4157' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1778_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3602' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4142' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4226' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4241' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3538' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3668' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3636' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3572' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3603' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4210' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1859_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4268' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3539' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3669' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3637' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3573' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4173' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4202' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3604' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4143' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4227' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4260' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3540' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3670' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3638' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3574' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3605' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4211' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4269' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3541' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3671' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3639' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3575' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4174' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4187' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4165' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4158' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3606' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4144' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4228' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4242' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4249' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3542' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3672' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3640' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3576' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3607' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4212' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4270' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3543' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3673' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3641' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3577' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4175' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4203' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3608' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4145' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4229' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4261' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3544' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3674' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3642' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3578' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3609' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4213' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4271' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3545' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3675' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3643' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3579' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4176' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4188' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4199' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4159' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3610' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4146' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4230' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4243' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4257' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3546' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3676' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3644' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3580' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3611' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4214' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4272' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3547' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3677' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3645' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3581' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4177' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4204' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3612' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4147' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4231' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4262' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3548' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3678' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3646' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3582' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3613' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4215' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4273' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3549' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3679' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3647' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3583' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4178' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4189' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4194' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4169' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4166' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4160' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3614' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4148' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4232' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4244' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4250' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4253' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3550' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3680' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3648' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3584' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3615' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4216' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4274' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3551' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3681' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3649' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3585' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4179' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4205' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3616' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4149' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4233' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4263' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3552' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3682' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3650' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3586' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3617' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4217' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4275' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3553' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3683' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3651' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3587' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4180' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4190' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4200' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4161' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3618' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4150' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4234' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4245' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4258' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3554' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3684' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3652' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3588' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3619' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4218' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4276' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3555' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3685' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3653' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3589' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4181' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4206' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3620' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4151' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4235' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4264' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3556' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3686' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3654' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3590' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3621' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4219' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4277' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3557' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3687' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3655' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3591' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4182' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4191' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4195' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4198' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4167' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4162' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3622' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4152' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4236' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4246' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4251' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4256' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3558' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3688' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3656' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3592' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3623' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4220' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4278' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3559' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3689' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3657' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3593' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4183' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4207' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3624' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4153' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4237' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4265' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3560' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3690' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3658' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3594' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3625' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4221' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4279' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3561' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3691' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3659' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3595' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4184' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4192' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4201' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4163' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3626' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4154' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4238' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4247' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4259' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3562' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3692' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3660' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3596' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3627' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4222' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4280' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3563' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3693' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3661' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3597' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4185' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4208' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3628' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4155' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4239' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4266' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3564' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3694' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3662' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3598' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3629' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4223' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4281' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3565' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4186' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4193' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4196' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4197' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4171' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4170' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4168' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4164' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3630' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4156' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4240' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4248' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4252' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4254' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4255' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:320$155.$auto$alumacc.cc:484:replace_alu$3129 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3566' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:320$155.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3826' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3794' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3730' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3761' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4367' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [1] = $techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3697' (0?) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [2] = $techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3827' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3795' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3731' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3762' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4351' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1856_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4409' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3698' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3828' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3796' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3732' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4314' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1735_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4299' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1778_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3763' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4284' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4368' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4383' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3699' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3829' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3797' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3733' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3764' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4352' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1859_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4410' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3700' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3830' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3798' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3734' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4315' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4344' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3765' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4285' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4369' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4402' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3701' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3831' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3799' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3735' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3766' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4353' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4411' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3702' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3832' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3800' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3736' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4316' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4329' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4307' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4300' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3767' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4286' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4370' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4384' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4391' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3703' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3833' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3801' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3737' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3768' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4354' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4412' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3704' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3834' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3802' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3738' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4317' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4345' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3769' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4287' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4371' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4403' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3705' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3835' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3803' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3739' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3770' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4355' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4413' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3706' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3836' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3804' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3740' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4318' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4330' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4341' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4301' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3771' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4288' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4372' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4385' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4399' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3707' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3837' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3805' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3741' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3772' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4356' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4414' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3708' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3838' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3806' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3742' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4319' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4346' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3773' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4289' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4373' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4404' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3709' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3839' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3807' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3743' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3774' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4357' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4415' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3710' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3840' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3808' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3744' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4320' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4331' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4336' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4311' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4308' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4302' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3775' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4290' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4374' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4386' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4392' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4395' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3711' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3841' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3809' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3745' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3776' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4358' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4416' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3712' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3842' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3810' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3746' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4321' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4347' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3777' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4291' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4375' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4405' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3713' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3843' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3811' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3747' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3778' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4359' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4417' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3714' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3844' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3812' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3748' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4322' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4332' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4342' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4303' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3779' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4292' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4376' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4387' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4400' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3715' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3845' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3813' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3749' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3780' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4360' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4418' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3716' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3846' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3814' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3750' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4323' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4348' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3781' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4293' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4377' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4406' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3717' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3847' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3815' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3751' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3782' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4361' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4419' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3718' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3848' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3816' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3752' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4324' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4333' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4337' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4340' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4309' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4304' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3783' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4294' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4378' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4388' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4393' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4398' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3719' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3849' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3817' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3753' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3784' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4362' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4420' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3720' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3850' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3818' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3754' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4325' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4349' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3785' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4295' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4379' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4407' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3721' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3851' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3819' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3755' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3786' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4363' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4421' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3722' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3852' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3820' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3756' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4326' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4334' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4343' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4305' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3787' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4296' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4380' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4389' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4401' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3723' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3853' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3821' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3757' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3788' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4364' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4422' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3724' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3854' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3822' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3758' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4327' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4350' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3789' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4297' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4381' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4408' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3725' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3855' (0) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$not$<techmap.v>:258$3207_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3823' (010) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$ternary$<techmap.v>:258$3208_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3759' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:262$3210_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3790' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4365' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4423' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3726' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4328' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4335' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4338' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4339' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4313' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4312' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4310' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4306' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3791' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$and$<techmap.v>:260$3209_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4298' (const_and) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4382' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4390' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4394' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4396' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4397' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$add$fifo.v:321$156.$auto$alumacc.cc:484:replace_alu$3129 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3727' (00) in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4' with constant driver `$techmap$techmap$add$fifo.v:321$156.$auto$alumacc.cc:470:replace_alu$3127.$xor$<techmap.v>:263$3211_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1934' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1902' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1933' (1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1901' (100) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [0] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1935' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1903' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1936' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1904' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1261' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1262' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1264' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [3] = \num_mem [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1265' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [4] = \num_mem [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1279' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1277 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1280' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1277 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1283' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1277 [4] = \num_mem [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1298' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1295 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1301' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1295 [4] = \num_mem [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1315' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1313 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1319' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1313 [4] = \num_mem [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1337' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1331 [4] = \num_mem [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1351' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1349 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1352' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1349 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1353' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1349 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1354' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1349 [3] = \num_mem [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1380' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1377 [1] = \num_mem [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1381' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1377 [2] = \num_mem [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1382' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1377 [3] = \num_mem [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2095' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2063' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2094' (1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2062' (101) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2030' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1965' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2590' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:212$1728_Y = \num_mem [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2674' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [0] = \num_mem [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1404' (01?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$procmux$508_Y = $logic_and$fifo.v:347$130_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1405' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2096' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2064' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2031' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [1] = \num_mem [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2097' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2065' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2032' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [2] = \num_mem [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2098' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2066' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2033' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [3] = \num_mem [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1564' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [1] = \num_mem [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1628' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [0] = \num_mem [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2568' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2556' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [0] = \num_mem [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1595' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [0] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1565' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [2] = \num_mem [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1629' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2554' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [1] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1566' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [3] = \num_mem [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1630' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2586' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [2] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1856_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1937' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1905' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1567' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [4] = \num_mem [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1631' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2565' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2552' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2460' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [3] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1778_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2417' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2385' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2288' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [1] = \rd_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2416' (1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2384' (100) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2352' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [0] = \rd_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2874' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2958' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [0] = \rd_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2319' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [0] = $techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2418' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2386' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2289' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [2] = \rd_ptr [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2353' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2959' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [1] = $techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2419' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2387' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2290' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [3] = \rd_ptr [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2354' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3001' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [2] = $techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1856_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2256' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2224' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2127' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [1] = \wr_ptr [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2255' (1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2223' (100) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2191' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [0] = \wr_ptr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2732' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:212$1728_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2816' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [0] = \wr_ptr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2158' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [0] = $techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2257' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2225' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2128' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [2] = \wr_ptr [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2192' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2817' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [1] = $techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1730_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2258' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2226' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2129' (?0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [3] = \wr_ptr [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2193' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2859' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [2] = $techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1856_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1467' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1454' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1455' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1456' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1457' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1458' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1459' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1463' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1468' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1469' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1470' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1471' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1472' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1473' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1495' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1496' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1497' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1498' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1492' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1493' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1502' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1503' in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1938' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1906' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1568' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1939' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1907' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1569' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1940' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1908' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1570' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1941' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1909' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1571' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1942' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1910' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1572' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1943' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1911' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1573' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1944' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1912' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1574' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1945' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1913' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1575' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1946' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1914' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1576' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1947' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1915' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1577' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1948' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1916' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1578' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1949' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1917' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1579' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1950' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1918' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1580' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1951' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1919' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1581' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1952' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1920' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1582' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1953' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1921' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1583' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1954' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1922' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1584' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1955' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1923' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1585' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1956' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1924' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1586' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1957' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1925' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1587' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1958' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1926' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1588' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1959' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1927' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1589' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1960' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1928' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1590' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1961' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1929' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1591' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1962' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1930' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1592' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1963' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1931' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1593' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1964' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$not$<techmap.v>:258$1553_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1932' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$ternary$<techmap.v>:258$1554_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1594' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1632' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2503' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [4] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1859_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1600' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [5] = $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1859_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2524' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2472' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1633' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2563' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2550' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2487' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1601' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1634' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2576' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2502' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1602' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2523' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2539' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1635' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2562' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2548' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2459' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2510' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2532' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2583' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1603' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1636' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2575' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2501' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1604' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2522' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1637' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2559' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2546' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2486' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1605' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1638' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2574' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2500' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1606' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1639' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2557' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2482' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2521' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2538' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2458' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2509' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2475' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2490' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1607' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1640' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2573' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2499' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1608' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1641' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2555' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2451' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2520' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2485' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1609' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1642' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2572' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2498' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1610' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2519' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2508' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2480' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2528' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1643' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2553' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2450' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2537' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2457' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2531' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2582' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2494' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1611' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1644' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2571' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2497' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1612' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2518' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2469' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1645' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2551' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2581' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2484' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1613' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1646' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2570' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1614' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2517' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2536' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1647' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2549' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2580' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2449' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2507' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2474' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2489' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1615' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1648' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2569' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1616' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1649' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2547' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2466' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2516' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2468' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2483' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1617' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1650' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2567' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1618' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2515' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2506' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2479' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2476' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1651' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2545' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2465' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2535' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2448' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2530' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2496' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2491' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1619' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1652' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2564' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2453' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1620' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1653' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2544' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2464' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2514' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2467' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2481' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1621' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1654' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2561' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2452' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1622' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2513' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2505' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1655' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2543' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2463' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2534' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2585' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2488' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1623' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1656' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2560' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2588' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1624' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1657' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2542' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2462' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2512' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2579' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2587' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1625' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1658' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2558' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2589' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1626' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2511' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2504' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2529' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1659' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$and$<techmap.v>:260$1555_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2541' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2461' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2533' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2584' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2495' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2478' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2527' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2493' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2477' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2526' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2492' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:311$119.$auto$alumacc.cc:484:replace_alu$1369 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1627' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:263$1557_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2099' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2067' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1970' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [5] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2100' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2068' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1971' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2101' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2069' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1972' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2102' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2070' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1973' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2103' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2071' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1974' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [9] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2104' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2072' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1975' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [10] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2105' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2073' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1976' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [11] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2106' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2074' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1977' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [12] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2107' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2075' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1978' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [13] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2108' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2076' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1979' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [14] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2109' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2077' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1980' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [15] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2110' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2078' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1981' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [16] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2111' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2079' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1982' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [17] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2112' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2080' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1983' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [18] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2113' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2081' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1984' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [19] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2114' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2082' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1985' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [20] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2115' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2083' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1986' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [21] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2116' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2084' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1987' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [22] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2117' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2085' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1988' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [23] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2118' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2086' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1989' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [24] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2119' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2087' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1990' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [25] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2120' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2088' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1991' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [26] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2121' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2089' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1992' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [27] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2122' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2090' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [28] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1993' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [28] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2123' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2091' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1994' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [29] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2124' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2092' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [30] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1995' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [30] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2125' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$not$<techmap.v>:258$1553_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2093' (011) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$ternary$<techmap.v>:258$1554_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1996' (01) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2034' (?1) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [4] = \num_mem [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2623' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1738_Y = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2035' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2593' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1736_Y = \num_mem [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2677' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1737_Y = \num_mem [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2036' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2661' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1862_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [5]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2719' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [6] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2624' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1741_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2637' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1783_Y = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2608' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1781_Y = \num_mem [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2037' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2594' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2678' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2692' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1782_Y = \num_mem [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2038' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2662' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1865_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2720' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [8] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2625' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1744_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2653' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1838_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2039' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2595' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2679' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2711' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [9] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2040' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2663' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1868_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2721' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [10] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2626' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1747_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2638' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1786_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2649' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1826_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2609' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2041' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2596' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2680' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2693' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2707' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [11] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2042' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2664' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1871_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2722' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [12] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2627' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1750_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2654' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1841_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2043' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2597' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2681' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2712' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [13] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2044' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2665' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1874_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2723' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [14] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2628' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1753_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2639' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1789_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2644' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1807_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2619' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1814_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2616' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2610' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2045' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2598' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2682' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2694' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2700' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2703' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [15] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2046' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2666' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1877_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2724' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [16] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2629' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1756_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2655' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1844_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2047' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2599' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2683' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2713' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [17] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2048' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2667' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1880_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2725' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [18] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2630' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1759_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2640' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1792_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2650' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1829_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2611' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2049' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2600' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2684' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2695' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2708' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [19] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2050' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2668' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1883_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2726' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [20] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2631' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1762_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2656' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1847_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2051' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2601' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2685' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2714' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [21] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2052' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2669' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1886_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2727' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [22] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2632' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1765_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2641' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1795_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2645' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1810_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2648' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1823_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2617' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2612' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2053' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2602' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2686' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2696' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2701' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2706' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [23] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2054' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2670' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1889_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2728' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [24] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2633' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1768_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2657' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1850_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2055' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2603' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2687' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2715' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [25] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2056' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2671' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1892_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2729' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [26] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2634' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1771_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2642' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1798_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2651' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1832_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2613' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2057' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2604' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2688' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2697' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2709' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [27] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2058' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2672' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1895_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2730' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [28] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2635' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1774_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2658' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1853_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2059' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2605' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2689' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2716' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [29] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2060' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2673' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1898_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2731' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [30] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2636' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1777_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2643' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1801_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2646' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1813_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2647' (11) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:222$1819_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2621' (1?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1820_Y = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2620' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2618' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2614' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2061' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$and$<techmap.v>:260$1555_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2606' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2690' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2698' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2702' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2704' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2705' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [31] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2029' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [32] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2259' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2227' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2130' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2260' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2228' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2131' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2261' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2229' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2132' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2262' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2230' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2133' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2263' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2231' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2134' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2264' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2232' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2135' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2265' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2233' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2136' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2266' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2234' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2137' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2267' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2235' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2138' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2268' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2236' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2139' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2269' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2237' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2140' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2270' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2238' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2141' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2271' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2239' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2142' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2272' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2240' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2143' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2273' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2241' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2144' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2274' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2242' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2145' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2275' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2243' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2146' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2276' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2244' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2147' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2277' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2245' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2148' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2278' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2246' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2149' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2279' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2247' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2150' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2280' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2248' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2151' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2281' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2249' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2152' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2282' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2250' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2153' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2283' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2251' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2154' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2284' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2252' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2155' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2285' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2253' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2156' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2286' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2254' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2157' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2194' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2734' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2818' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2833' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [3] = $techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2162' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [4] = $techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2195' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2802' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1859_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2860' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2163' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2765' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2794' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2196' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2735' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2819' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2852' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2164' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2197' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2803' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2861' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2165' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2766' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2779' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2757' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2750' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2198' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2736' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2820' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2834' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2841' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2166' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2199' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2804' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2862' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2167' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2767' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2795' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2200' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2737' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2821' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2853' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2168' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2201' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2805' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2863' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2169' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2768' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2780' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2791' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2751' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2202' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2738' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2822' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2835' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2849' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2170' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2203' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2806' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2864' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2171' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2769' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2796' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2204' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2739' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2823' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2854' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2172' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2205' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2807' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2865' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2173' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2770' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2781' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2786' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2761' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2758' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2752' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2206' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2740' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2824' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2836' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2842' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2845' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2174' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2207' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2808' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2866' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2175' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2771' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2797' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2208' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2741' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2825' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2855' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2176' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2209' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2809' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2867' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2177' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2772' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2782' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2792' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2753' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2210' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2742' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2826' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2837' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2850' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2178' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2211' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2810' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2868' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2179' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2773' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2798' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2212' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2743' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2827' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2856' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2180' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2213' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2811' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2869' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2181' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2774' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2783' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2787' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2790' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2759' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2754' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2214' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2744' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2828' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2838' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2843' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2848' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2182' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2215' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2812' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2870' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2183' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2775' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2799' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2216' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2745' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2829' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2857' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2184' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2217' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2813' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2871' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2185' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2776' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2784' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2793' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2755' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2218' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2746' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2830' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2839' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2851' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2186' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2219' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2814' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2872' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2187' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2777' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2800' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2220' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2747' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2831' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2858' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2188' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2221' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2815' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2873' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2189' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2778' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2785' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2788' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2789' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2763' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2762' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2760' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2756' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2222' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2748' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2832' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2840' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2844' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2846' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2847' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:320$124.$auto$alumacc.cc:484:replace_alu$1376 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2190' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:320$124.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [32] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2420' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2388' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2291' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2421' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2389' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2292' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2422' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2390' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2293' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [6] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2423' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2391' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2294' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [7] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2424' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2392' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2295' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [8] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2425' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2393' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2296' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [9] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2426' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2394' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2297' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [10] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2427' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2395' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2298' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [11] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2428' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2396' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2299' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [12] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2429' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2397' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2300' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [13] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2430' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2398' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2301' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [14] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2431' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2399' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2302' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [15] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2432' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2400' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2303' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [16] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2433' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2401' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2304' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [17] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2434' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2402' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2305' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [18] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2435' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2403' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2306' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [19] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2436' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2404' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2307' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [20] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2437' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2405' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2308' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [21] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2438' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2406' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2309' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [22] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2439' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2407' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2310' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [23] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2440' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2408' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2311' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [24] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2441' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2409' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2312' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [25] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2442' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2410' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2313' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [26] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2443' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2411' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2314' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [27] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2444' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2412' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2315' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [28] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2445' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2413' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2316' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [29] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2446' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2414' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2317' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [30] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2447' (0) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$not$<techmap.v>:258$1558_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2415' (010) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$ternary$<techmap.v>:258$1559_Y [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2318' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:262$1561_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2355' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2876' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1733_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2960' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1734_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2975' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [3] = $techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2323' (0?) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [4] = $techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1778_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2356' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2944' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1859_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3002' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2324' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2907' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1738_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2936' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1835_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2357' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2877' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1736_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2961' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1737_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2994' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2325' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2358' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2945' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1862_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3003' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2326' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2908' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1741_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2921' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1783_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2899' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1802_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2892' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1781_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2359' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2878' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1739_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2962' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1740_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2976' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1782_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2983' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2327' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2360' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2946' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1865_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3004' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2328' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2909' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1744_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2937' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1838_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2361' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2879' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1742_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2963' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1743_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2995' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2329' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2362' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2947' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3005' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2330' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2910' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1747_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2922' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1786_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2933' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1826_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2893' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1784_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2363' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2880' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2964' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1746_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2977' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1785_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2991' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2331' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2364' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2948' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3006' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2332' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2911' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1750_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2938' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1841_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2365' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2881' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1748_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2965' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1749_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2996' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2333' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2366' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2949' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3007' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2334' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2912' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1753_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2923' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1789_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2928' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1807_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2903' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1814_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2900' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1805_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2894' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1787_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2367' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2882' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1751_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2966' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1752_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2978' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1788_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2984' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1806_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2987' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2335' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2368' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2950' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3008' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2336' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2913' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1756_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2939' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1844_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2369' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2883' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1754_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2967' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1755_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2997' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [17] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2337' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2370' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2951' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3009' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [18] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2338' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2914' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1759_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2924' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1792_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2934' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1829_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2895' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1790_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2371' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2884' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1757_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2968' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1758_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2979' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1791_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2992' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [19] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2339' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2372' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2952' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3010' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [20] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2340' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2915' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1762_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2940' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1847_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2373' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2885' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1760_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2969' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1761_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2998' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [21] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2341' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2374' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2953' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3011' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [22] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2342' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2916' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1765_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2925' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1795_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2929' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1810_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2932' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1823_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2901' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1808_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2896' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1793_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2375' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2886' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1763_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2970' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1764_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2980' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1794_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2985' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1809_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2990' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [23] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2343' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2376' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2954' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3012' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [24] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2344' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2917' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1768_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2941' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1850_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2377' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2887' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1766_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2971' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1767_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2999' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [25] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2345' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2378' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2955' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3013' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [26] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2346' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2918' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1771_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2926' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1798_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2935' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1832_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2897' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1796_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2379' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2888' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1769_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2972' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1770_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2981' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1797_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2993' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [27] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2347' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2380' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2956' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3014' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2348' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2919' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1774_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2942' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1853_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2381' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2889' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1772_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2973' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1773_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3000' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [29] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2349' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2382' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2957' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:229$1898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3015' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2350' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2920' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1777_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2927' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1801_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2930' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1813_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2931' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:222$1819_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2905' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1820_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2904' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1817_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2902' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1811_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2898' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1799_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2383' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$and$<techmap.v>:260$1560_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2890' (const_and) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$and$<techmap.v>:221$1775_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2974' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1776_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2982' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1800_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2986' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1812_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2988' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.lcu.$or$<techmap.v>:221$1818_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2989' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$add$fifo.v:321$125.$auto$alumacc.cc:484:replace_alu$1376 [31] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2351' (00) in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16' with constant driver `$techmap$techmap$add$fifo.v:321$125.$auto$alumacc.cc:470:replace_alu$1374.$xor$<techmap.v>:263$1562_Y [32] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1130' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1144' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1143' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1146' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1126' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1102' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1106' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1115' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1140' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1105' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1116' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1107' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1117' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1118' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1108' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1119' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1109' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1103' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1120' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1110' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1121' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1111' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1122' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1112' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1123' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1104' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1113' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1124' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1114' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1125' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1096' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1162' (?1) in module `\PCIE_trans' with constant driver `$and$PCIE_trans.v:164$85_Y = $not$PCIE_trans.v:164$83_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1163' (?1) in module `\PCIE_trans' with constant driver `$and$PCIE_trans.v:165$87_Y = \Fifo_Empty_VC0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1097' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1098' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1099' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1100' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1101' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:148$77_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1156' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1155' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1154' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1159' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1158' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1153' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1152' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1151' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1157' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1150' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1149' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1148' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1147' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1141' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1139' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1138' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1137' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1136' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1135' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1142' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1134' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1133' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1132' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1131' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1129' (01?) in module `\PCIE_trans' with constant driver `\pop_MF = $and$PCIE_trans.v:149$79_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1145' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1160' (00?) in module `\PCIE_trans' with constant driver `$ternary$PCIE_trans.v:149$80_Y [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1023' (01?) in module `\demux' with constant driver `$procmux$416_Y = \selectorL1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1015' (01?) in module `\mux' with constant driver `\selectorL1 = $logic_and$mux.v:15$50_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$994' (01?) in module `\mux' with constant driver `$procmux$484_Y = $logic_and$mux.v:32$55_Y'.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3377' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [4] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3377' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3380' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [7] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3380' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3394' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [21] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3394' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3396' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [23] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3396' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3389' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [16] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3389' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3383' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [10] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3383' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3386' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [13] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3386' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3382' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [9] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3382' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3403' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [30] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3403' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3402' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [29] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3402' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3398' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [25] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3398' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3388' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [15] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3388' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3401' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [28] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3401' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3381' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [8] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3381' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4015' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4067'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:221$1778_Y = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.lcu.$and$<techmap.v>:229$1856_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4015' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3390' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [17] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3390' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3378' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [5] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3378' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3404' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [31] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3404' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3392' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [19] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3392' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3397' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [24] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3397' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3384' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [11] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3384' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3400' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [27] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3400' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4099' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4125'.
    Redirecting output \Y: $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [3] = $techmap$sub$fifo.v:315$152.$auto$alumacc.cc:484:replace_alu$3125 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4099' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3393' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [20] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3393' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3373' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3245'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [0] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3373' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3132' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3245'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3130 [0] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3132' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3134' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3408'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3130 [2] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3134' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3376' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [3] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3376' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3111' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3408'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3107 [2] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3111' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3096' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3245'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3094 [0] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3096' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3385' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [12] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3385' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3083' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3245'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3081 [0] = $techmap$techmap$add$fifo.v:311$150.$auto$alumacc.cc:470:replace_alu$3120.$xor$<techmap.v>:262$3205_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3083' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3395' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [22] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3395' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:177:logic_reduce$3077' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3115'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$3076 = $auto$simplemap.cc:127:simplemap_reduce$3114
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$3077' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3407' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3097'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:262$3205_Y [1] = $auto$simplemap.cc:250:simplemap_eqne$3094 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3407' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3391' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [18] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3391' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$3060' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$3080'.
    Redirecting output \Y: $procmux$262_Y = $eq$fifo.v:184$143_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$3060' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$3072' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$3119'.
    Redirecting output \Y: $procmux$223_Y = $eq$fifo.v:209$146_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$3072' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$3152' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$3106'.
    Redirecting output \Y: $procmux$285_Y = $eq$fifo.v:201$145_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$3152' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$3163' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$3093'.
    Redirecting output \Y: $procmux$379_Y = $eq$fifo.v:193$144_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$3163' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3399' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3379'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [26] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3399' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3089' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3138'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3088 = $auto$simplemap.cc:127:simplemap_reduce$3137
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3089' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3379' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [6] = $techmap$techmap$sub$fifo.v:315$152.$auto$alumacc.cc:470:replace_alu$3123.$xor$<techmap.v>:263$3206_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3379' from module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2020' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [23] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2020' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2026' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [29] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2026' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2010' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [13] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2010' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2021' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [24] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2021' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2015' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [18] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2015' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2027' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [30] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2027' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2006' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [9] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2006' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1563' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1997'.
    Redirecting output \Y: $techmap$techmap$add$fifo.v:311$119.$auto$alumacc.cc:470:replace_alu$1367.$xor$<techmap.v>:262$1556_Y [0] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1563' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2012' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [15] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2012' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2008' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [11] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2008' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2009' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [12] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2009' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2652' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2660'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1835_Y = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1859_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2652' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2024' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [27] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2024' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2011' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [14] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2011' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2022' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [25] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2022' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2004' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2003'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [7] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2004' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2005' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [8] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2005' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2025' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [28] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2025' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1388' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1397'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1386 [1] = $auto$simplemap.cc:168:logic_reduce$1395 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1388' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2018' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [21] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2018' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1379' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1997'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1377 [0] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1379' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1383' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1969'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1377 [4] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1383' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1360' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1397'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1358 [1] = $auto$simplemap.cc:168:logic_reduce$1395 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1360' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1359' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1396'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1358 [0] = $auto$simplemap.cc:168:logic_reduce$1395 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1359' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2007' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [10] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2007' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1355' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1969'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1349 [4] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1355' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1336' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1968'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [3] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1336' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1335' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1967'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [2] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1335' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1333' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1997'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [0] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1333' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1318' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1968'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1313 [3] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1318' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1317' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1967'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1313 [2] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1317' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1316' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1334'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1313 [1] = $auto$simplemap.cc:250:simplemap_eqne$1331 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1316' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1300' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1968'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1295 [3] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1300' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1299' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1967'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1295 [2] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1299' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1297' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1997'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1295 [0] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1297' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1287' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1396'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1286 [0] = $auto$simplemap.cc:168:logic_reduce$1395 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1287' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1282' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1968'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1277 [3] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1282' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1281' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1967'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1277 [2] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1281' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2710' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2718'.
    Redirecting output \Y: $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [5] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2710' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [20] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2017' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1269' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1396'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1268 [0] = $auto$simplemap.cc:168:logic_reduce$1395 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1269' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1966' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1334'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [1] = $auto$simplemap.cc:250:simplemap_eqne$1331 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1966' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1263' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1967'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1259 [2] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:262$1556_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1263' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2023' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [26] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2023' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2013' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [16] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2013' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2615' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2660'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:221$1802_Y = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.lcu.$and$<techmap.v>:229$1859_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2615' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2019' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [22] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2019' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2014' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [17] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2014' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1463' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$1402'.
    Redirecting output \Y: $procmux$621_Y = $eq$fifo.v:116$102_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$1463' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1467' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$1366'.
    Redirecting output \Y: $procmux$558_Y = $eq$fifo.v:164$108_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$1467' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1495' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$1348'.
    Redirecting output \Y: $procmux$741_Y = $eq$fifo.v:156$107_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$1495' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:277:simplemap_mux$1502' is identical to cell `$auto$simplemap.cc:206:simplemap_lognot$1276'.
    Redirecting output \Y: $procmux$798_Y = $eq$fifo.v:124$103_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:277:simplemap_mux$1502' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2016' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2028'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [19] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2016' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1362' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1399'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1361 = $auto$simplemap.cc:168:logic_reduce$1398
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1362' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1324' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1342'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1322 [1] = $auto$simplemap.cc:127:simplemap_reduce$1340 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1324' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1306' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1342'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1304 [1] = $auto$simplemap.cc:127:simplemap_reduce$1340 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1306' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1305' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1387'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1304 [0] = $auto$simplemap.cc:127:simplemap_reduce$1386 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1305' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1288' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1342'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1286 [1] = $auto$simplemap.cc:127:simplemap_reduce$1340 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1288' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2718' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2699'.
    Redirecting output \Y: $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [4] = $techmap$sub$fifo.v:315$121.$auto$alumacc.cc:484:replace_alu$1372 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2718' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2028' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2002'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [31] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2028' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2002' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2003'.
    Redirecting output \Y: $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [5] = $techmap$techmap$sub$fifo.v:315$121.$auto$alumacc.cc:470:replace_alu$1370.$xor$<techmap.v>:263$1557_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2002' from module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 104 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$3142'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3387'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3925'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4067'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$4125'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4141'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$4283'.
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1294'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1312'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1330'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1394'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2003'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2577'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2660'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2699'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2749'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2764'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2891'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2906'.
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

10.8. Executing OPT_EXPR pass (perform const folding).

10.9. Rerunning OPT passes. (Maybe there is more to do..)

10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\ff_d\N=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\ff_d\N=6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \demux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
  Optimizing cells in module $paramod\ff_d\N=1.
  Optimizing cells in module $paramod\ff_d\N=6.
  Optimizing cells in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
  Optimizing cells in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
  Optimizing cells in module \PCIE_trans.
  Optimizing cells in module \demux.
  Optimizing cells in module \mux.
Performed a total of 0 changes.

10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3'.
Finding identical cells in module `$paramod\ff_d\N=1'.
Finding identical cells in module `$paramod\ff_d\N=6'.
Finding identical cells in module `$paramod\fifo\N=2\M=2\ADDR_WIDTH=4'.
Finding identical cells in module `$paramod\fifo\N=4\M=4\ADDR_WIDTH=16'.
Finding identical cells in module `\PCIE_trans'.
Finding identical cells in module `\demux'.
Finding identical cells in module `\mux'.
Removed a total of 0 cells.

10.13. Executing OPT_RMDFF pass (remove dff with constant values).

10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3..
Finding unused cells or wires in module $paramod\ff_d\N=1..
Finding unused cells or wires in module $paramod\ff_d\N=6..
Finding unused cells or wires in module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4..
Finding unused cells or wires in module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16..
Finding unused cells or wires in module \PCIE_trans..
Finding unused cells or wires in module \demux..
Finding unused cells or wires in module \mux..

10.15. Executing OPT_EXPR pass (perform const folding).

10.16. Finished OPT passes. (There is nothing left to do.)

11. Executing FLATTEN pass (flatten design).
Mapping PCIE_trans.MainFifo using $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
Mapping PCIE_trans.ff_d_MF_DVCID using $paramod\ff_d\N=1.
Mapping PCIE_trans.demux_vc_id using demux.
Mapping PCIE_trans.VC0Fifo using $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
Mapping PCIE_trans.VC1Fifo using $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
Mapping PCIE_trans.MainFifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.VC1Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Mapping PCIE_trans.VC0Fifo.memoria using $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
No more expansions possible.
Deleting now unused module $paramod\dual_port_memory\DATA_WIDTH=6\ADDR_WIDTH=2\MEM_SIZE=3.
Deleting now unused module $paramod\ff_d\N=1.
Deleting now unused module $paramod\ff_d\N=6.
Deleting now unused module $paramod\fifo\N=2\M=2\ADDR_WIDTH=4.
Deleting now unused module $paramod\fifo\N=4\M=4\ADDR_WIDTH=16.
Deleting now unused module demux.
Deleting now unused module mux.

12. Executing OPT pass (performing simple optimizations).

12.1. Executing OPT_EXPR pass (perform const folding).

12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
  Cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3173' is identical to cell `$techmap\ff_d_MF_DVCID.$auto$simplemap.cc:277:simplemap_mux$3028'.
    Redirecting output \Y: $techmap\MainFifo.$0\pop_int[0:0] = $techmap\ff_d_MF_DVCID.$0\Data_Out[0:0]
    Removing $_MUX_ cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3173' from module `\PCIE_trans'.
  Cell `$techmap\ff_d_MF_DVCID.$auto$simplemap.cc:420:simplemap_dff$3029' is identical to cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3195'.
    Redirecting output \Q: \ff_d_MF_DVCID.Data_Out = \MainFifo.pop_int
    Removing $_DFF_P_ cell `$techmap\ff_d_MF_DVCID.$auto$simplemap.cc:420:simplemap_dff$3029' from module `\PCIE_trans'.
Removed a total of 2 cells.

12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PCIE_trans.
Performed a total of 0 changes.

12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
Removed a total of 0 cells.

12.6. Executing OPT_RMDFF pass (remove dff with constant values).

12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1181'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1195'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1180'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1179'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1178'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1177'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1176'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1175'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1174'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1173'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1172'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1171'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1170'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1169'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1168'.
  removing unused `$_NOT_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:37:simplemap_not$1219'.
  removing unused `$_NOT_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:37:simplemap_not$1218'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1258'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1257'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1250'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1249'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1248'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1247'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1196'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1246'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1245'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1243'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1242'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1241'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1240'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1239'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1238'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1237'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1197'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1234'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1233'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1232'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1198'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1231'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1230'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1229'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1228'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1227'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1226'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1225'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1224'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1223'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1222'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1221'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1220'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1215'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1214'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1213'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1211'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1492'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1493'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1494'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1496'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1212'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1211'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1210'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1207'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1206'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1205'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1204'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1203'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1202'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1199'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1198'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1194'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1197'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1196'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1199'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1194'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1191'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1497'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1498'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1195'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1499'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1190'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1235'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1500'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1236'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1501'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1234'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1236'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1491'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1239'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1240'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1241'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1215'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1490'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1514'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1489'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1242'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1243'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1245'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1220'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1221'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1488'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1513'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1246'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1247'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1248'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1222'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1487'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1512'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1486'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1249'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1250'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1257'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1485'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1258'.
  removing unused `$_NOT_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:37:simplemap_not$1219'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1168'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1223'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1484'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1481'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1483'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1482'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1480'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1479'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1476'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1478'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1477'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1461'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1170'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1169'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1460'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1172'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1459'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1511'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1458'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1457'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1228'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1227'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1226'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1225'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1447'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1456'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1455'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1454'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1453'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1452'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1451'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1450'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1449'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1448'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1431'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1446'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1440'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1445'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1439'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1444'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1438'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1443'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1437'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1442'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1436'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1441'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1435'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1434'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1433'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1432'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1430'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1429'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1428'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1427'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1426'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1425'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1424'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1423'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1422'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1421'.
  removing unused `$_NOT_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:206:simplemap_lognot$1276'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1405'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:235:simplemap_logbin$1403'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:235:simplemap_logbin$1373'.
  removing unused `$_NOT_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:206:simplemap_lognot$1348'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1183'.
  removing unused `$_OR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:136:simplemap_reduce$1392'.
  removing unused `$_OR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:136:simplemap_reduce$1390'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1235'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1212'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1510'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1175'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1174'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1184'.
  removing unused `$_NOT_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:37:simplemap_not$1218'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1181'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1180'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1253'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1177'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1182'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1232'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1229'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1251'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1224'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1237'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1171'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1230'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1255'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1252'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1176'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1233'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1178'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1173'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1254'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1185'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1213'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1089'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1088'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1087'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1086'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1085'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1084'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1083'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1082'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1081'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1080'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1079'.
  removing unused `$_DFF_P_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:420:simplemap_dff$1078'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1076'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1075'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1074'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1073'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1072'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1071'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1070'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1069'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1068'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1067'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1066'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1065'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1064'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1063'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1062'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1061'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1060'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1059'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1058'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1057'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1056'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1055'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1054'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1053'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1052'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1051'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1050'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1049'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1048'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1047'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1046'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1045'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1044'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1043'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1042'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1041'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1040'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1039'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1038'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1037'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1036'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1035'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1034'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1033'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1032'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1031'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1030'.
  removing unused `$_MUX_' cell `$techmap\demux_vc_id.$auto$simplemap.cc:277:simplemap_mux$1029'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3200'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3199'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3198'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3197'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3196'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3191'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3188'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3187'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3186'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3185'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.$auto$simplemap.cc:420:simplemap_dff$3177'.
  removing unused `$_NOT_' cell `$techmap\MainFifo.$auto$simplemap.cc:37:simplemap_not$3144'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3171'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3170'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3169'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3168'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3167'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3166'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3165'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3164'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3162'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3161'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3160'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3159'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3158'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3157'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3156'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3155'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3151'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3150'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3149'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3148'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3147'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3146'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3074'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3073'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3066'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3065'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3064'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3063'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3035'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1216'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1182'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1254'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3032'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.$auto$simplemap.cc:277:simplemap_mux$3030'.
  removing unused `$_AND_' cell `$techmap\MainFifo.$auto$simplemap.cc:235:simplemap_logbin$3145'.
  removing unused `$_AND_' cell `$techmap\MainFifo.$auto$simplemap.cc:235:simplemap_logbin$3143'.
  removing unused `$_NOT_' cell `$techmap\MainFifo.$auto$simplemap.cc:206:simplemap_lognot$3093'.
  removing unused `$_OR_' cell `$techmap\MainFifo.$auto$simplemap.cc:136:simplemap_reduce$3140'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1509'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1231'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1179'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1508'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1507'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1238'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1214'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1506'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1505'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1253'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1504'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1255'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1256'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1192'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1193'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1503'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1209'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1208'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1201'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1200'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1252'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1251'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1185'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1184'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1183'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1217'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1209'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1208'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1191'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1190'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1192'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1189'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1188'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1186'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1187'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1210'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1201'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1200'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1255'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1254'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1253'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1252'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1251'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1184'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1183'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1182'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1181'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1180'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1178'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1177'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1176'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1174'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1175'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1172'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1171'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1170'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1169'.
  removing unused `$_DFF_P_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1168'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1245'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1246'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1242'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1241'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1249'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1240'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1248'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1239'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1247'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1238'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1236'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1235'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1234'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1233'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1232'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1230'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1228'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1229'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1227'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1226'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1224'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1223'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1222'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1221'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1220'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1214'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1213'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1212'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1211'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1210'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1206'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1205'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1204'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1203'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1202'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1198'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1197'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1196'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1195'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1194'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1190'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1189'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1188'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1186'.
  removing unused `$_MUX_' cell `$techmap\MainFifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1187'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2943'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2875'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2801'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2733'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2322'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2321'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2320'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2287'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2161'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2160'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2159'.
  removing unused `$_XOR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:85:simplemap_bitop$2126'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1552'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1551'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1550'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1549'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1548'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1547'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1546'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1545'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1544'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1543'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1542'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1541'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1540'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1537'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1536'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1535'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1534'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1189'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:420:simplemap_dff$1256'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1188'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1207'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1216'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1186'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1187'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1193'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:85:simplemap_bitop$1217'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1533'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1532'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1526'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1525'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1524'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1523'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1522'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1521'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1520'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1519'.
  removing unused `$_DFF_P_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:420:simplemap_dff$1518'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1517'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1516'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1515'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1514'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1513'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1512'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1511'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1510'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1509'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1508'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1507'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1506'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1505'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1504'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1503'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1501'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1500'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1499'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1498'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1497'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1496'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1494'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1493'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1492'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1491'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1490'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1489'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1488'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1487'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1486'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1485'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1484'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1483'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1482'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1481'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1480'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1479'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1478'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1477'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1476'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1461'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1460'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1459'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1458'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1457'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1456'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1455'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1454'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1453'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1452'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1451'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1450'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1449'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1448'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1447'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1446'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1445'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1444'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1443'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1442'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1441'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1440'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1439'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1438'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1437'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1436'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1435'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1434'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1433'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1432'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1431'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1430'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1429'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1428'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1427'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1426'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1425'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1424'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1423'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1422'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1421'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:277:simplemap_mux$1405'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:235:simplemap_logbin$1403'.
  removing unused `$_AND_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:235:simplemap_logbin$1373'.
  removing unused `$_NOT_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:206:simplemap_lognot$1348'.
  removing unused `$_NOT_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:206:simplemap_lognot$1276'.
  removing unused `$_OR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:136:simplemap_reduce$1392'.
  removing unused `$_OR_' cell `$techmap\VC1Fifo.$auto$simplemap.cc:136:simplemap_reduce$1390'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2943'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2875'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2801'.
  removing unused `$_AND_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2733'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2322'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2321'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2320'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2287'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2161'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2160'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2159'.
  removing unused `$_XOR_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:85:simplemap_bitop$2126'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1552'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1551'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1550'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1549'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1548'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1547'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1546'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1545'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1544'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1543'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1542'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1541'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1540'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1537'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1536'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1535'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1534'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1533'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1532'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1526'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1525'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1524'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1523'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1522'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1521'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1520'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1519'.
  removing unused `$_DFF_P_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:420:simplemap_dff$1518'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1517'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1516'.
  removing unused `$_MUX_' cell `$techmap\VC0Fifo.$auto$simplemap.cc:277:simplemap_mux$1515'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1206'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1205'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1204'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1203'.
  removing unused `$_MUX_' cell `$techmap\VC1Fifo.memoria.$auto$simplemap.cc:277:simplemap_mux$1202'.
  removing unused non-port wire \VC0Fifo.memoria.oDataOut.
  removing unused non-port wire \VC0Fifo.memoria.iWriteEnable.
  removing unused non-port wire \VC0Fifo.memoria.iWriteAddress.
  removing unused non-port wire \VC0Fifo.memoria.iReadEnable.
  removing unused non-port wire \VC0Fifo.memoria.iReadAddress.
  removing unused non-port wire \VC0Fifo.memoria.iDataIn.
  removing unused non-port wire \VC0Fifo.memoria.Ram[3].
  removing unused non-port wire \VC0Fifo.memoria.Ram[2].
  removing unused non-port wire \VC0Fifo.memoria.Ram[1].
  removing unused non-port wire \VC0Fifo.memoria.Ram[0].
  removing unused non-port wire \VC1Fifo.memoria.oDataOut.
  removing unused non-port wire \VC1Fifo.memoria.iWriteEnable.
  removing unused non-port wire \VC1Fifo.memoria.iWriteAddress.
  removing unused non-port wire \VC1Fifo.memoria.iReadEnable.
  removing unused non-port wire \VC1Fifo.memoria.iReadAddress.
  removing unused non-port wire \VC1Fifo.memoria.iDataIn.
  removing unused non-port wire \VC1Fifo.memoria.Ram[3].
  removing unused non-port wire \VC1Fifo.memoria.Ram[2].
  removing unused non-port wire \VC1Fifo.memoria.Ram[1].
  removing unused non-port wire \VC1Fifo.memoria.Ram[0].
  removing unused non-port wire \VC1Fifo.wr_ptr_int.
  removing unused non-port wire \VC1Fifo.wr_ptr.
  removing unused non-port wire \VC1Fifo.rd_ptr.
  removing unused non-port wire \VC1Fifo.push_int.
  removing unused non-port wire \VC1Fifo.pop_int.
  removing unused non-port wire \VC1Fifo.Umbral.
  removing unused non-port wire \VC1Fifo.Fifo_Full.
  removing unused non-port wire \VC1Fifo.Fifo_Data_out.
  removing unused non-port wire \VC1Fifo.Fifo_Data_in_int.
  removing unused non-port wire \VC1Fifo.Fifo_Data_in.
  removing unused non-port wire \VC1Fifo.Error_Fifo.
  removing unused non-port wire \VC1Fifo.Almost_Full.
  removing unused non-port wire \VC1Fifo.Almost_Empty.
  removing unused non-port wire \VC0Fifo.wr_ptr_int.
  removing unused non-port wire \VC0Fifo.wr_ptr.
  removing unused non-port wire \VC0Fifo.rd_ptr.
  removing unused non-port wire \VC0Fifo.push_int.
  removing unused non-port wire \VC0Fifo.pop_int.
  removing unused non-port wire \VC0Fifo.Umbral.
  removing unused non-port wire \VC0Fifo.Fifo_Full.
  removing unused non-port wire \VC0Fifo.Fifo_Data_out.
  removing unused non-port wire \VC0Fifo.Fifo_Data_in_int.
  removing unused non-port wire \VC0Fifo.Fifo_Data_in.
  removing unused non-port wire \VC0Fifo.Error_Fifo.
  removing unused non-port wire \VC0Fifo.Almost_Full.
  removing unused non-port wire \VC0Fifo.Almost_Empty.
  removing unused non-port wire \demux_vc_id.dataout1.
  removing unused non-port wire \demux_vc_id.dataout0.
  removing unused non-port wire \MainFifo.Umbral.
  removing unused non-port wire \MainFifo.Fifo_Full.
  removing unused non-port wire \MainFifo.Error_Fifo.
  removing unused non-port wire \MainFifo.Almost_Full.
  removing unused non-port wire \MainFifo.Almost_Empty.
  removing unused non-port wire \Almost_Empty_MF.
  removing unused non-port wire \Almost_Empty_VC1.
  removing unused non-port wire \Almost_Empty_VCO.
  removing unused non-port wire \Almost_Full_MF.
  removing unused non-port wire \Almost_Full_VC1.
  removing unused non-port wire \Almost_Full_VCO.
  removing unused non-port wire \Error_Fifo_MF.
  removing unused non-port wire \Error_Fifo_VC0.
  removing unused non-port wire \Error_Fifo_VC1.
  removing unused non-port wire \Fifo_Data_out_VC1.
  removing unused non-port wire \Fifo_Data_out_VCO.
  removing unused non-port wire \Fifo_Full_MF.
  removing unused non-port wire \Fifo_Full_VC0.
  removing unused non-port wire \Fifo_Full_VC1.
  removing unused non-port wire \Umbral_MF.
  removing unused non-port wire \Umbral_VC0.
  removing unused non-port wire \Umbral_VC1.
  removing unused non-port wire \data_in_VC0.
  removing unused non-port wire \data_in_VC1.
  removed 72 unused temporary wires.

12.8. Executing OPT_EXPR pass (perform const folding).

12.9. Rerunning OPT passes. (Maybe there is more to do..)

12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PCIE_trans..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PCIE_trans.
Performed a total of 0 changes.

12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PCIE_trans'.
Removed a total of 0 cells.

12.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..

12.15. Executing OPT_EXPR pass (perform const folding).

12.16. Finished OPT passes. (There is nothing left to do.)

13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PCIE_trans..
  removing unused non-port wire \MainFifo.Fifo_Data_in.
  removing unused non-port wire \MainFifo.Fifo_Data_out.
  removing unused non-port wire \MainFifo.Fifo_Empty.
  removing unused non-port wire \MainFifo.Pausa.
  removing unused non-port wire \MainFifo.clk.
  removing unused non-port wire \MainFifo.memoria.Clock.
  removing unused non-port wire \MainFifo.memoria.iDataIn.
  removing unused non-port wire \MainFifo.memoria.oDataOut.
  removing unused non-port wire \MainFifo.pop_int.
  removing unused non-port wire \MainFifo.push.
  removing unused non-port wire \MainFifo.push_int.
  removing unused non-port wire \MainFifo.rd_ptr.
  removing unused non-port wire \MainFifo.reset_L.
  removing unused non-port wire \MainFifo.wr_ptr_int.
  removing unused non-port wire \VC0Fifo.Fifo_Empty.
  removing unused non-port wire \VC0Fifo.Pausa.
  removing unused non-port wire \VC0Fifo.clk.
  removing unused non-port wire \VC0Fifo.memoria.Clock.
  removing unused non-port wire \VC0Fifo.reset_L.
  removing unused non-port wire \VC1Fifo.Fifo_Empty.
  removing unused non-port wire \VC1Fifo.Pausa.
  removing unused non-port wire \VC1Fifo.clk.
  removing unused non-port wire \VC1Fifo.memoria.Clock.
  removing unused non-port wire \VC1Fifo.reset_L.
  removing unused non-port wire \demux_vc_id.clk.
  removing unused non-port wire \demux_vc_id.data_in.
  removing unused non-port wire \demux_vc_id.reset_L.
  removing unused non-port wire \demux_vc_id.valid_0.
  removing unused non-port wire \demux_vc_id.valid_1.
  removing unused non-port wire \demux_vc_id.valid_in.
  removing unused non-port wire \ff_d_MF_DVCID.Data_Out.
  removing unused non-port wire \ff_d_MF_DVCID.Data_in.
  removing unused non-port wire \ff_d_MF_DVCID.clk.
  removing unused non-port wire \ff_d_MF_DVCID.reset_L.
  removing unused non-port wire \out_pop_MF.
  removing unused non-port wire \pop_MF.
  removing unused non-port wire \pop_vc0.
  removing unused non-port wire \pop_vc1.
  removing unused non-port wire \push_vc0.
  removing unused non-port wire \push_vc1.
  removed 40 unused temporary wires.

14. Executing ABC pass (technology mapping using ABC).

14.1. Extracting gate netlist of module `\PCIE_trans' to `<abc-temp-dir>/input.blif'..
Extracted 252 gates and 294 wires to a netlist network with 39 inputs and 36 outputs.

14.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/cesar/Desktop/DigitalesII/Proyecto2/Proyecto2/ModuleTop/cmos_cells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Library "demo" from "/home/cesar/Desktop/DigitalesII/Proyecto2/Proyecto2/ModuleTop/cmos_cells.lib" has 4 cells (2 skipped: 2 seq; 0 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.00 MB. Time =     0.00 sec
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o 
ABC: + strash 
ABC: + dch -f 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:      109
ABC RESULTS:               NOR cells:       98
ABC RESULTS:               NOT cells:       44
ABC RESULTS:        internal signals:      219
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       36
Removing temp directory.

15. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF (noninv, pins=3, area=18.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=18.00) is a direct match for cell type $_DFFSR_PPP_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFFSR_PNN_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_N_ from mapping for $_DFF_P_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFF _DFF_N_ (.C(~C), .D( D), .Q( Q));
    DFF _DFF_P_ (.C( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.C(~C), .D( D), .Q( Q), .R(~R), .S( 0));
    DFFSR _DFF_NN1_ (.C(~C), .D( D), .Q( Q), .R( 0), .S(~R));
    DFFSR _DFF_NP0_ (.C(~C), .D( D), .Q( Q), .R( R), .S( 0));
    DFFSR _DFF_NP1_ (.C(~C), .D( D), .Q( Q), .R( 0), .S( R));
    DFFSR _DFF_PN0_ (.C( C), .D( D), .Q( Q), .R(~R), .S( 0));
    DFFSR _DFF_PN1_ (.C( C), .D( D), .Q( Q), .R( 0), .S(~R));
    DFFSR _DFF_PP0_ (.C( C), .D( D), .Q( Q), .R( R), .S( 0));
    DFFSR _DFF_PP1_ (.C( C), .D( D), .Q( Q), .R( 0), .S( R));
    DFFSR _DFFSR_NNN_ (.C(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_NNP_ (.C(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPN_ (.C(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPP_ (.C(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNN_ (.C( C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNP_ (.C( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPN_ (.C( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPP_ (.C( C), .D( D), .Q( Q), .R( R), .S( S));
Mapping DFF cells in module `\PCIE_trans':
  mapped 36 $_DFF_P_ cells to \DFF cells.
Removed 0 unused cells and 222 unused wires.

16. Executing Verilog backend.
Dumping module `\PCIE_trans'.

End of script. Logfile hash: dd01c351f1
CPU: user 2.20s system 0.01s, MEM: 19.86 MB total, 15.26 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-zWLHjG/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 22% 14x opt_merge (0 sec), 20% 14x opt_expr (0 sec), ...
